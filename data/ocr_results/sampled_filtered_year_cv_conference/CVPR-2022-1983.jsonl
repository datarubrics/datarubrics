{"id": "CVPR-2022-1983", "page_num": 9, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"[1] Joel A.E. Andersson, Joris Gillis, Greg Horn, James B. Rawlings, and Moritz Diehl. CasADi: a software framework for nonlinear optimization and optimal control. Mathematical Programming Computation, 11(1):1\u201336, 2019.\\n\\n[2] Pascal Henry Biwole, Wei Yan, Yanhui Zhang, and Jean Jacques Roux. A complete 3D particle tracking algorithm and its applications to the indoor airflow study. Measurement Science and Technology, 20(11), 2009.\\n\\n[3] Geoffrey Cross and Andrew Zisserman. Quadric reconstruction from dual-space geometry. Proceedings of the IEEE International Conference on Computer Vision, pages 25\u201331, 1998.\\n\\n[4] G. E. Elsinga, F. Scarano, B. Wieneke, and B. W. Van Oudheusden. Tomographic particle image velocimetry. Experiments in Fluids, 41(6):933\u2013947, 2006.\\n\\n[5] G. E. Elsinga, J. Westerweel, F. Scarano, and M. Novara. On the velocity of ghost particles and the bias errors in Tomographic-PIV. Experiments in Fluids, 50(4):825\u2013838, 2011.\\n\\n[6] Ricardo Fabbri and Benjamin Kimia. 3D curve sketch: Flexible curve-based stereo reconstruction and calibration. Proceedings of the IEEE Computer Society Conference on Computer Vision and Pattern Recognition, pages 1538\u20131545, 2010.\\n\\n[7] Olivier Faugeras and Luc Robert. What can two images tell us about a third one? International Journal of Computer Vision, 18(1):5\u201319, 1996.\\n\\n[8] LaVision GmbH. DaVis 10.1.2, 2020.\\n\\n[9] Micaiah John Muller Hill. On a spherical vortex. Philosophical Transactions of the Royal Society of London. (A.), (185):213\u2013245, 1894.\\n\\n[10] Kenichi Kanatani and Wu Liu. 3D Interpretation of Conics and Orthogonality. CVGIP: Image Understanding, 58(3), 1993.\\n\\n[11] Katrin Lasinger, Christoph Vogel, and Konrad Schindler. Volumetric Flow Estimation for Incompressible Fluids using the Stationary Stokes Equations. Proceedings of the IEEE International Conference on Computer Vision, 2017-Octob:2584\u20132592, 2017.\\n\\n[12] Zhong Li, Yu Ji, Jingyi Yu, and Jinwei Ye. 3D Fluid Flow Reconstruction Using. 4:120\u2013136.\\n\\n[13] Hans-Gerd Maas. Complexity analysis for the establishment of image correspondences of dense spatial target fields. International Archives of Photogrammetry and Remote Sensing, 29:102\u2013107, 1992.\\n\\n[14] H. G. Maas, A. Gruen, and D. Papantoniou. Particle tracking velocimetry in three-dimensional flows - Part 1. Photogrammetric determination of particle coordinates. Experiments in Fluids, 15(2):133\u2013146, jul 1993.\\n\\n[15] Matthias Machacek and Thomas Rosgen. Development of a quantitative flow visualization tool for applications in industrial wind tunnels. In ICASF 2001 Record, 19th International Congress on Instrumentation in Aerospace Simulation Facilities (Cat. No. 01CH37215), pages 125\u2013134. IEEE, 2001.\\n\\n[16] D. M\u00a8uller, B. M\u00a8uller, and U. Renz. Three-dimensional particle-streak tracking (PST) velocity measurements of a heat exchanger inlet flow. Experiments in Fluids, 30(6):645\u2013656, 2001.\\n\\n[17] Matteo Novara, Daniel Schanz, Reinhard Geisler, Sebastian Gesemann, Christina Voss, and Andreas Schr\u00a8oder. Multi-exposed recordings for 3D Lagrangian particle tracking with Multi-Pulse Shake-The-Box. Experiments in Fluids, 60(3):1\u201319, 2019.\\n\\n[18] Long Quan. Conic Reconstruction and Correspondence from Two Views. IEEE Transactions on Pattern Analysis and Machine Intelligence, 18(2):1\u201313, 1996.\\n\\n[19] Daniel Schanz, Sebastian Gesemann, and Andreas Schr\u00a8oder. Shake-The-Box: Lagrangian particle tracking at high particle image densities. Experiments in Fluids, 57(5):1\u201327, 2016.\\n\\n[20] Daniel Schanz, Matteo Novara, and Andreas Schr\u00a8oder. Shake-The-Box particle tracking with variable time-steps in flows with high velocity range (VT-STB). 3rd Workshop and 1st Challenge on Data Assimilation & CFD Processing for PIV and Lagrangian Particle Tracking, pages 19\u201320, 2020.\\n\\n[21] Cordelia Schmid and Andrew Zisserman. Geometry and matching of lines and curves over multiple views. International Journal of Computer Vision, 40(3):199\u2013233, 2000.\\n\\n[22] Amnon Shashua, Shai Avidan, and Michael Werman. Trajectory triangulation over conic sections. Proceedings of the IEEE International Conference on Computer Vision, 1:330\u2013336, 1999.\\n\\n[23] Andreas W\u00a8achter and Lorenz T Biegler. On the implementation of an interior-point filter line-search algorithm for large-scale nonlinear programming. Mathematical programming, 106(1):25\u201357, 2006.\\n\\n[24] Huan Wang, Guijin Wang, and Xianting Li. High-performance color sequence particle streak velocimetry for 3D airflow measurement. Applied Optics, 57(6):1518, 2018.\\n\\n[25] Bernhard Wieneke. Iterative reconstruction of volumetric particle distribution. Measurement Science and Technology, 24(2), 2013.\\n\\n[26] Jinhui Xiong, Qiang Fu, Ramzi Idoughi, and Wolfgang Heidrich. Reconfigurable rainbow PIV for 3D flow measurement. IEEE International Conference on Computational Photography, ICCP 2018, pages 1\u20139, 2018.\\n\\n[27] Jinhui Xiong, Ramzi Idoughi, Andres A. Aguirre-Pablo, Abdulrahman B. Aljedaani, Xiong Dun, Qiang Fu, Sigurdur T. Thoroddsen, and Wolfgang Heidrich. Rainbow particle imaging velocimetry for dense 3D fluid velocity imaging. ACM Transactions on Graphics, 36(4), 2017.\"}"}
{"id": "CVPR-2022-1983", "page_num": 1, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Using 3D Topological Connectivity for Ghost Particle Reduction in Flow Reconstruction\\n\\nChristina Tsalicoglou Thomas R\u00f6sgen\\nInstitute of Fluid Dynamics, ETH Zurich\\nZurich, Switzerland\\n{ctsalico, roesgen}@ethz.ch\\n\\nAbstract\\n\\nVolumetric flow velocimetry for experimental fluid dynamics relies primarily on the 3D reconstruction of point objects, which are the detected positions of tracer particles identified in images obtained by a multi-camera setup. By assuming that the particles accurately follow the observed flow, their displacement over a known time interval is a measure of the local flow velocity. The number of particles imaged in a 1 Megapixel image is typically in the order of $10^3$-$10^4$, resulting in a large number of consistent but incorrect reconstructions (no real particle in 3D), that must be eliminated through tracking or intensity constraints. In an alternative method, 3D Particle Streak Velocimetry (3D-PSV), the exposure time is increased, and the particles' pathlines are imaged as \u201cstreaks\u201d. We treat these streaks (a) as connected endpoints and (b) as conic section segments and develop a theoretical model that describes the mechanisms of 3D ambiguity generation and shows that streaks can drastically reduce reconstruction ambiguities. Moreover, we propose a method for simultaneously estimating these short, low-curvature conic section segments and their 3D position from multiple camera views. Our results validate the theory, and the streak and conic section reconstruction method produces far fewer ambiguities than simple particle reconstruction, outperforming current state-of-the-art particle tracking software on the evaluated cases.\\n\\n1. Introduction\\n\\nVolumentric velocimetry techniques for fluid flows enable the analysis of complex flow fields and their complete spatio-temporal evolution, by providing all three velocity components of the flow in discrete positions in a 3D measurement volume. Most volumetric methods require a minimum of two synchronized cameras and record the positions of tracers over time as they follow the flow. The most common approaches are 3D Particle Tracking Velocimetry (3D-PTV) [14] and Tomographic Particle Image Velocimetry (Tomo-PIV) [4]. In 3D-PTV, the tracer particles are reconstructed in 3D space by triangulation, while in Tomo-PIV a light intensity field is reconstructed tomographically. Both methods result in \u201cghost particles\u201d, which are consistently reconstructed particles for which it remains undecidable whether they are real or artifacts of the reconstruction process. The tracer density in these applications is in the order of $10^3$-$10^4$ particles in a 1 Mpx image, resulting in a large number of ghost particles if left untreated.\\n\\nThere are several ways to reduce the number of ghost particles and improve the reconstruction quality: increasing the number of cameras, reducing the seeding density of tracer particles, or rejecting particles using criteria such as their intensity, estimated velocity, or trajectory smoothness (e.g. [19]). Still, triangulating particles independently in time, frame-by-frame, results in a loss of information which needs to be recovered using assumptions about the flow field. Handling regions with large velocity differences remains a challenge, as the particle displacement assumptions often fail to eliminate ghost tracks [20].\\n\\nA less common variant of 3D-PTV is 3D Particle Streak Velocimetry (3D-PSV), where the cameras\u2019 exposure time is increased, so that the tracer particles\u2019 pathlines over the exposure time are recorded as \u201cstreaks\u201d [2, 15, 16, 24]. Therefore, the tracking information is retained in a single image and can be used in the triangulation step to eliminate some of the reconstruction ambiguities. Furthermore, the displacement of both fast and slow-moving particles is encoded in the streaks.\\n\\nFigure 1. Epipolar and epipolar tangency constraints for conic section segments reduce the reconstruction ambiguities, \u201cghosts\u201d, in 3D flow reconstruction from streaks.\"}"}
{"id": "CVPR-2022-1983", "page_num": 2, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Our theory and validation results fully agree, and ghost reconstructions are virtually eliminated when reconstructing a realistic flow field. Experimental results confirm the practical value of our reconstruction method. Therefore, our work challenges the established preference for point reconstruction and provides theoretical argumentation for why using topological connectivity is beneficial in reducing the number of ghost particles in flow reconstruction.\\n\\n2. Related work\\n\\nWe build on previous work in experimental fluid dynamics and photogrammetric computer vision. The problem of ghost particles in the reconstruction of densely seeded flows has been identified and described analytically by Maas et al. [13,14] as a function of the number of particles per pixel, volume depth, and relative position of the cameras, using arguments from epipolar geometry. Elsinga et al. [5] used similar arguments to describe the number of expected ghost particles in Tomo-PIV . Modern 3D-PTV methods manage to significantly reduce ghost particles through Iterative Particle Reconstruction [25], tracking particles over multiple time-steps [19], imposing physical constraints on the reconstructed flow field [11] or using multi-exposed recordings [17]. Other approaches use colored light or focus/defocus to encode the depth information [12, 26, 27].\\n\\nHere, we harness the information of the endpoint connectivity and shape of streaks that represent particles' pathlines to reduce the number of ambiguous reconstructions. We employ well-established arguments about point, line, and conic section reconstruction to determine by how much the number of reconstruction ambiguities can be reduced when using long-exposure imaging in 3D-PSV . Conic sections are chosen to represent the shape of streaks as they are projectively invariant and offer more correspondence conditions than points and lines, without requiring point-wise matching as more complex curves do (e.g., [6]). Fundamental work on conic section matching has been performed by [3,7,10,18,21]. To estimate and match conic section segments, we use a variant of the method proposed by [21] for our RANSAC-type baseline simulation (supp. mat.), while our optimization problem is similar to that posed by [22].\\n\\n3. Our approach\\n\\nGhost particle generation is one of the fundamental challenges in 3D-PTV , and is caused by ambiguities inherent in projective geometry. To drastically reduce the ambiguities generated by reconstructing particles, we propose reconstructing streaks: short lines or curve segments that result from long-exposure recordings of the pathlines of moving particles. We perform an analysis of ghost streak generation probabilities for linear and curved streaks and propose a method for matching curved streaks across multiple views.\\n\\n3.1. Preliminaries\\n\\nThe generation of ghost particles is a by-product of projecting 3D points onto two dimensions, as any number of points along a camera's line of sight are projected to a single position in the image plane. Though the depth can already be reconstructed by using a second camera, constellations can exist for which more consistent 3D positions can be reconstructed than the actual number of corresponding particles imaged by the two cameras.\\n\\nMaas [13] described the probability of generating such reconstruction ambiguities from two images with randomly distributed particles as follows: a particle in one image, $I_1$, defines an epipolar line $l'_1$ in the second image, $I'_2$, and ambiguities occur when more than one particle coincides with $l'_1$. Given two images with co-planar image planes and $n$ particles in each, the probability of more than one particle being on $l'_1$ is then the probability that at least one of the remaining $n-1$ particles coincides with the epipolar line $l'_1$. In reality, the region where a particle must be located to generate a valid reconstruction is, rather than an epipolar line, an epipolar window $f'_1$ of width $2d(\\\\pm d)$ and length $L$ around $l'_1$, where $d$ is the allowed distance from the epipolar line and $L$ is the length of $l'_1$. The area of this epipolar window is then $f_1 = 2dL$, and the probability of any one particle lying in this window is $f_1/F$, where $F$ is the total area of the image. Therefore, the average number of ambiguous reconstructions is,\\n\\n$$n_p = \\\\left( n - 1 \\\\right) \\\\frac{f_1}{F}. \\\\tag{1}$$\\n\\nThis process must be considered for each of the $n$ particles.\"}"}
{"id": "CVPR-2022-1983", "page_num": 3, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Thus, the total number of ambiguities is\\n\\n\\\\[ N_p = (n^2 - n) \\\\frac{f}{F}. \\\\]\\n\\nIt must be noted that Maas limits the search length of the epipolar line based on the depth of the observed volume. In the following analysis we neglect this constraint.\\n\\n3.2. Probability models for ghost streak generation\\n\\n3.2.1 Setup\\n\\nA linear streak in image \\\\( I \\\\) defines, by its endpoints, two epipolar lines \\\\( l'_a \\\\) and \\\\( l'_b \\\\) in \\\\( I' \\\\) (Fig. 2). A 3D streak can be reconstructed when there exists at least one streak connecting the two epipolar lines \\\\( l'_a \\\\), \\\\( l'_b \\\\), and ambiguities occur when more than one streak connects these two epipolar lines. For our analysis we restrict ourselves to a setup with two cameras with co-planar image planes, which helps to simplify the analysis as the epipolar lines are parallel (Fig. 2). Additionally, it is assumed that all particles move to a position within the field of view during the exposure time.\\n\\nIn point reconstruction, and in a uniformly seeded volume, the positions of the frozen particles in one timestep reveal no information about the flow. Conversely, streak images inherently contain information about the flow field. Therefore, the efficacy of streak imaging in reducing reconstruction ambiguities depends on the observed flow field, and an estimate of the expected number of reconstruction ambiguities will be bounded by best-case and worst-case displacement scenarios.\\n\\nWe identify two limiting cases between which the number of streak ambiguities is bound to lie, with the worst-case scenario occurring when the particles experience no displacement and the best-case scenario occurring when they experience random displacements within the image. Between the two extremes, we consider bounded particle displacements to determine the expected number of ambiguities.\\n\\n3.2.2 Random displacements\\n\\nThe following case presents the scenario where each particle can move to a random position in the image during the exposure time. This case, while physically unrealistic, is useful in establishing a lower bound and introducing the main ghost streak generation mechanism.\\n\\nThe endpoints of a streak in image \\\\( I \\\\) define the epipolar lines \\\\( l'_a \\\\) and \\\\( l'_b \\\\) and their corresponding epipolar windows \\\\( f'_a \\\\) and \\\\( f'_b \\\\) in \\\\( I' \\\\) (Fig. 3a). A reconstruction ambiguity occurs if there exists more than one streak connecting these epipolar windows. For this constellation to occur, the following two conditions must hold.\\n\\nCondition 1: at least one more of the remaining points in the image must coincide with \\\\( f'_a \\\\), and\\nCondition 2: the additional particle in \\\\( f'_a \\\\) must be the endpoint of a streak with its other endpoint in \\\\( f'_b \\\\).\\n\\nThe expected total number of particles \\\\( n_p \\\\) that will coincide with the epipolar window \\\\( f'_a \\\\) is known from the work of Maas [13] and Eq. 1. Here, however, twice the number of points, \\\\( 2n \\\\), must be considered, as the signature of each of the \\\\( n \\\\) particles is a line segment with two endpoints in the same image. As both endpoints are randomly distributed in \\\\( I' \\\\), the expected number of particles in \\\\( f'_a \\\\) is\\n\\n\\\\[ n_p = (2n - 2) \\\\frac{f}{F}. \\\\]\"}"}
{"id": "CVPR-2022-1983", "page_num": 4, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 4. Schematic depiction of the ghost streak generating con-\\nstellations for the bounded displacement case. The green streak\\ndefines the epipolar constraints.\\n\\n$fnb' = f/F$, as out of all the possible positions the particle\\ncan jump to within the image, it must land in the area\\n$fnb'$.\\nThe average number of particles for which this happens is\\n$n_s = 2(n - 1)f/F^2$ (3)\\nand as this process is repeated for all\\n$n$ streaks in $I'$, the\\nresulting total expected number of streak ambiguities for\\nrandom displacements is\\n$N_s = 2(n^2 - n)f/F^2$.\\n\\nComparing this expression with the one for point correspon-\\ndences (Eq. 2), one can already see a drastic reduction since\\n$f/F \\\\ll 1$ can be assumed.\\n\\n3.2.3 Bounded displacements\\n\\nIn a more realistic case, particles will not move to a ran-\\ndom position in the image during the exposure time but will\\ninstead move to a position within a radius $R$, thus generat-\\ning streaks with endpoints at a bounded distance from each\\nother (Fig. 3b). Ambiguities will be generated when two\\nepipolar windows in $I'$, defined by these endpoints, are con-\\nnected by more than one streak, as in Section 3.2.2.\\n\\n$3.2.3$ $R$\\n\\nIn a more realistic case, particles will not move to a ran-\\ndom position in the image during the exposure time but will\\ninstead move to a position within a radius $R$, thus generat-\\ning streaks with endpoints at a bounded distance from each\\nother (Fig. 3b). Ambiguities will be generated when two\\nepipolar windows in $I'$, defined by these endpoints, are con-\\nnected by more than one streak, as in Section 3.2.2.\\n\\nThe conditions for this case are the following.\\nCondition 1: at least one more of the remaining points in the image\\nmust coincide with $f'a'$, and\\nCondition 2: the additional par-\\nticle in $f'a'$ must be the endpoint of a streak with its other\\nendpoint in the area of intersection between $f'b'$ and the area\\n$F_R$ of the circle with radius $R$ centered around the first end-\\npoint (Fig. 3b).\\n\\nWe consider the \u201cfirst\u201d endpoint as randomly distributed\\nand the \u201csecond\u201d as conditionally distributed, as it cannot\\nbe further away from the first than a distance $R$.\\nThen, the\\nprobability of the first endpoint of a streak falling in\\n$f'a'$ is $f/F$.\\nThe probability of the second endpoint falling in\\n$f'b'$ is the probability that out of all the possible positions in the\\ncircle with area $F_R$, the second endpoint will fall in\\n$f_{s,R}(\\\\hat{y})$, the area of intersection of the circle of radius\\n$R$ around the\\nfirst endpoint and the epipolar window\\n$f'b'$ (Fig. 3b).\\nThe size of this area depends on the position of the\\nfirst streak's second endpoint, which defines\\n$l'b'$, and follows\\nWigner's semi-circle distribution along the\\n$\\\\hat{y}$ axis. There-\\nfore, the expected value $\\\\bar{f}_{s,R}$ of the area\\n$f_{s,R}(\\\\hat{y})$ is de-\\nscribed by the integral over the circle's diameter, of the\\nprobability density function of the semi-circle distribution\\ntimes the area\\n$f_{s,R}(\\\\hat{y})$, integrated over all positions of\\n$f'b'$ (Fig. 4). Relevant formulae are provided in the supp. mat.\\n\\nBy further analyzing the conditions leading to the above\\ncumulative number of ambiguities, we identify three types\\nof streak endpoint constellations that contribute to ambigu-\\nity generation (Fig. 4):\\n\\nType A: the first endpoint is only in $f'a'$ and the second end-\\npoint is only in $f'b'$.\\nType B: the first and the second endpoint are in $f'a'$ and only\\nthe first endpoint is in $f'b'$.\\nType C: the first and the second endpoint are both in $f'a'$ and\\nin $f'b'$.\\n\\nIt can be seen that the relative importance of these three\\nmechanisms varies depending on the ratio of the epipolar\\nconstraint tolerance,\\n$d$, and the maximum expected particle\\ndisplacement,\\n$R$ (Fig. 5). The contributions\\n$n_A$, $n_B$, $n_C$...\"}"}
{"id": "CVPR-2022-1983", "page_num": 5, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"for Type A, B and C constellations to the total number of ambiguities can be described as follows:\\n\\n\\\\[ n_A = 2(n - 1) f R f_2 A F^2, \\\\]\\n\\n\\\\[ n_B = 2(n - 1) f F \\\\bar{f} f_B F R, \\\\]\\n\\n\\\\[ n_C = (n - 1) f F \\\\bar{f} f_C F R. \\\\]\\n\\n\\\\( f R \\\\) is the area with extent \\\\( RL \\\\) on either side of \\\\( f' a \\\\) (Fig. 4) and the formulae for the mean areas of intersection \\\\( \\\\bar{f} 2 \\\\) and \\\\( \\\\bar{f} B \\\\) and \\\\( \\\\bar{f} C \\\\) are provided in the supplementary material.\\n\\nType C ambiguities occur when both endpoints of a streak in one image can be matched to both endpoints of a streak in another image. This contribution increases as the ratio \\\\( d/R \\\\) increases. In such cases we assume that one of the matches can be eliminated, so that only one reconstruction is possible from the same streak pair. Therefore, the expected number of ambiguities, \\\\( n_{s,R} \\\\), per epipolar line, and total expected number, \\\\( N_{s,R} \\\\), of ambiguities reconstructed from images with \\\\( n \\\\) randomly distributed streaks, bounded by a maximum displacement radius \\\\( R \\\\) is\\n\\n\\\\[ n_{s,R} = 2(n - 1) f F \\\\bar{f} s,R F R - n_C, \\\\]\\n\\n\\\\[ N_{s,R} = n \\\\cdot n_{s,R}. \\\\]\\n\\nNote that this expression contains the two limiting cases discussed before. For a non-moving particle \\\\( f R \\\\to 0, \\\\bar{f} B \\\\to 0 \\\\) and \\\\( \\\\bar{f} C \\\\to F R \\\\) so the single point probability is recovered.\\n\\n3.2.4 Conic section segments\\n\\nConsidering the shapes of the streaks in the matching process further reduces the number of reconstruction ambiguities. Here, we assume that a curved streak can be modeled as a segment of a conic section projected to the cameras from a conic section segment on a plane in the 3D world. The additional correspondence condition offered by conic sections is that of the epipolar tangency [3, 18, 21]: two matching conics are tangent to corresponding epipolar lines. It follows that, given a conic in image \\\\( I \\\\), tangent to \\\\( l_{t,a} \\\\) and \\\\( l_{t,b} \\\\), a conic can be reconstructed in 3D if there is a conic tangent to \\\\( l'_{t,a} \\\\) and \\\\( l'_{t,b} \\\\) in \\\\( I' \\\\) (Fig. 6). If multiple conics are tangent to \\\\( l'_{t,a} \\\\) and \\\\( l'_{t,b} \\\\), we obtain reconstruction ambiguities and, therefore, ghost conics. Although we treat the curved streaks as general conic section segments during reconstruction, we focus the following discussion on ellipses, as they allow for a more geometrically intuitive handling.\\n\\nWe calculate the probability of an ellipse in an image being tangent to two specific epipolar lines, provided that the lines are horizontal and allowed to be within \\\\( y \\\\in [-R, H + R] \\\\), where \\\\( H \\\\) is the height of the image and \\\\( R \\\\) the maximum expected displacement of a particle. The coordinate \\\\( y \\\\), that defines an ellipse's tangent, also follows a uniform distribution outside of the region between the two endpoints. One endpoint of a streak in the image is uniformly distributed, but the \\\\( y \\\\) coordinate of its other endpoint follows the semi-circle distribution due to the circular bounded displacement. Finally, a tolerance, \\\\( d_e \\\\), is defined for the epipolar tangency constraint so that the ellipse's epipolar tangents must be within a distance \\\\( d_e \\\\) of the desired epipolar line for the constraint to be fulfilled. The probability \\\\( \\\\bar{p} e \\\\) used to calculate the expected value of the number of ghost ellipses can be found in the supplementary material. The number of ghost ellipse matches per streak, \\\\( n_e \\\\), and the total number of ghost ellipses, \\\\( N_e \\\\), in an image with \\\\( n \\\\) streaks are calculated as\\n\\n\\\\[ n_e = n_{s,R} \\\\cdot \\\\bar{p} e, \\\\]\\n\\n\\\\[ N_e = n \\\\cdot n_e, \\\\]\\n\\nwhere \\\\( n_{s,R} \\\\) is the number of linear ghost streaks (Section 3.2.3). As \\\\( \\\\bar{p} e \\\\leq 1 \\\\), the number of curved ghost streaks will be at most equal to that of linear ghost streaks, with \\\\( n_e \\\\) approaching \\\\( n_{s,R} \\\\) as \\\\( d_e \\\\) increases. The presented models are validated in Section 4.\\n\\n3.3. Conic section reconstruction\\n\\nIn experiments, the conics that fit through the curved streaks' projected 2D coordinates are unknown and must be estimated. The epipolar tangency constraint, as presented in the previous section, is, however, not practical for matching short segments of conic sections with low curvature such as those obtained from realistic flow images. Therefore, a method is presented here to simultaneously fit the conics and estimate a multi-view correspondence criterion. The method is validated and compared to a RANSAC-based method described in detail in the supp. mat. (Section 4).\"}"}
{"id": "CVPR-2022-1983", "page_num": 6, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"3.3.1 Optimization problem\\n\\nIn our matching approach, we optimize the conic fits to the curved streak datapoints over multiple cameras while enforcing a correspondence criterion between the conic segments imaged on the different views. The correspondence is enforced by ensuring that the conic segments on all views are images of the same world conic. The method is described here for three cameras, but it has been implemented for two-camera and three-camera setups, and it can easily be extended to more camera views.\\n\\nTherefore, a conic is sought that lies on a plane in the 3D world and passes through the two triangulated endpoints of the streak that, when projected to the images, is a good fit to the point clouds that define the curved streak segments in the images (Fig. 7).\\n\\nA plane \\\\( \\\\pi = [\\\\alpha, \\\\beta, \\\\gamma, \\\\delta] \\\\), a conic section \\\\( C_\\\\pi \\\\) with parameters \\\\( \\\\theta_\\\\pi \\\\) and three cameras with projection matrices \\\\( P_1, P_2, P_3 \\\\) are given. The homography that transforms points \\\\( x_\\\\pi \\\\) on the plane \\\\( \\\\pi \\\\) to points \\\\( x_i \\\\) on the plane of camera \\\\( i \\\\), so that \\\\( x_i = H_{\\\\pi,i} x_\\\\pi \\\\) is defined as:\\n\\n\\\\[\\nH_{\\\\pi,i} = \\\\begin{bmatrix}\\nH_1 & H_2 & H_3\\n\\\\end{bmatrix},\\n\\\\]\\n\\n(12)\\n\\n\\\\[\\nH_1 = \\\\gamma P_i [\\\\cdot, 1] - \\\\alpha P_i [\\\\cdot, 3],\\n\\\\]\\n\\n(13)\\n\\n\\\\[\\nH_2 = \\\\gamma P_i [\\\\cdot, 2] - \\\\beta P_i [\\\\cdot, 3],\\n\\\\]\\n\\n(14)\\n\\n\\\\[\\nH_3 = \\\\gamma P_i [\\\\cdot, 4] - \\\\delta P_i [\\\\cdot, 3],\\n\\\\]\\n\\n(15)\\n\\nfor each of the \\\\( i = 1, 2, 3 \\\\) cameras.\\n\\nThen, an ellipse on \\\\( \\\\pi \\\\) can be transformed to the camera plane as \\\\( C_i = H_{\\\\pi,i}^\\\\top C_\\\\pi H_{\\\\pi,i}^{-1} \\\\). The goal is then to minimize the Sampson error\\n\\n\\\\[\\nL(\\\\pi, \\\\theta_\\\\pi) = \\\\sum_{i,j} \\\\left( x_i^\\\\top C_i x_i \\\\right)^2 \\\\left( (C_i x_i)^2 + (C_i x_i)^2 \\\\right)^{-1}\\n\\\\]\\n\\n(16)\\n\\nfor each of the \\\\( i \\\\) cameras and \\\\( j \\\\) datapoints, where \\\\( x_{i,j} \\\\) is datapoint \\\\( j \\\\) on camera \\\\( i \\\\).\\n\\nAs only streak combinations that fulfill the epipolar constraints for linear streaks are considered, the streaks' endpoint correspondence is guaranteed. The plane \\\\( \\\\pi \\\\) is therefore a pencil of planes through the line that connects the two endpoints of the streaks, \\\\( X_s, X_e \\\\), while the conic must necessarily pass through the triangulated endpoints on plane \\\\( \\\\pi \\\\), \\\\( x_\\\\pi,s, x_\\\\pi,e \\\\). This defines a set of equality constraints, resulting in the following optimization problem\\n\\n\\\\[\\n\\\\min_{\\\\pi, \\\\theta_\\\\pi} L(\\\\pi, \\\\theta_\\\\pi)\\n\\\\]\\n\\ns.t.\\n\\n\\\\[\\nx_\\\\pi,s^\\\\top C_\\\\pi x_\\\\pi,s = 0,\\n\\\\]\\n\\n\\\\[\\nx_\\\\pi,e^\\\\top C_\\\\pi x_\\\\pi,e = 0,\\n\\\\]\\n\\n\\\\[\\n\\\\pi^\\\\top X_s = 0,\\n\\\\]\\n\\n\\\\[\\n\\\\pi^\\\\top X_e = 0,\\n\\\\]\\n\\n(17)\\n\\nFigure 7. Setup of the optimization problem for 3 cameras.\\n\\nwhich we solve using a non-linear solver (IPOPT) \\\\[23\\\\] with CasADi \\\\[1\\\\]. The tolerance for accepting a good fit is set by estimating the standard deviation of the distance of the point cloud to an unconstrained best-fit conic section. The initial guess for the parameters of \\\\( \\\\pi \\\\) and \\\\( \\\\theta_\\\\pi \\\\) is found as a best-fit through five points sampled along the streaks on the two images using the epipolar constraint. To improve the fits for noisy data we use a regularizer (supp. mat.).\\n\\n4. Results\\n\\n4.1. Synthetic data - model validation\\n\\nSynthetic images of particles and their streak signatures are used to validate the estimates of the probability of ghost streak and ghost ellipse generation as described in the previous sections. The particles' coordinates are uniformly distributed in two images and are then displaced either to a random location in each image or to a position within a circle of radius \\\\( R \\\\) to simulate bounded particle displacements.\\n\\nWe use a co-planar, two-camera setup (Fig. 2) with image sizes of 1024 \\\\( \\\\times \\\\) 1024 px\u00b2. \\n\\n4.1.1 Linear segments\\n\\nThe points and streaks in the two images are matched using the epipolar constraint and two different strategies: (a) the streaks' endpoints are matched independently of each other and (b) the endpoints are matched jointly, i.e. a match is accepted only if both endpoints of a streak in image \\\\( I \\\\) can be matched to the endpoints of a streak in \\\\( I' \\\\).\\n\\nFor each case, the particle generation and matching is repeated with 20 image sets, containing from 1000 to 7000 particles, and the number of reconstructed particles/streaks is averaged. The epipolar constraint is set to \\\\( d = 1 \\\\) px.\\n\\nThe theoretical model and the reconstruction results match well, as shown in Fig. 8 and in Table 1. The number of reconstruction ambiguities lies consistently below that for individual particles by almost an order of magnitude.\"}"}
{"id": "CVPR-2022-1983", "page_num": 7, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 8. Number of ghost streak and ghost particle reconstructions from synthetic data (markers) and theoretical estimates (lines), for increasing number of particles, \\\\( n \\\\), with \\\\( d = 1 \\\\) px, \\\\( F = 1024 \\\\times 1024 \\\\) px.\\n\\nThe bounded cases lie between the two edge cases of individual particle reconstruction and streak reconstruction for streaks with random displacements.\\n\\n\\\\[\\n\\\\begin{array}{cccc}\\nN_{p} & N_{s,R} & \\\\text{pred. sim.} & \\\\text{pred. sim.} \\\\\\\\\\nn = 1000 & 1951 & 1968 & 397 & 404 \\\\\\\\\\nn = 3000 & 17572 & 17739 & 3573 & 3614 \\\\\\\\\\nn = 5000 & 48818 & 49285 & 9927 & 9978 \\\\\\\\\\nn = 7000 & 95689 & 96543 & 19458 & 19579 \\\\\\\\\\n\\\\end{array}\\n\\\\]\\n\\nTable 1. Number of reconstructed ghost particles, \\\\( N_{p} \\\\), and ghost streaks, \\\\( N_{s,R} \\\\), for two different maximum displacement radii and different numbers of imaged particles, \\\\( n \\\\), with \\\\( d = 1 \\\\) px, \\\\( F = 1024 \\\\times 1024 \\\\) px. The predictions are derived from the theoretical analysis (Section 3.2.3), while the simulation results are obtained as the mean of 20 runs with new particle positions.\\n\\nIt is evident that ghost streak generation is reduced with increasing maximum allowable displacement radius, as the position of each streak's second endpoint is allowed more variability. Increasing the initial number of particles \\\\( n \\\\) produces the same behavior for ghost streaks as for individual ghost particles.\\n\\n4.1.2 Ellipse segments\\n\\nFor the ellipse segment matching, ellipses with varying parameters are fitted through the streak endpoints so that the fitted ellipses are tangent to horizontal lines randomly distributed in \\\\( y \\\\in [-R, H + R] \\\\). The results were obtained using an epipolar constraint of \\\\( d = 1 \\\\) px, epipolar tangency constraints \\\\( d_{e} = 100 \\\\) and \\\\( 200 \\\\) px and \\\\( n = 1000 \\\\) streaks.\\n\\nA good match between the theoretical estimate (Section 3.2.4) and the reconstructed number of ghost ellipses can be seen in Fig. 9. The number of ghost ellipses lies below that for linear ghost streaks, and it depends on the epipolar constraint tolerance, \\\\( d_{e} \\\\), which in turn depends on the uncertainty of the estimated ellipse parameters. For example, for \\\\( R = 40 \\\\) px and \\\\( d_{e} = 200 \\\\) px the number of ambiguities is reduced from 104 ghost streaks to 39 ghost ellipses.\\n\\n4.2 Synthetic data - reconstruction validation\\n\\n4.2.1 Conic section data\\n\\nThe synthetic data used for the validation of our conic fit and reconstruction method consist of images of conic section segments, obtained by projecting onto the cameras conic section segments generated in 3D, with parameters limited to a range that produces similar results to experimental images. Uniformly distributed noise up to \\\\( \\\\pm 0.5 \\\\) px is added to the curved streaks' 2D coordinates. These conic section segments are then reconstructed using (a) the optimization-based method described in Section 3.3 and (b) our RANSAC-type method (supp. mat). The mean results of 20 3D scenes are presented in Table 2.\\n\\nIn the absence of noise, effectively all segments are reconstructed correctly, and the number of curved ghost streaks, \\\\( N_{c} \\\\), is significantly lower than the number of linear ghost streaks, \\\\( N_{s} \\\\). Noise reduces both methods' performance. Increasing the number of particles increases \\\\( N_{c} \\\\), which, however, remains at about a third of \\\\( N_{s} \\\\).\"}"}
{"id": "CVPR-2022-1983", "page_num": 8, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table 3. Number of reconstructed ghost particles, \\\\(N_p\\\\), ghost streaks, \\\\(N_s\\\\), and curved ghost streaks, \\\\(N_c\\\\), for different initial number of particles \\\\(n\\\\) and noise levels, for Hill\u2019s spherical vortex data. \u201cGhosts\u201d are the ambiguous reconstructions, while \u201clost\u201d are the false negatives. Our method is compared to a commercial 3D-PTV software (\\\\(N_{CS}\\\\)).\\n\\n| \\\\(n\\\\) | \\\\(N_p\\\\) | \\\\(N_s\\\\) | \\\\(N_c\\\\) | \\\\(d\\\\) = 1 px | \\\\(F = 1024 \\\\times 1024\\\\) px^2 |\\n|-------|--------|--------|--------|---------------|-----------------------------|\\n| 1500  |        |        |        |               |                             |\\n| 2000  |        |        |        |               |                             |\\n| 2500  |        |        |        |               |                             |\\n| 3000  |        |        |        |               |                             |\\n| 3500  |        |        |        |               |                             |\\n\\n4.2.2 Hill\u2019s spherical vortex\\n\\nWe reconstruct synthetic streak images of Hill\u2019s spherical vortex [9] to validate our method on realistic flow field data. The mean displacement is 33 px, and the same setup of two co-planar views is used. The results of the conic reconstruction method are compared with results obtained using state-of-the-art commercial 3D-PTV software [8] (Table 3).\\n\\nOnly data without noise are processed with the commercial software, as the purpose of noise is to assess our conic reconstruction method. The software requires range and velocity constraints, and we impose the same constraints on our reconstruction pipeline. Direct comparison with the commercial software is challenging, as in the software, the number of ghost reconstructions can be tuned at the expense of losing more true particles. Therefore, the results of Table 3 are what we consider a fair compromise between recognized true particles and reconstructed ghosts. The detailed evaluation settings, unconstrained results that can be compared to the theoretical estimates, and results obtained with different parameters are provided in the supp. mat.\\n\\nOur method drastically reduces ghost reconstructions in a flow field with high dynamic velocity range, typically challenging for 3D-PTV. From a single frame, we obtain lower ghost streak numbers than those obtained by an equivalent multi-frame analysis using state-of-the-art commercial software for the examined flow field and setup.\\n\\n4.3. Experimental data\\n\\nThe flow field we use in our experiments is a vortex ring in air, visualized using helium-filled soap bubbles as tracers. Two synchronized 1 Mpx high-speed cameras record particle images at 1000 fps, with an exposure time of 1 ms. The streaks are obtained by summing the individual frames and are then detected using a CNN-based instance segmentation method. The high frame rate acquisition allows us to perform both 3D-PSV and 3D-PTV analyses.\\n\\n![Figure 10. Projections of the reconstructed experimental data superimposed on one of the camera views (a) with our method and (b) with 3D-PTV. For (a) the velocity, \\\\(u\\\\), is obtained from the 3D arc length. Velocities normalized by maximum velocity, \\\\(u_{max}\\\\).](image)\\n\\nTable 4. Number of reconstructed particles, \\\\(N_{t,p}\\\\), linear streaks, \\\\(N_{t,s}\\\\), and curved streaks, \\\\(N_{t,c}\\\\), for the vortex ring experiment with \\\\(d = 1\\\\) px. Our method is compared to 3D-PTV software (\\\\(N_{t,CS}\\\\)).\\n\\n| \\\\(N_{t,p}\\\\) | \\\\(N_{t,s}\\\\) | \\\\(N_{t,c}\\\\) | \\\\(n\\\\) Cam. 1 / Cam. 2 |\\n|------------|------------|------------|----------------------|\\n| 2529       | 2265       | 20366      | 2759                 |\\n\\n2529 and 2265 streaks are detected in the two views, and the number of total particle and streak reconstructions, including correct and ghost reconstructions, are shown in Table 4, along with results from the 3D-PTV software [8]. The reconstructed streaks agree well with the recorded images, with visibly more complete trajectories recovered compared to 3D-PTV (Fig. 10). Camera synchronization and calibration are essential to keep the epipolar tolerance, \\\\(d\\\\), and the number of ambiguities, low. Here, \\\\(d = 1\\\\) px is used. Details on the experimental setup are provided in the supp. mat.\\n\\nLimitations.\\n\\nA notable limitation of the proposed method is that we require the curved streaks to be planar curves, thus effectively limiting the maximum allowable exposure time. Additionally, streak imaging requires sufficiently accurate streak segmentation and endpoint detection, which can be more challenging than particle detection.\\n\\n5. Conclusion\\n\\nWe have shown that 3D-PSV is a method inherently suited for reducing the number of reconstruction ambiguities in volumetric flow velocimetry. We have provided models to estimate the expected number of linear and curved ghost streaks and presented a method for simultaneously fitting conic sections through curved streaks and testing their correspondence over multiple views. Simulations validate our theoretical analysis, and streak reconstruction produces significantly fewer ambiguities than point reconstruction. Our endpoint and subsequent conic section matching approach is validated using synthetic flow data, with results outperforming state-of-the-art commercial software on the evaluated cases. Finally, the reconstruction of experimental data shows that our conic matching and reconstruction method can be used to successfully evaluate real data.\"}"}
