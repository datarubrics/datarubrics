{"id": "acl-2022-long-580", "page_num": 1, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Abstract\\n\\nTransfer learning has proven to be crucial in advancing the state of speech and natural language processing research in recent years. In speech, a model pre-trained by self-supervised learning transfers remarkably well on multiple tasks. However, the lack of a consistent evaluation methodology is limiting towards a holistic understanding of the efficacy of such models.\\n\\nSUPERB was a step towards introducing a common benchmark to evaluate pre-trained models across various speech tasks. In this paper, we introduce SUPERB-SG, a new benchmark focused on evaluating the semantic and generative capabilities of pre-trained models by increasing task diversity and difficulty over SUPERB. We use a lightweight methodology to test the robustness of representations learned by pre-trained models under shifts in data domain and quality across different types of tasks. It entails freezing pre-trained model parameters, only using simple task-specific trainable heads. The goal is to be inclusive of all researchers, and encourage efficient use of computational resources. We also show that the task diversity of SUPERB-SG coupled with limited task supervision is an effective recipe for evaluating the generalizability of model representation.\\n\\n1 Introduction\\n\\nTransfer learning is a paradigm in machine learning that has been very effective for natural language processing (NLP) (Peters et al., 2018; Devlin et al., 2019; Liu et al., 2019; Lan et al., 2019; Dong et al., 2019; Yang et al., 2019; Raffel et al., 2020; Lewis et al., 2019; Conneau et al., 2020), and speech processing (van den Oord et al., 2018; Rivi\u00e8re et al., 2020; Chung et al., 2019; Schneider et al., 2019; Baevski et al., 2020b; Hsu et al., 2021; Liu et al., 2020c,b; Ravanelli et al., 2020; Ling et al., 2020; Ling and Liu, 2020). Self-supervised learning (SSL) is the main driver of this paradigm, an effective and scalable way to learn high-level representation of language that transfers to a variety of tasks. SSL entails learning from the input or some perturbation of it without the need for labelled data. This has unlocked the usage of large amounts of cheaply available unlabelled data. It lends naturally to neural network models that have been shown to possess impressive scaling characteristics such that it is often enough to increase the model and data sizes to improve downstream performance (Hestness et al., 2017; Shazeer et al., 2017; Jozefowicz et al., 2016; Mahajan et al., 2018; Radford et al., 2019).\\n\\nSpeech signal consists of acoustic, linguistic, prosodic, and speaker characteristics. SSL algo...\"}"}
{"id": "acl-2022-long-580", "page_num": 2, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"rithms in speech must be evaluated in their ability\\nto produce representations that are useful for tasks\\nthat demand understanding of linguistic, speaker,\\nand prosodic elements of spoken language as well\\nas high-level semantics. Researchers have used\\nauto-regressive, contrastive, discriminative and\\nmulti-task learning objectives to pre-train mod-\\nels, and have investigated their capabilities across\\ntasks like phoneme recognition (van den Oord\\net al., 2018; Chung et al., 2019), automatic speech\\nrecognition (ASR) (Liu et al., 2020b; Schneider\\net al., 2019; Ling and Liu, 2020; Ravanelli et al.,\\n2020; Hsu et al., 2021; Chang et al., 2021), speaker\\nverification (Fan et al., 2020), speaker identifica-\\ntion (Chung et al., 2019; Liu et al., 2020c), emotion\\nrecognition (Macary et al., 2021), speech transla-\\ntion (Chung et al., 2019), voice conversion (Lin\\net al., 2020; Huang et al., 2021a), spoken lan-\\nguage understanding (Lai et al., 2021), and text-to-\\nspeech (\u00c1lvarez et al., 2019). However, the method-\\nologies in such studies vary in the use of datasets,\\nfine-tuning strategies and task-specific model ar-\\nchitectures. To bridge this gap,\\nSUPERB\\n(Yang\\net al., 2021) introduced a standardized benchmark\\nof 10 speech tasks to compare 13 pre-trained mod-\\nels and a Log Mel-Filterbank baseline. It studied\\nthe models' performance in tasks focusing on lin-\\nguistic (phoneme recognition and automatic speech\\nrecognition, keyword spotting and query by exam-\\nple), shallow semantic (intent classification and\\nslot filling), speaker (speaker identification, speaker\\nverification and speaker diarization), and prosodic\\n(emotion recognition) characteristics.\\nIn this paper, we introduce\\nSUPERB-SG,\\na\\nbenchmark with 5 new tasks, which are speech\\ntranslation, out-of-domain ASR, voice conversion,\\nspeech separation, and speech enhancement, with\\nan emphasis on evaluating the semantic and gener-\\native capabilities of pre-trained models that require\\nhigh-level representations to capture linguistic, se-\\nmantic, and speaker characteristics. These tasks go\\nbeyond speech recognition by focusing on various\\nother aspects that are essential to building intel-\\nligent speech interfaces. Further, we show that\\nwhile SSL models achieve close to state-of-the-art\\nperformance on many tasks, there isn't one model\\nthat outperforms all others, and that a simple Log\\nMel-Filterbank can perform competitively on some\\ntasks. We also demonstrate the robustness of our\\nmethodology with an ablation study over different\\ntask-specific model architectures and data sizes.\\n\\nFigure 1: Illustration of the detailed training procedure.\\nA trainable weighted-sum mechanism is used to sum-\\nmarize all layers' representations into a sequence of\\nvectors and then taken by downstream model as input.\\nUpstream is frozen through the whole process. Dashed\\narrow (99K) is used to indicate the flow of gradient\\nwhen back propagating.\\n\\nThe introduction of these new tasks of varying\\ndifficulty takes us closer to a more comprehensive\\nunified standard speech benchmark. We hope that\\nthis will motivate the development of more power-\\nful, generalizable, and reusable pre-trained models\\nto democratize the advancement of speech research.\\nTo facilitate this, we released the codes\\nand inte-\\ngrated the tasks with the\\nSUPERB\\nbenchmark.\\n\\nRelated Work\\nAs more powerful SSL models are proposed\\nwith promising performance on various tasks, re-\\nsearchers continually try to find extensive evalu-\\nation methods to assess model performance, and\\nwish to holistically understand the capability of the\\nlearned representations in these models.\\n\\nSUPERB\\n(Yang et al., 2021) is a framework to\\nbenchmark the SSL models on 10 speech tasks by\\nlearning task-specific prediction heads on top of\\nthe frozen shared SSL models. Although the tasks\\nin\\nSUPERB\\nspan across different domains, most\\nof them are simple classification problems, or only\\nrequire utilization of shallow semantics. In contrast,\\nwe focus on harder semantic and generative tasks.\\nAnother recently proposed benchmark is the\\nLeBenchmark (Evain et al., 2021), investigating\\nthe performance of SSL models trained on French\\ndata with three semantic tasks. However, they only\\nconsider wav2vec 2.0 (Baevski et al., 2020b) with\\n\\n1 https://github.com/s3prl/s3prl: Tasks in\\nSUPERB-SG\\nare\\nopen-sourced and reproducible in the S3PRL toolkit which\\nsupports benchmarking the most existing and customized pre-\\ntained models.\"}"}
{"id": "acl-2022-long-580", "page_num": 3, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"different architectures as their upstream models (i.e., networks pre-trained with SSL). Here, we evaluate a diverse set of SSL models, and offer a more comprehensive analysis.\\n\\nThe Zero Resource Speech Benchmark 2021 (Nguyen et al., 2020) introduces unsupervised speech processing tasks, particularly the spoken language modeling problem. They evaluate the SSL models via zero-shot proings at four linguistic levels. While their benchmark task is specific for certain domain, we use various tasks to evaluate different aspects of SSL models.\\n\\nThe HEAR 2021 Challenge aims to develop general-purpose audio representation by focusing on audio tasks beyond speech that include sound event detection, speech commands and pitch & chroma classification. We specifically focus on various aspects of speech processing, thus providing a wide variety of spoken language tasks.\\n\\n3.1 Tasks and Datasets\\n\\nThis section introduces the tasks in SUPERB-SG, including why we choose these tasks and how we design the task-specific heads for fine-tuning. Following SUPERB's methodology, we use a lightweight fine-tuning approach wherein we freeze the pre-trained model parameters and only keep the task-specific head's parameters trainable. This setting serves the dual purpose of evaluating the robustness as well as the generalizability of the speech representations, and provides a resource-efficient way of fine-tuning the models that is inclusive of participants with constrained compute resources. We call the pre-trained model as upstream model and the task-specific heads as downstream model. We now discuss the newly added tasks in SUPERB-SG in the following sub-sections.\\n\\n3.1.1 Speech Translation\\n\\nSpeech translation (ST) involves translating the acoustic speech signals in the source language into the words in the target language. We use it to evaluate the semantic capability of SSL models, and how they benefit the translation task. We use the CoVoST2 En-De (Wang et al., 2020) dataset (CC0 Licensed) with their official train, validation, and test splits while removing all the samples containing \u201cREMOVE\u201d, resulting in 425.8, 25.9 and 24.5 hours respectively. For text, we keep original case, normalize punctuation, and build character vocabulary with 100% train-set coverage. We report case-sensitive de-tokenized BLEU using sacreBLEU (Post, 2018). Our downstream model has an encoder-decoder architecture with 3 layers of Transformers (Vaswani et al., 2017) each with hidden dimension of 512. A convolutional subsampler is used to reduce the sequence length of the input before feeding it to the encoder. We train our model with label-smoothing using a probability of 0.1. A beam size of 20 is used for inference.\\n\\n3.1.2 Out-of-domain ASR\\n\\nAlthough an ASR is included in SUPERB, it only examines SSL models on read English corpus LibriSpeech (Panayotov et al., 2015). Therefore, we introduce out-of-domain ASR (OOD-ASR), which aims to evaluate the models' capabilities across languages, and out-of-domain scenarios. The OOD-ASR tasks are categorized into cross-lingual and spontaneous speech tasks. For the cross-lingual tasks, we choose the Mexican Spanish (es), Mandarin (zh), and Arabic (ar) subsets from Common Voice 7.0 (Ardila et al., 2020) (CC0 Licensed) containing 21.5, 31.2, and 30.7 hours of training data respectively. The validation set sizes are 1.2 hours, 14.4 hours and 12.24 hours, and the test set sizes are 0.6 hour, 15.3 hours and 12.5 hours for es, zh and ar respectively. For the spontaneous speech task (spon), we use the Santa Barbara Corpus of Spoken American English (SBCSAE) (Du Bois et al., 2000\u20132005) (CC BY-ND 3.0 Licensed), consisting of 60 conversations over different topics spanning 16.7 hours of data. The validation and test set sizes are 1.6 hours and 2.2 hours respectively.\\n\\nFor evaluation, we use word error rate (WER) as the metric except for Mandarin which character error rate (CER) is used. The error rates are averaged across all sub-tasks to offer an overall score. The ASR model is a 2-layer BLSTM (Hochreiter and Schmidhuber, 1997) with hidden states of 1024 dimension. The training objective is to minimize the Connectionist Temporal Classification (CTC) loss (Graves et al., 2006). During inference, we use CTC greedy decoding without language model re-scoring to simplify the process and to highlight the impact of the learned acoustic representations.\\n\\n3.1.3 Voice Conversion\\n\\nFor voice conversion (VC), we consider the intra-lingual VC task in VCC2020 (Zhao et al., 2020)\"}"}
{"id": "acl-2022-long-580", "page_num": 4, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"| Upstream Network | #Params | Stride | Input | Corpus | Pretraining | Official Github |\\n|------------------|---------|--------|-------|--------|-------------|----------------|\\n| FBANK            | -0      | 10ms   | waveform | - | - | - |\\n| PASE+ SincNet, 7-Conv, 1-QRNN | 7.83M | 10ms | waveform | LS | 50 hr multi-task | santi-pdp / pase |\\n| APC              | 4.11M   | 10ms   | FBANK  | LS     | 360 hr      | F-G iamyuanchung / APC |\\n| VQ-APC           | 4.63M   | 10ms   | FBANK  | LS     | 360 hr      | F-G + VQ iamyuanchung / VQ-APC |\\n| NPC              | 19.38M  | 10ms   | FBANK  | LS     | 360 hr      | M-G + VQ Alexander-H-Liu / NPC |\\n| Mockingjay       | 85.12M  | 10ms   | FBANK  | LS     | 360 hr      | M-G s3prl / s3prl |\\n| TERA             | 21.33M  | 10ms   | FBANK  | LS     | 360 hr      | M-G + VQ s3prl / speech-representations |\\n| Modified CPC     | 1.84M   | 10ms   | waveform | LL | 60k hr | FacebookResearch / CPC_audio |\\n| wav2vec          | 32.54M  | 10ms   | waveform | LS | 960 hr | PyTorch / fairseq |\\n| vq-wav2vec       | 34.15M  | 10ms   | waveform | LS | 960 hr | PyTorch / fairseq |\\n| wav2vec 2.0 Base | 95.04M  | 20ms   | waveform | LS | 960 hr | PyTorch / fairseq |\\n| wav2vec 2.0 Large| 317.38M | 20ms   | waveform | LL | 60k hr | PyTorch / fairseq |\\n| HuBERT Base      | 94.68M  | 20ms   | waveform | LS | 960 hr | PyTorch / fairseq |\\n| HuBERT Large     | 316.61M | 20ms   | waveform | LL | 60k hr | PyTorch / fairseq |\\n\\nTable 1: Details of the investigated SSL representations. LibriSpeech and LibriLight are denoted as LS and LL, respectively. For the pretraining methods, we abbreviate \u201cvector quantization\u201d as VQ, \u201cfuture\u201d as F, \u201cmasked\u201d as M, \u201cgeneration\u201d as G, \u201ccontrastive discrimination\u201d as C, and \u201ctoken prediction/classification\u201d as P. Parameters for both pretraining and inference are counted.\\n\\n(ODbL Licensed) under the any-to-one (A2O) setting. A2O VC aims to convert speech from any arbitrary speaker into that of a predefined target speaker. We use the task to evaluate the speaker transferability as well as the generalizability of the SSL models. We use 60 utterances from the target speaker that spans 5 minutes for training, and 25 utterances for testing that span 2 minutes. No validation set was used. We use the commonly used mel-cepstrum distortion (MCD), word error rate (WER) and automatic speaker verification (ASV) accept rate from off-the-shelf ASR and ASV models as evaluation metrics. The downstream model is trained to reconstruct the acoustic feature from the upstream representations in a target-speaker-dependent manner. In the conversion phase, given the representations extracted by the upstream, the model generates the converted acoustic features, which are then sent to a neural vocoder to synthesize the converted waveform. We adopted Tacotron2 (Shen et al., 2018) as the downstream model, which is an autoregressive network consisting of convolutional and LSTM layers. For the neural vocoder, we used the Hifi-GAN (Kong et al., 2020). We follow an implementation described in (Huang et al., 2021b).\\n\\n3.1.4 Speech Separation\\n\\nSpeech separation (SS) is the task of separating target speech from background interference (Wang and Chen, 2018). It is an important step in speech processing, especially for noisy and multi-speaker scenarios. We investigate the speech separation problem on a dataset simulated from LibriSpeech (Cosentino et al., 2020) (CC BY 4.0 Licensed) and WHAM! (Wichern et al., 2019) (CC BY-NC 4.0 Licensed) noise. We use 16kHz version of the dataset containing 2 speakers, and focus on the mix_clean condition. The train and evaluation sets contain 43.3 and 4.2 hours of speech simulated from LibriSpeech's train-clean-100 and test-clean. This task is used to evaluate the generative capability of SSL models when input is a mixture of acoustic signals. We use the scale-invariant signal-to-distortion ratio improvement (SI-SDRi) as the evaluation metric. For the downstream model, we use a 3-layer BLSTM model with dimension of 896 for each direction to predict the short-time Fourier transform (STFT) masks for each speaker, and the predictions are transformed back to the time domain using inverse short-time Fourier transform (iSTFT). Permutation invariant training (PIT) (Yu et al., 2017) is performed to optimize the mean square error between the predicted mask and Ideal Non-negative Phase Sensitive Mask (INPSM) ( Erdogan et al., 2015; Kolb\u00e6k et al., 2017). We choose frequency domain method instead of a time domain based method because of the stride size constraint and computational cost.\\n\\n3.1.5 Speech Enhancement\\n\\nSpeech enhancement (SE) is the task of removing background noise from a degraded speech signal, and it aims to improve the perceived quality and intelligibility of the signal. We include this...\"}"}
{"id": "acl-2022-long-580", "page_num": 5, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"Table 2: Evaluating various SSL representations on new semantic and generative downstream tasks.\\n\\n| Method | BLEU | WER | MCD | BLEU | WER | MCD | WER | ASV | SI-SDR | PESQ | STOI |\\n|--------|------|-----|-----|------|-----|-----|-----|-----|--------|------|------|\\n| FBANK  | 2.32 | 63.58 | 8.47 | 38.3 | 77.25 | 9.23 | 2.55 | 93.6 |\\n| PASE+  | 3.16 | 61.56 | 8.66 | 30.6 | 63.20 | 9.87 | 2.56 | 93.9 |\\n| APC    | 5.95 | 63.12 | 8.05 | 27.2 | 87.25 | 8.92 | 2.56 | 93.4 |\\n| VQ-APC | 4.23 | 63.56 | 7.84 | 22.4 | 94.25 | 8.44 | 2.56 | 93.4 |\\n| NPC    | 4.32 | 61.66 | 7.86 | 30.4 | 94.75 | 8.04 | 2.52 | 93.1 |\\n| Mockingjay | 4.45 | 65.27 | 8.29 | 35.1 | 79.75 | 9.29 | 2.53 | 93.4 |\\n| TERA   | 5.66 | 58.49 | 8.21 | 25.1 | 83.75 | 10.19 | 2.54 | 93.6 |\\n| DeCoAR | 2.0  | 9.94 | 53.62 | 7.83 | 17.1 | 90.75 | 8.54 | 2.47 | 93.2 |\\n| Modified CPC | 4.82 | 62.54 | 8.41 | 26.2 | 71.00 | 10.40 | 2.57 | 93.7 |\\n| wav2vec | 6.61 | 55.86 | 7.45 | 10.1 | 98.25 | 9.30 | 2.53 | 93.8 |\\n| vq-wav2vec | 5.66 | 60.66 | 7.08 | 13.4 | 100.00 | 8.16 | 2.48 | 93.6 |\\n| wav2vec 2.0 Base | 14.81 | 46.95 | 7.50 | 10.5 | 98.00 | 9.77 | 2.55 | 93.9 |\\n| wav2vec 2.0 Large | 12.48 | 44.69 | 7.63 | 15.8 | 97.25 | 10.02 | 2.52 | 94.0 |\\n| HuBERT Base | 15.53 | 46.69 | 7.47 | 8.0 | 98.50 | 9.36 | 2.58 | 93.9 |\\n| HuBERT Large | 20.01 | 44.08 | 7.22 | 9.0 | 99.25 | 10.45 | 2.64 | 94.2 |\\n\\nIndicates the higher the better and indicates the lower the better. The complete results of OOD-ASR are in Appendix A.\\n\\n3.2 Self-supervised Models\\n\\nWe evaluate the tasks on 15 upstream models, which are PASE+ (Ravanelli et al., 2020), APC (Chung et al., 2019), VQ-APC (Chung et al., 2020), NPC (Liu et al., 2020a), Mockingjay (Liu et al., 2020c), TERA (Liu et al., 2020b), DeCoAR 2.0 (Ling and Liu, 2020), Modified CPC (Rivi\u00e8re et al., 2020), wav2vec family (Schneider et al., 2019) (Baevski et al., 2020a) (Baevski et al., 2020b) and HuBERT (Hsu et al., 2021). They span across different architectures, sizes and learning objectives. Some models also use vector quantization which has an added benefit of signal compression.\\n\\nFor grounding, we use Log Mel Filterbank as our baseline. The detailed properties of upstream models are shown in Table 1.\\n\\n4 Experimental Setup\\n\\nFollowing SUPERB, we fix upstream models parameters for all downstream tasks' training. We extract the frame-level representations for each hidden layer of the upstream models from raw waveform, and use a trainable task-specific weighted-sum mechanism to summarize all layers' representations into a sequence of vectors. The summarized representations are then used as the downstream model's input. An overview of the training procedure is demonstrated in Figure 1. Each experiment is done by one single run with the same seed. This procedure is consistent for all experiments, offering a fair and simple evaluation strategy for all upstream models.\\n\\n5 Results and Discussion\\n\\n5.1 Main result\\n\\nThe results of the upstream models evaluated on SUPERB-SG are shown in Table 2. We only report the averaged WER for OOD-ASR. Full results can be found in Appendix A. For speech-to-text tasks (ST and OOD-ASR), wav2vec 2.0 and HuBERT offer competitive results, while DeCoAR 2.0 shows some improvements. In speech generation tasks (VC, SS, and SE), FBANK yields comparable or superior performance than some SSL models, especially for those metrics that take the quality of the output signal into account. For VC, the 3 reported metrics have the same trend for respective...\"}"}
{"id": "acl-2022-long-580", "page_num": 6, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"5.2 Correlation between tasks\\n\\nWe analyze the correlations between tasks in SUPERB-SG to understand the similarity between tasks, and verify if the experimental results agree with the common understanding of related tasks based on shared representation they require.\\n\\nTo compute the correlation, we first change all metrics into a higher-better manner. Then, we compute the Spearman's rank correlation coefficients (Spearman's $\\\\rho$) between all pairs of tasks. For multiple metrics contained in a single task, such as MCD/WER/ASV in VC as well as PESQ/STOI in SE, we compute each of them separately.\\n\\nTo make our analysis more representative and generalized to all speech domains, we bring back the six tasks from SUPERB (Yang et al., 2021) that are considered representative of the following four domains: (i) Content recognition tasks containing (A) ST, (A) OOD-ASR, (A) PR, (A) VC (WER), (A) ASR, (A) IC, (B) SID, (B) ASV, (B) ER, (C) VC (MCD), (C) VC (ASV), (D) SS, (E) SE (PESQ), (F) SE (STOI).\\n\\nOverall, no model outperforms all others on all tasks. However, HuBERT-Large performs most competitively on all downstream tasks, especially those requiring linguistic and semantic signals.\\n\\n| Task 1 | Task 2 | Correlation |\\n|--------|--------|-------------|\\n| ST     | OOD-ASR| 1.0         |\\n| OOD-ASR| PR     | 0.89        |\\n| PR     | VC     | 0.85        |\\n| VC     | ASR    | 0.92        |\\n| ASR    | IC     | 0.86        |\\n| IC     | SID    | 0.75        |\\n| SID    | ASV    | 0.83        |\\n| ASV    | ER     | 0.74        |\\n| ER     | VC     | 0.69        |\\n| VC     | SS     | 0.38        |\\n| SS     | SE     | 0.10        |\\n| SE     | PR     | 0.51        |\\n| PR     | ASR    | 0.89        |\\n| ASR    | IC     | 0.92        |\\n| IC     | SID    | 0.86        |\\n| SID    | ASV    | 0.79        |\\n| ASV    | ER     | 0.70        |\\n| ER     | VC     | 0.79        |\\n| VC     | SS     | 0.65        |\\n| SS     | SE     | 0.46        |\\n| SE     | PR     | 0.02        |\\n| PR     | ASR    | 0.66        |\\n| ASR    | IC     | 0.86        |\\n| IC     | SID    | 0.91        |\\n| SID    | ASV    | 0.89        |\\n| ASV    | ER     | 0.79        |\\n| ER     | VC     | 0.85        |\\n| VC     | SS     | 0.24        |\\n| SS     | SE     | 0.13        |\\n| SE     | PR     | 0.52        |\\n| PR     | ASR    | 0.78        |\\n| ASR    | IC     | 0.23        |\\n| IC     | SID    | 0.40        |\\n| SID    | ASV    | 0.31        |\\n| ASV    | ER     | 0.91        |\\n| ER     | VC     | 0.85        |\\n| VC     | SS     | 0.24        |\\n| SS     | SE     | 0.15        |\\n| SE     | PR     | 0.52        |\\n| PR     | ASR    | 0.46        |\\n| ASR    | IC     | 0.37        |\\n| IC     | SID    | 0.44        |\\n| SID    | ASV    | 0.15        |\\n| ASV    | ER     | 0.37        |\\n| ER     | VC     | 0.89        |\\n\\nOverall, results show that all tasks except SS and SE have strong positive correlation among them. One possible explanation for SS and SE not showing strong correlation is that the low-level information closely related to audio signals is more critical as they need to reconstruct clean speech from interfering speakers and background noise by estimating the STFT masks. As a result, high-level information extracted from SSL models has little benefit for these tasks but is helpful for other tasks. As noted earlier, there is only a small gap in performance between FBANK and SSL models. If we leave SS and SE out, all correlation coefficients are greater than 0.58, showing that the SSL model representations are useful for multiple domains.\\n\\nAlthough the Spearman's $\\\\rho$ are large in general in Figure 2, differences between tasks are observable. Here, we focus on the relation between correlation and similarity of tasks. We list the most and the least two correlated tasks comparing with ST, OOD-ASR, VC, SS, and SE. SS and SE are skipped as candidates for the least correlated tasks comparing with ST, OOD-ASR, VC, SS, and SE. SS and SE are skipped as candidates for the least correlated tasks comparing with ST, OOD-ASR, VC, SS, and SE.\"}"}
{"id": "acl-2022-long-580", "page_num": 7, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table 3: Top 2 and last 2 tasks correlated with the five SUPERB-SG tasks ranked by Spearman\u2019s $\\\\rho$.\\n\\nCluster Metrics\\n- A ST, OOD-ASR, PR VC (WER), ASR, IC\\n- B SID, ASV, ER\\n- C VC (MCD), VC (ASV)\\n- D SS\\n- E SE (PESQ)\\n- F SE (STOI)\\n\\nTable 4: K-means clustering result based on the correlation between each downstream tasks.\\n\\nTo give a broader view of our correlation results, we further cluster the downstream tasks by their correlation with each other using K-means. In this way, all the tasks are considered simultaneously, and the grouping is driven automatically by the empirical correlation results. If more than one metric are used in a downstream task, we cluster them independently. The clustering results are shown in Table 4 and a rearranged correlation map is shown in Figure 3. The result shows that the clusters of the tasks align with our empirical knowledge. Cluster A includes tasks that require content information, while tasks in cluster B are more sensitive to speaker and prosodic features. Cluster C contains metrics MCD and ASV of VC, which are used to evaluate the signal quality and the rates of speaker transfer. It is worth noting that WER in VC belongs to cluster A, showing that it is more similar to content-related tasks. Furthermore, clusters D, E, and F each contain one of the metrics in SS and SE, aligning with our assumption that these tasks utilize different types of information compared to other tasks.\\n\\nWith the analysis of the correlation between tasks, we empirically confirm the reliability of the results, and show that we increase the heterogeneity among speech tasks over SUPERB. We further discover shared properties between tasks with clustering, and the result is aligned with our common understanding of related tasks.\\n\\n5.3 Robustness of SUPERB-SG\\n\\nTo study the impact of downstream model architecture and the data sizes used in SUPERB-SG we evaluate the robustness of SUPERB-SG with variations in downstream model as well as training data size, and show that our conclusions still hold true.\\n\\nWe choose ST, OOD-ASR and SS as the downstream tasks for evaluation with an aim to cover semantic, content recognition, and generative task types. For the upstream models, FBANK, TERA, CPC, wav2vec 2.0 Base and HuBERT Base are used to cover different SSL algorithms.\\n\\n5.3.1 Downstream model\\nFor each task, 2 additional downstream architectures are created by modifying the number of layers and the hidden dimensions compared to our default setting. We create small and large models that are roughly the half and twice of default in terms of the number of trainable parameters. A detailed comparison of the downstream architectures is shown in Table 5. The results are shown in Table 6.\"}"}
{"id": "acl-2022-long-580", "page_num": 8, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table 5: A detailed comparison of downstream model architectures. We report the number of trainable parameters when using TERA as upstream model while minor difference (< 10%) exists due to different upstream dimensions. For OOD-ASR, we average values across all sub-tasks since sub-tasks have different vocabulary sizes.\\n\\n| Architecture | ST | OOD-ASR | SS |\\n|--------------|----|---------|----|\\n| default      |    |         |    |\\n| 3-layer encoder |    | 28.8M   |    |\\n| 3-layer decoder |    |         |    |\\n| Transformer (dim 512) |    |         |    |\\n|               |    | 2-layer BLSTM (dim 1024) |    |\\n|               |    | 53.4M   |    |\\n|               |    | 3-layer BLSTM (dim 896) |    |\\n|               |    | 51.4M   |    |\\n| small         |    |         |    |\\n| no encoder    |    | 10.9M   |    |\\n| 1-layer decoder |    |         |    |\\n| Transformer (dim 512) |    |         |    |\\n|               |    | 1-layer BLSTM (dim 1024) |    |\\n|               |    | 24.1M   |    |\\n|               |    | (0.38)  |    |\\n|               |    | 1-layer BLSTM (dim 1024) |    |\\n|               |    | 24.4M   |    |\\n|               |    | (0.45)  |    |\\n| large         |    |         |    |\\n| 12-layer encoder |    | 69.8M   |    |\\n| 6-layer decoder |    |         |    |\\n| Transformer (dim 512) |    |         |    |\\n|               |    | 4-layer BLSTM (dim 1024) |    |\\n|               |    | 112.2M  |    |\\n|               |    | (2.42)  |    |\\n|               |    | 4-layer BLSTM (dim 1152) |    |\\n|               |    | 114.50M |    |\\n|               |    | (2.23)  |    |\\n\\nTable 6: Results on SS, ST, OOD-ASR when using different architectures.\\n\\n| Architecture | ST | OOD-ASR | SS |\\n|--------------|----|---------|----|\\n| default      |    |         |    |\\n| FBank        | 2.32 | 63.58 | 9.23 |\\n| TERA         | 5.66 | 58.49 | 10.19 |\\n| Modified CPC | 4.82 | 62.54 | 10.40 |\\n| Wave2vec 2.0 Base | 14.81 | 46.95 | 9.77 |\\n| HuBERT Base  | 15.53 | 46.69 | 9.36 |\\n| small        |    |         |    |\\n| FBank        | 0.58 | 70.86 | 8.19 |\\n| TERA         | 1.84 | 64.80 | 9.20 |\\n| Modified CPC | 1.44 | 67.83 | 9.56 |\\n| Wave2vec 2.0 Base | 8.55 | 50.75 | 8.83 |\\n| HuBERT Base  | 9.24 | 50.32 | 8.73 |\\n| large        |    |         |    |\\n| FBank        | 3.02 | 60.49 | 9.77 |\\n| TERA         | 6.64 | 57.95 | 10.87 |\\n| Modified CPC | 4.56 | 59.73 | 10.61 |\\n| Wave2vec 2.0 Base | 16.81 | 45.61 | 9.86 |\\n| HuBERT Base  | 17.59 | 45.78 | 9.83 |\\n\\nTable 7: Hours of data in pseudo datasets.\\n\\n| 1%         | 2.15 | 3.11 | 3.04 | 1.14 | 4.34 |\\n| 5%         | 1.07 | 1.56 | 1.52 | 0.57 | 2.17 |\\n| 10%        | 0.22 | 0.31 | 0.31 | 0.12 | 0.43 |\\n| Dev 1%     | 1.19 | 14.41 | 12.24 | 1.59 | 1.52 |\\n| Test 1%    | 0.62 | 15.32 | 12.46 | 2.15 | 4.19 |\\n\\nWe note that fewer training examples speeds training up but sacrifices the evaluation quality.\"}"}
{"id": "acl-2022-long-580", "page_num": 9, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table 8: Results on ST, OOD-ASR and SS when using different amount of training data.\\n\\n|                | FBANK | TER A | Modified CPC | wav2vec 2.0 Base | HuBERT Base |\\n|----------------|-------|-------|--------------|-----------------|-------------|\\n| **Training data** |       |       |              |                 |             |\\n| 100%            | 2.32  | 5.66  | 4.82         | 14.81           | 15.53       |\\n| 10%             | 0.46  | 0.88  | 1.30         | 5.04            | 5.57        |\\n| 5%              | 0.27  | 0.44  | 0.37         | 2.91            | 3.35        |\\n| 1%              | 0.03  | 0.04  | 0.03         | 0.33            | 0.38        |\\n\\nOverall, we show the robustness of SUPERB-SG to variations in data size even when the training data is reduced to 5%, showing the reliability of the benchmark.\\n\\n6 Conclusion\\n\\nWe introduce SUPERB-SG, a set of 5 new tasks that include speech translation, out-of-domain ASR, voice conversion, speech separation, and speech enhancement to evaluate the deep semantic and generative capabilities of SSL models. We evaluate 15 SSL models, and do a comprehensive analysis of the task correlations to demonstrate the reliability of our methodology. We test and confirm the robustness of SUPERB-SG in terms of the downstream model architecture as well as the training data size. The latest introduction of the semantic and generative tasks increases the diversity and difficulty of SUPERB, which can boost a more comprehensive understanding of the capability of various SSL models' representations, and help researchers discover the hidden properties of SSL techniques in development.\\n\\nWe have open-sourced all the codes and released a challenge to encourage further research of SSL in speech. We welcome the community to participate and advance the research frontier together.\\n\\nEthics\\n\\nThis work fully adheres to the ACL code of ethics. For more details, we provide a checklist in Appendix B.\\n\\nReferences\\n\\nDavid \u00c1lvarez et al. 2019. Problem-agnostic speech embeddings for multi-speaker text-to-speech with samplernn. In Proc. 10th ISCA Speech Synthesis Workshop, pages 35\u201339.\\n\\nRosana Ardila, Megan Branson, Kelly Davis, Michael Kohler, Josh Meyer, Michael Henretty, Reuben Morais, Lindsay Saunders, Francis Tyers, and Gregor Weber. 2020. Common voice: A massively-multilingual speech corpus. In Proceedings of the 12th Language Resources and Evaluation Conference, pages 4218\u20134222.\\n\\nAlexei Baevski, Steffen Schneider, and Michael Auli. 2020a. vq-wav2vec: Self-supervised learning of discrete speech representations. In ICLR.\\n\\nAlexei Baevski, Yuhao Zhou, Abdelrahman Mohamed, and Michael Auli. 2020b. wav2vec 2.0: A framework for self-supervised learning of speech representations. In NeurIPS.\\n\\nHeng-Jui Chang, Shu-wen Yang, and Hung-yi Lee. 2021. DistilHuBERT: Speech representation learning by layer-wise distillation of hidden-unit BERT. arXiv preprint arXiv:2110.01900.\\n\\nYu-An Chung, Wei-Ning Hsu, Hao Tang, and James Glass. 2019. An Unsupervised Autoregressive Model for Speech Representation Learning. In INTERSPEECH, pages 146\u2013150.\\n\\nYu-An Chung, Hao Tang, and James Glass. 2020. Vector-quantized autoregressive predictive coding. In INTERSPEECH, pages 3760\u20133764.\\n\\nAlexis Conneau, Kartikay Khandelwal, Naman Goyal, Vishrav Chaudhary, Guillaume Wenzek, Francisco Guzm\u00e1n, Edouard Grave, Myle Ott, Luke Zettlemoyer, and Veselin Stoyanov. 2020. Unsupervised cross-lingual representation learning at scale.\\n\\nJoris Cosentino, Manuel Pariente, Samuele Corcelli, Antoine Deleforge, and Emmanuel Vincent. 2020. Librimix: An open-source dataset for generalizable speech separation. arXiv preprint arXiv:2005.11262.\"}"}
{"id": "acl-2022-long-580", "page_num": 10, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":null}"}
{"id": "acl-2022-long-580", "page_num": 11, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Alexander H Liu, Yu-An Chung, and James Glass. 2020a. Non-autoregressive predictive coding for learning speech representations from local dependencies. arXiv preprint arXiv:2011.00406.\\n\\nAndy T. Liu, Shang-Wen Li, and Hung-yi Lee. 2020b. Tera: Self-supervised learning of transformer encoder representation for speech. arXiv preprint arXiv:2007.06028.\\n\\nAndy T. Liu, Shu-wen Yang, Po-Han Chi, Po-chun Hsu, and Hung-yi Lee. 2020c. Mockingjay: Unsupervised speech representation learning with deep bidirectional transformer encoders. ICASSP.\\n\\nYinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Manzdar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, and Veselin Stoyanov. 2019. RoBERTa: A robustly optimized BERT pretraining approach. arXiv preprint arXiv:1907.11692.\\n\\nManon Macary, Marie Tahon, Yannick Est\u00e8ve, and Anthony Rousseau. 2021. On the use of self-supervised pre-trained acoustic and linguistic features for continuous speech emotion recognition. In 2021 IEEE Spoken Language Technology Workshop (SLT), pages 373\u2013380. IEEE.\\n\\nDhruv Mahajan, Ross Girshick, Vignesh Ramanathan, Kaiming He, Manohar Paluri, Yixuan Li, Ashwin Bharambe, and Laurens van der Maaten. 2018. Exploring the limits of weakly supervised pretraining. In Proceedings of the European Conference on Computer Vision (ECCV).\\n\\nTu Anh Nguyen et al. 2020. The zero resource speech benchmark 2021: Metrics and baselines for unsupervised spoken language modeling. In NeurIPS Workshop on Self-Supervised Learning for Speech and Audio Processing.\\n\\nVassil Panayotov, Guoguo Chen, Daniel Povey, and Sanjeev Khudanpur. 2015. Librispeech: an asr corpus based on public domain audio books. In 2015 IEEE international conference on acoustics, speech and signal processing (ICASSP), pages 5206\u20135210. IEEE.\\n\\nMatthew Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep contextualized word representations. In NAACL, pages 2227\u20132237.\\n\\nMatt Post. 2018. A call for clarity in reporting BLEU scores. In Proceedings of the Third Conference on Machine Translation: Research Papers, pages 186\u2013191, Belgium, Brussels. Association for Computational Linguistics.\\n\\nAlec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. 2019. Language models are unsupervised multitask learners.\\n\\nColin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J. Liu. 2020. Exploring the limits of transfer learning with a unified text-to-text transformer. arXiv.\\n\\nMirco Ravanelli, Jianyuan Zhong, Santiago Pascual, Pawel Swietojanski, Joao Monteiro, Jan Trmal, and Yoshua Bengio. 2020. Multi-task self-supervised learning for robust speech recognition. In ICASSP, pages 6989\u20136993.\\n\\nMorgane Rivi\u00e8re, Armand Joulin, Pierre-Emmanuel Mazar\u00e9, and Emmanuel Dupoux. 2020. Unsupervised pretraining transfers well across languages. In ICASSP, pages 7414\u20137418.\\n\\nSteffen Schneider, Alexei Baevski, Ronan Collobert, and Michael Auli. 2019. Wav2vec: Unsupervised pre-training for speech recognition. In Interspeech.\\n\\nNoam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz, Andy Davis, Quoc Le, Geoffrey Hinton, and Jeff Dean. 2017. Outrageously large neural networks: The sparsely-gated mixture-of-experts layer. arXiv preprint arXiv:1701.06538.\\n\\nJ. Shen, R. Pang, R. J. Weiss, M. Schuster, N. Jaitly, Z. Yang, Z. Chen, Y. Zhang, Y. Wang, R. Skerry-Ryan, R. A. Saurous, Y. Agiomyrgiannakis, and Y. Wu. 2018. Natural TTS Synthesis by Conditioning WaveNet on MEL Spectrogram Predictions. In Proc. ICASSP, pages 4779\u20134783.\\n\\nA\u00e4ron van den Oord, Yazhe Li, and Oriol Vinyals. 2018. Representation learning with contrastive predictive coding. CoRR, abs/1807.03748.\\n\\nAshish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. 2017. Attention is all you need. In Advances in neural information processing systems, pages 5998\u20136008.\\n\\nChristophe Veaux, Junichi Yamagishi, and Simon King. 2013. The voice bank corpus: Design, collection and data analysis of a large regional accent speech database. In 2013 international conference oriental COCOSDA held jointly with 2013 conference on Asian spoken language research and evaluation (O-COCOSDA/CASLRE), pages 1\u20134. IEEE.\\n\\nChanghan Wang, Anne Wu, and Juan Pino. 2020. CovocoST 2: A massively multilingual speech-to-text translation corpus.\\n\\nDeLiang Wang and Jitong Chen. 2018. Supervised speech separation based on deep learning: An overview. IEEE/ACM Transactions on Audio, Speech, and Language Processing, 26(10):1702\u20131726.\\n\\nGordon Wichern, Joe Antognini, Michael Flynn, Licheng Richard Zhu, Emmett McQuinn, Dwight Crow, Ethan Manilow, and Jonathan Le Roux. 2019. Wham!: Extending speech separation to noisy environments. arXiv preprint arXiv:1907.01160.\"}"}
{"id": "acl-2022-long-580", "page_num": 12, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Shu-wen Yang, Po-Han Chi, Yung-Sung Chuang, Cheng-I Jeff Lai, Kushal Lakhotia, Yist Y. Lin, Andy T. Liu, Jiatong Shi, Xuankai Chang, Guan-Ting Lin, Tzu-Hsien Huang, Wei-Cheng Tseng, Ko tik Lee, Da-Rong Liu, Zili Huang, Shuyan Dong, Shang-Wen Li, Shinji Watanabe, Abdelrahman Mohamed, and Hung yi Lee. 2021. SUPERB: Speech processing universal performance benchmark. *Inter-speech*.\\n\\nZhilin Yang, Zihang Dai, Yiming Yang, Jaime Carbonell, Ruslan Salakhutdinov, and Quoc V. Le. 2019. XLNet: Generalized autoregressive pretraining for language understanding. *arXiv preprint arXiv:1906.08237*.\\n\\nDong Yu, Morten Kolb\u00e6k, Zheng-Hua Tan, and Jesper Jensen. 2017. Permutation invariant training of deep models for speaker-independent multi-talker speech separation. In *2017 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)*, pages 241\u2013245. IEEE.\\n\\nY. Zhao, W.-C. Huang, X. Tian, J. Yamagishi, R. K. Das, T. Kinnunen, Z. Ling, and T. Toda. 2020. Voice Conversion Challenge 2020 - Intra-lingual semi-parallel and cross-lingual voice conversion -. In *Proc. Joint Workshop for the BC and VCC 2020*, pages 80\u201398.\"}"}
{"id": "acl-2022-long-580", "page_num": 13, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"A Complete Out-of-domain ASR Results\\n\\nHere, we provide complete results of OOD-ASR tasks, as shown in Tables 9, 10, 11. All upstream models used in this paper are trained with English speech data, but we are also interested in multilingual pre-trained models in OOD-ASR. Therefore, we evaluate the wav2vec 2.0 XLSR model on the OOD-ASR tasks, as shown in the last row of Table 9. XLSR has identical architecture as wav2vec 2.0 Large, but is trained with 56k hours of speech including 53 different languages. The pre-training data of XLSR cover our cross-lingual tasks' training data. As expected, using multilingual data improves OOD-ASR tasks and achieves the best performance among all upstream models.\\n\\n| Upstream       | es WER | zh CER | ar WER | spon WER | WER |\\n|----------------|--------|--------|--------|----------|-----|\\n| FBANK          | 54.03  | 35.44  | 72.07  | 92.78    | 63.58|\\n| APC            | 55.23  | 36.38  | 70.79  | 90.07    | 63.12|\\n| VQ-APC         | 55.32  | 37.06  | 71.56  | 90.29    | 63.56|\\n| NPC            | 51.07  | 35.85  | 69.87  | 89.86    | 61.66|\\n| Mockingjay     | 58.11  | 38.13  | 73.57  | 91.27    | 65.27|\\n| TERA           | 48.67  | 32.21  | 66.18  | 86.89    | 58.49|\\n| Modified CPC   | 54.37  | 36.22  | 68.94  | 90.61    | 62.54|\\n| wav2vec 2.0    | 46.16  | 31.69  | 60.85  | 84.72    | 55.86|\\n| vq-wav2vec     | 52.02  | 36.55  | 66.19  | 87.89    | 60.66|\\n| wav2vec 2.0 Base | 37.85 | 26.44  | 55.95  | 67.55    | 46.95|\\n| wav2vec 2.0 Large | 35.75 |        |        |          |      |\\n| HuBERT Base    | 37.15  | 26.23  | 54.94  | 68.41    | 46.69|\\n| HuBERT Large   | 30.90  | 23.73  | 50.60  | 71.09    | 44.08|\\n| wav2vec 2.0 XLSR | 26.90 |        |        |          |      |\\n\\n**Table 9:** Results of OOD-ASR tasks, where spon de notes spontaneous speech.\\n\\nNormalized across dimensionality of representation to stabilize training and ensure convergence.\\n\\nUses linear warmup of learning rates in the first 8k steps to stabilize training and ensure convergence.\\n\\nB Responsible NLP Research Checklist\\n\\nHere we answer the ethics questions to show our ethics statement.\\n\\n1. **Did you discuss the limitations of your work?**\\n   Yes, we discussed the constrains on the frozen upstreams and simple task specific heads in abstract and Section 3.\\n\\n2. **Did you discuss any potential risks of your work?**\\n   Yes, in Section 5.3, we discussed about the risks of the unstable benchmark results, and we showed the robustness of SUPERB-SG.\\n\\n3. **Do the abstract and introduction summarize the paper's main claims?**\\n   Yes, the paper's main claims are summarized in abstract and Section 1.\\n\\n**Table 10:** Complete results of OOD-ASR tasks with different model sizes.\\n\\n| Upstream       | es WER | zh CER | ar WER | spon WER | WER |\\n|----------------|--------|--------|--------|----------|-----|\\n| FBANK          | 54.03  | 35.44  | 72.07  | 92.78    | 63.58|\\n| TERA           | 48.67  | 32.21  | 66.18  | 86.89    | 58.49|\\n| Modified CPC   | 54.37  | 36.22  | 68.94  | 90.61    | 62.54|\\n| wav2vec 2.0    | 37.85  | 26.44  | 55.95  | 67.55    | 46.95|\\n| HuBERT Base    | 37.15  | 26.23  | 54.94  | 68.41    | 46.69|\\n\\n**Table 11:** Complete results of OOD-ASR tasks with different data sizes.\"}"}
{"id": "acl-2022-long-580", "page_num": 14, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"B.4 Did you use or create scientific artifacts?\\n\\nYes, we used public datasets and pre-trained models mentioned in Section 3.\\n\\nB.4.1 Did you cite the creators of artifacts you used?\\n\\nYes, we cited those artifacts properly in Section 3.\\n\\nB.4.2 Did you discuss the license or terms for use and/or distribution of any artifacts?\\n\\nYes, the licenses of the artifacts are clearly indicated in Section 3.\\n\\nB.4.3 Did you discuss if your use of existing artifact(s) was consistent with their intended use, provided that it was specified? For the artifacts you create, do you specify intended use and whether that is compatible with the original access conditions (in particular, derivatives of data accessed for research purposes should not be used outside of research contexts)?\\n\\nYes, we use the official implementations of the upstream models in Table 1 and followed their public API to access the models. For the datasets, we also follow their licenses.\\n\\nB.4.4 Did you discuss the steps taken to check whether the data that was collected/used contains any information that names or uniquely identifies individual people or offensive content, and the steps taken to protect/anonymous it?\\n\\nNo, there were no data collection involved in this work. We used the widely-used public datasets and followed the common data preprocessing steps.\\n\\nB.4.5 Did you provide documentation of the artifacts, e.g., coverage of domains, languages, and linguistic phenomena, demographic groups represented, etc.?\\n\\nYes, the properties of the artifacts were indicated in Section 3.\\n\\nB.4.6 Did you report relevant statistics like the number of examples, details of train/test/dev splits, etc. for the data that you used/created?\\n\\nYes, the relevant statistics were reported in Section 3.\\n\\n---\\n\\nTable 12: Training steps, time and GPU devices used by each task when using HuBERT Base as upstream.\\n\\n| Steps  | GPU  |\\n|--------|------|\\n| 32k    | 3090 |\\n| 500k   | V100 |\\n| 10k    | 3090 |\\n| 150k   | 1080 Ti |\\n| 150k   | 1080 Ti |\\n\\nNVIDIA ReForce RTX 3090, NVIDIA Tesla V100 and NVIDIA GeForce GTX 1080 Ti are denoted as 3090, V100 and 1080 Ti respectively.\\n\\nB.5 Did you run computational experiments?\\n\\nYes.\\n\\nB.5.1 Did you report the number of parameters in the models used, the total computational budget (e.g., GPU hours), and computing infrastructure used?\\n\\nWe reported the number of parameters in Section 5.3.1. The computational budget and computing infrastructures are reported in Table 12.\\n\\nB.5.2 Did you discuss the experimental setup, including hyperparameter search and best-found hyperparameter values?\\n\\nNo, we didn't do the hyperparameter searching in a unified way. Some hyperparameters came from the official implementation or related works and some were searched by ourselves. However, the hyperparameters we used are public available.\\n\\nB.5.3 Did you report descriptive statistics about your results (e.g., error bars around results, summary statistics from sets of experiments), and is it transparent whether you are reporting the max, mean, etc. or just a single run?\\n\\nYes, we indicated that in Section 4.\\n\\nB.5.4 If you used existing packages (e.g., for preprocessing, for normalization, or for evaluation), did you report the implementation, model, and parameter settings used (e.g., NLTK, Spacy, ROUGE, etc.)?\\n\\nYes, we reported them in Section 3.\\n\\nB.6 Did you use human annotators (e.g., crowdworkers) or research with human subjects?\\n\\nNo.\"}"}
