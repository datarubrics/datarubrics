{"id": "lrec-2022-1-202", "page_num": 1, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Abstract\\nParliamentary debates represent a large and partly unexploited treasure trove of publicly accessible texts. In the German-speaking area, there is a certain deficit of uniformly accessible and annotated corpora covering all German-speaking parliaments at the national and federal level. To address this gap, we introduce the German Parliamentary Corpus (GERPACOR). GERPACOR is a genre-specific corpus of (predominantly historical) German-language parliamentary protocols from three centuries and four countries, including state and federal level data. In addition, GERPACOR contains conversions of scanned protocols and, in particular, of protocols in Fraktur converted via an OCR process based on TESSERACT. All protocols were preprocessed by means of the NLP pipeline of spaCy and automatically annotated with metadata regarding their session date. GERPACOR is made available in the XMI format of the UIMA project. In this way, GERPACOR can be used as a large corpus of historical texts in the field of political communication for various tasks in NLP.\\n\\nKeywords: Parliament, German, Corpus, UIMA\\n\\n1. Introduction\\nThe creation of language resources that are fully annotated in an optimal way is a major issue which consumes a lot of time and effort. Nevertheless, in the current era, with increasing digitization and open access strategies, new treasures of corpora can be unearthed. This includes parliamentary documents, which are available in various types:\\n\\n- **Plenary protocols**: Plenary protocols are stenographic documentations of the plenary session, including speeches, comments and other contributions such as applause. In the plenary protocols there are references to printed matters which are being debated.\\n\\n- **Printed matter**: All processes which are dealt with in a parliament are referred to as printed matter. These can be draft bills, proposals, reports or questions.\\n  - **Minor Questions**: Members of a parliament may ask their government Minor Questions, which the government must answer and publish in a timely manner.\\n  - **Major Question**: In addition, Members of Parliament can use a Major Question to request information and clarification from the government on political issues and facts. At least in the German Bundestag, the government's answer can be discussed publicly in the plenary session.\\n\\n- **Committee protocols**: Most parliaments discuss issues beforehand in individual committees, which then (among other things) prepare proposals for the plenum. These meetings are usually open to the public and are also minuted. Currently, the latter documents are not yet fully available, which has several reasons: many of them are not accessible via a direct path (API), only as scanned images, or not available at all because they have not been digitized. Since not all of the above-mentioned types of documents are equally available from all German-speaking parliaments, GERPACOR includes only the plenary protocols on a national and federal level in order to create as broad a German parliamentary corpus as possible. For the distributed processing this corpus, we used TESMAGER (Hemati et al., 2016) which utilized spaCy for NLP-related preprocessing. Using spaCy, we executed the following preprocessing pipeline to enrich GERPACOR with linguistic annotations: tokenization, sentence recognition, PoS tagging, lemmatization, named entity recognition, morphology recognition and dependency parsing.\\n\\nWe make all of the annotated documents available using UIMA (Ferrucci et al., 2009) and the XMI format. In addition, for each document, we extract metadata from the documents and add it to the XMI files based on UIMA \u2013 this includes the session date, location, and title, if available. In this way, GERPACOR enables a time-related analysis of parliamentary text data. The final corpus, GERPACOR, is available via GitHub (https://github.com/texttechnologylab/GerParCor).\\n\\n2. Related Work\\nSeveral German-language parliamentary corpora already exist, although some are not primarily based on plenary sessions. Barbaresi (2018) collects speeches by the German President, the President of the Bundestag, the German Chancellor and the Foreign Minister from the years 1982\u20132020. Another collection of tokenized parliamentary debates of the German Bundestag between 1998 and 2015 is presented by Truan (2019). The GermaParl corpus makes available plenary debates between February 1996 and December...\"}"}
{"id": "lrec-2022-1-202", "page_num": 2, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"1901\\n\\nParlSpeech V2 (Rauh and Schwalbach, 2020) contains the parliamentary protocols of the national chambers of Austria, Germany, Denmark and other countries for several periods between 21 and 32 years. The DeuParl corpus of (Kirschner et al., 2021) contains the plenary minutes of the Reichstag and the Bundestag, in total from 1867 to June 2021.\\n\\nSince there is no complete corpus of protocols of the national parliaments for Austria, Switzerland, Liechtenstein, or Germany, which would also be constantly updated to include the ever new protocols, we generated GERPARCOR to fill this gap. To round off this task, GERPARCOR also contains the minutes of the German federal parliaments. In this way, a very large corpus of genre-specific (predominantly historical) German-language texts from three centuries from different countries and different political levels is created (in future work we plan to include the minutes of the GDR People's Chamber).\\n\\n3. Corpus Building\\n\\nWe downloaded all the parliamentary speeches available online to collect the texts of GERPARCOR. We used the APIs of the individual parliaments for this purpose, although this could not be done in a uniform manner. In some cases, parliaments do not even have an API, but only a website that offers their minutes as downloads, separated by session, often mixing minutes and other material, as described in Section 1. Only a few parliaments, such as the Bundestag, offer complete archives for past periods for download. In addition, the available plenary minutes can often only be downloaded individually, with interfaces differing between parliaments. Although there is a joint project of the German state parliaments, only a few of the protocols are available there. As a consequence, we developed a separate download function for each state parliament. The software is available via GitHub.\\n\\nSome protocols were not available online, but could be made available thanks to the support of the Stenographic Services of the Saarland Parliament, the Bremen Parliament, as well as the Parliament of Rheinland-Pfalz. However, the plenary minutes of the Niedersachen State Parliament of the 1st to 9th legislative periods were not available in digital form and could not be digitized. An overview of the automatically recorded protocols of the respective parliaments can be found in Table 1. The distribution of the corresponding parliamentary sessions is shown in Figure 1 to Figure 3.\\n\\nTable 1: Parliamentary protocols of regional and national parliaments included in GERPARCOR.\\n\\n4. OCR\\n\\nSome parliamentary minutes were only available as scanned copies, so they had to be pre-processed with OCR (see Tab. 2). Moreover, some of these scans are\"}"}
{"id": "lrec-2022-1-202", "page_num": 3, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 1: Number of sessions.\\n\\nTesseract provides various language models for text recognition, including German Fraktur. To perform OCR, the individual PDF documents must be converted into images page by page as shown in the workflow in Figure 4 and described by the following procedure:\\n\\n1. Divide all downloaded PDF documents into readable PDF documents (PDF) and into scanned documents (Scan).\\n2. Convert every page of every scanned document (Scan) (Python library: pdf2image (Belval, 2017)).\\n   a. Divide the documents into good and poor quality scans; if there are only good quality scans, proceed to point 3.\\n   b-e. For each image of the group of bad scans: rescale, convert the color from RGB to gray, erode, dilate and remove/reduce noise with a filter (Python library: OpenCV (Heinisuo et al., 2016)).\\n3. Text-extraction:\\n   a. Extract the text of every readable PDF document with a PDF extractor (python library: textract (https://tesseract-ocr.github.io/tessdoc/Data-Files-in-different-versions.html)).\\n   b. Extract the text of every scanned document from converted images using Tesseract.\\n\\nhttps://tesseract-ocr.github.io/tessdoc/Data-Files-in-different-versions.html\\nhttps://textract.readthedocs.io/en/stable/\"}"}
{"id": "lrec-2022-1-202", "page_num": 4, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"4. NLP-processing of every text extraction using spaCy 3 via TEXTIMAGER.\\n\\n5. Check OCR output quality using a spellchecker (SymSpell (Garbe, 2014)).\\n\\nStart all PDF (\uf1c1) / Divide readable (\uf1c1) and scanned (\u1f4f7) using separate folders\\n\\nExtract all in with a PDF-Reader 3a\\n\\nConvert every page of every readable (\uf1c1) and scanned (\u1f4f7) into a picture (2)\\n\\nDivide into the group of good quality (/ctre) and bad quality (2)\\n\\nScale every to a larger size (2b)\\n\\nConvert color of every from RGB to GRAY (2c)\\n\\nErode and dilate every (2d)\\n\\nFilter every to remove noises (2e)\\n\\nOCR every readable (/ctre) and scanned (\u1f4f7) of every document with TESSERACT 3b\\n\\nUse spaCy 3 via TEXTIMAGER for pre-processing of every and\\n\\nStop Spellcheck every for reasons of quality checking 4a\\n\\nFigure 4: Workflow of GERPARCOR\u2019s OCR process including NLP preprocessing.\\n\\nGeeksforGeeks have a good example to extract the text of an PDF document, which we used as a basis for our code 5. To this end, we removed each converted image and used multithreading to speed up the extraction.\\n\\nBy default, TESSERACT uses four cores to extract text from images 6. Thus, there are two alternatives to prevent overthreading:\\n\\n1. Change the number of cores for text extraction from four to one and start the application with multithreading.\\n\\n2. Divide the number of existing threads by four, round the result and start the application with threads (x = result).\\n\\n5 https://www.geeksforgeeks.org/python-reading-contents-of-pdf-using-ocr-optical-character-recognition\\n\\n6 https://tesseract-ocr.github.io/tessdoc/FAQ.html\\n\\nFigure 5: Testing OCR quality based on TESSERACT. Bold face refers to Fraktur. y-axis shows the percentage of correct tokens to the total number of tokens (exclude the unknown tokens).\\n\\nPDFs that contain Fraktur are a challenge for OCR. For this reason, we rescaled, eroded, and dilated them and tried to reduce noise with a filter to improve extraction, as recommended by TESSERACT.\\n\\nFigure 5 shows the results of testing the OCR output quality. A spell checker was used for this test. Bold face columns concern extractions in Fraktur. Most of the quality outputs are close to equal at around 94%. For spell checking, we used SymSpell. For this we used the Python library sysmspellpy (mammothb, 2018). We checked every token which consists of letters or is a combination of numbers and letters. Otherwise it was skipped, because SymSpell processes only words or word-like tokens. SymSpell has three possible outputs in our case:\\n\\n1. The input and the output are equal to each other (which increases the number of correct words).\\n\\n2. The input and the output are unequal to each other (which increases number of wrong words).\\n\\n3. The output is empty; in this case SymSpell cannot correct the input (which increases the number of unknown words).\\n\\nMoreover, it should be noted that good quality says nothing about the number of unknown words and that unknown good quality contains all words that are not.\"}"}
{"id": "lrec-2022-1-202", "page_num": 5, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"| State                | Period                                | Correct | Wrong | Unknown | Correct | Wrong | Unknown |\\n|---------------------|---------------------------------------|---------|-------|---------|---------|-------|---------|\\n| Baden W\u00fcrttemberg   | 1985-06-05\u20131996-02-08                 | 93.15%  | 6.05% | 87.52%  | 93.15%  | 6.05% | 87.52%  |\\n| Bayern              | 1946-12-16\u20131950-11-20                 | 89.92%  | 3.70% | 86.60%  | 89.92%  | 3.70% | 86.60%  |\\n| Bremen              | 1967-11-08\u20131995-09-05                 | 94.05%  | 5.66% | 88.73%  | 94.05%  | 5.66% | 88.73%  |\\n| Bundesrat           | 1949-09-07\u20131996-12-21                 | 94.53%  | 8.39% | 86.60%  | 94.53%  | 8.39% | 86.60%  |\\n| Hessen              | 1946-12-19\u20131998-12-16                 | 94.48%  | 5.95% | 88.86%  | 94.48%  | 5.95% | 88.86%  |\\n| Mecklenburg-Vorpommern | 1990-10-26\u20132002-06-27         | 95.01%  | 6.92% | 88.44%  | 95.01%  | 6.92% | 88.44%  |\\n| Niedersachsen       | 1982-06-22\u20131998-02-19                 | 94.70%  | 6.47% | 88.56%  | 94.70%  | 6.47% | 88.56%  |\\n| Nordrhein Westfalen | 1947-05-19\u20132005-04-21                 | 95.10%  | 6.23% | 89.18%  | 95.10%  | 6.23% | 89.18%  |\\n| Nationalrat (AT)    | 1918-10-21\u20131930-07-16                 | 88.56%  | 3.84% | 85.15%  | 88.56%  | 3.84% | 85.15%  |\\n| Rheinland-Pfalz     | 1947-06-04\u20132006-02-17                 | 94.34%  | 6.41% | 88.30%  | 94.34%  | 6.41% | 88.30%  |\\n| Saarland            | 1994-09-11\u20131999-08-25                 | 95.05%  | 5.91% | 89.44%  | 95.05%  | 5.91% | 89.44%  |\\n| Sachsen             | 1990-10-27\u20132004-06-25                 | 95.54%  | 6.67% | 89.17%  | 95.54%  | 6.67% | 89.17%  |\\n| Th\u00fcringen           | 1990-10-25\u20131994-08-09                 | 94.21%  | 7.01% | 87.61%  | 94.21%  | 7.01% | 87.61%  |\\n\\nTable 2: Testing OCR quality based on TESSERACT. Bold face refers to Fraktur. The number of unknown words is significantly lower than the number of correct words. The percentages of the numbers of correct, wrong and unknown words are based on all words, which are not skipped. For this reason, unknown good quality is equal in percentage to the percentage of correct words. The National Council has the worst quality score (88.30% - unknown good quality) and Sachsen/Saxony the best one (95.54% - good quality). Our test shows that OCR is sufficiently good to support NLP based on GERPARC. With the preprocessed version of GERPARC it is possible to create different subcorpora to support different research endeavors:\\n\\n- one can use GERPARC as a whole,\\n- without OCR-based documents,\\n- only with OCR-based documents,\\n- or only with those documents based on Fraktur.\\n\\nIn particular, we expect time-related approaches (concerning studies of language change); but also analyses of political language should become possible with these data on a scale that encompasses parliamentary texts from several parliaments and, at the same time, several countries.\\n\\n5. Future Work\\n\\nOnce the basic corpus has been created, it must be ensured that new releases of parliamentary minutes are continually added to the corpus. This requires automated retrieval of the protocols and their processing. In addition, a web-based search portal is needed to search and extract the minutes in different subsets and different formats. To enable this, the UIMA Database Interface (Abrami and Mehler, 2018) can be used, which enables storage and retrieval of UIMA documents with a number of data and document-based database systems. Moreover, for improving the quality of OCR recognition, it is planned to train a model capable of reconstructing unknown words, which should be possible given words and their contexts. Finally, GERPARC should be extended to include other parliamentary documents as listed in section 1.\\n\\n6. Conclusion\\n\\nWe presented, GERPARC, the currently largest German-language corpus for parliamentary protocols. It includes the protocols of parliaments in Austria, Germany, Liechtenstein and Switzerland. For this purpose, the online available minutes of federal parliaments (for Germany also for state parliaments) were automatically extracted, OCRed and preprocessed with spaCy. Since some protocols were only available as scans, some in Fraktur, they were converted with the help of TESSERACT. The complete corpus with its annotations and all the programs created for it are available via GitHub.\\n\\n7. Bibliographical References\\n\\nAbrami, G. and Mehler, A. (2018). A UIMA database interface for managing NLP-related text annotations. In Proceedings of the Eleventh International Conference on Language Resources and Evaluation (LREC 2018), Miyazaki, Japan, May. European Language Resources Association (ELRA).\\n\\nBarbaresi, A. (2018). A corpus of german political speeches from the 21st century. In LREC.\"}"}
{"id": "lrec-2022-1-202", "page_num": 6, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Belval, E. (2017). symspellpy. https://github.com/Belval/pdf2image. Accessed: 2022-01-17.\\n\\nBl\u00e4tte, A. and Blessing, A. (2018). The GermaParl corpus of parliamentary protocols. In Proceedings of the Eleventh International Conference on Language Resources and Evaluation (LREC 2018), Miyazaki, Japan, May. European Language Resources Association (ELRA).\\n\\nFerrucci, D., Lally, A., Verspoor, K., and Nyberg, E. (2009). Unstructured Information Management Architecture (UIMA) Version 1.0. OASIS Standard, Mar.\\n\\nGarbe, W. (2014). Symspell. https://github.com/wolfgarbe/SymSpell. Accessed: 2022-01-17.\\n\\nHeinisuo, O.-P., Smorkalov, A., and Serebryakov, G. (2016). Opencv on wheels. https://github.com/opencv/opencv-python. Accessed: 2022-01-17.\\n\\nHemati, W., Uslu, T., and Mehler, A. (2016). Textimager: a distributed uima-based system for nlp. In Proceedings of the COLING 2016 System Demonstrations. Federated Conference on Computer Science and Information Systems.\\n\\nHonnibal, M., Montani, I., Van Landeghem, S., and Boyd, A. (2020). spaCy: Industrial-strength Natural Language Processing in Python.\\n\\nKay, A. (2007). Tesseract: An open-source optical character recognition engine. Linux J., 2007(159):2, jul.\\n\\nKirschner, C., Walter, T., Eger, S., Glavas, G., Lauscher, A., and Ponzetto, S. P. (2021). Deuparl.\\n\\nmammothb. (2018). symspellpy. https://github.com/mammothb/symspellpy. Accessed: 2022-01-17.\\n\\nRauh, C. and Schwalbach, J. (2020). The ParlSpeech V2 data set: Full-text corpora of 6.3 million parliamentary speeches in the key legislative chambers of nine representative democracies.\\n\\nSippl, C., Burghardt, M., Wolff, C., and Mielke, B. (2016). Korpusbasierte analyse \u00f6sterreichischer parlamentsreden. In Erich Schweighofer, editor, Netzwerke : Tagungsband des 19. Int. Rechtsinformatik Symposions IRIS 2016 : 25.- 7. Feb. 2016, Univ. Salzburg 372ocg.at, pages 139\u2013148.\\n\\nTruan, N. (2019). D\u00e9bats parlementaires sur l'Europe au bundestag (1998-2015). ORTOLANG (Open Resources and TOols for LANGuage) \u2013www.ortolang.fr.\\n\\nWissik, T. and Pirker, H. (2018). Parlat beta corpus of austrian parliamentary records. In Darja Fi\u0161er, et al., editors, LREC2018 Workshop ParlaCLARIN: Creating and Using Parliamentary Corpora In Proceedings of the Eleventh International Conference on Language Resources and Evaluation LREC2018, Miyazaki. European Language Resources Association.\"}"}
{"id": "lrec-2022-1-202", "page_num": 7, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 6: Excerpt from an annotated XMI document: Line 1 and 2 shows meta information from the minutes of the Baden-W\u00fcrttemberg state parliament on 2021-11-05. This contains the title (2) as well as the date and a subtitle (1). For this protocol, the sentence \\\"Alterspr\u00e4sidient Winfried Kretschmann: Meine sehr verehrten Damen und Herren, liebe Kolleginnen und Kollegen!\\\" (English: \\\"Senior President Winfried Kretschmann: Ladies and gentlemen, dear colleagues!\\\") is shown here in XMI. Line 4 shows the sentence annotation and lines 6 - 15 an excerpt of the lemma annotations; and lines 17 - 19 an excerpt from the token annotations. Within the serialization of the CAS document (XMI) references can be recognized, which are specified via the ID's of the respective attributes. In line 21 the morphological annotation is given for the token in line 17. Lines 23 and 24 show an excerpt of the dependency annotations for the sentence.\"}"}
