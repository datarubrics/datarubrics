{"id": "x8RgF2xQTj", "page_num": 17, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A Details of Benchmarked Methods\\n\\nWe consider a classification setting with discrete label space \\\\( \\\\{1, \\\\ldots, C\\\\} \\\\) of \\\\( C \\\\) classes.\\n\\nWe evaluate two classes of methods: deterministic methods and distributional methods. Distributional methods output a second-order predictive distribution \\\\( q(\\\\pi | x) \\\\) for input \\\\( x \\\\in X \\\\). Deterministic methods output a single probability vector \\\\( \\\\pi(x) \\\\in \\\\Delta^{C-1} \\\\) and additional uncertainty estimates detailed below. The (pre-softmax) logits of the models are denoted by \\\\( f(x) \\\\in \\\\mathbb{R}^C \\\\). Therefore, it holds that \\\\( \\\\pi(x) = \\\\text{softmax}(f(x)) \\\\).\\n\\nThe activations of layer \\\\( \\\\ell \\\\in \\\\{1, \\\\ldots, L\\\\} \\\\) in the model is denoted by \\\\( f_\\\\ell(x) \\\\in \\\\mathbb{R}^{D_\\\\ell} \\\\) with \\\\( f_L(x) = f(x) \\\\), \\\\( D_\\\\ell = C \\\\). The one_hot function converts a label \\\\( y \\\\in \\\\{1, \\\\ldots, C\\\\} \\\\) into a vector with only zero entries except for the \\\\( y \\\\)th one, which is one.\\n\\nA.1 Deterministic Methods\\n\\nDeterministic methods output an uncertainty estimate \\\\( u(x) \\\\) for input \\\\( x \\\\in X \\\\), such as the estimated probability of the model's prediction to be correct.\\n\\nA.1.1 Loss Prediction\\n\\nLoss prediction \\\\([51, 28, 25]\\\\) employs an additional output head \\\\( u_{lp} \\\\) connected to the pre-logit layer that predicts the loss of the network's prediction on input \\\\( x \\\\in X \\\\). The loss predictor head is trained in a supervised fashion by making \\\\( u_{lp}(x) \\\\), the predicted loss, closer to the actual loss \\\\( \\\\ell(\\\\pi(x), y) = -\\\\log \\\\pi_y(x) \\\\).\\n\\nPrecisely, we use the objective\\n\\n\\\\[\\nL_{lp} = -\\\\frac{1}{n} \\\\sum_{i=1}^{n} \\\\log \\\\pi_{y(i)}(x(i)) + \\\\lambda u_{lp}(x(i)) + \\\\log \\\\pi_{y(i)}(x(i)),\\n\\\\]\\n\\n(2)\\n\\nwhere the risk predictor loss (squared Euclidean distance) is traded off with the label predictor loss (cross-entropy) with a hyperparameter \\\\( \\\\lambda \\\\in \\\\mathbb{R}^+ \\\\).\\n\\nNote that \\\\( Y | X = x \\\\) is a random variable in the presence of aleatoric uncertainty. In expectation, Eq. (2) encourages \\\\( u_{lp}(x) \\\\) to approximate the true pointwise risk \\\\( R(\\\\pi, x) = \\\\mathbb{E}_{p_{\\\\text{data}}(y|x)}[\\\\ell(\\\\pi(x), y)] \\\\) at each input \\\\( x \\\\in X \\\\).\\n\\nA.1.2 Correctness Prediction\\n\\nCorrectness prediction is a variant of risk prediction that, instead of aiming to predict the risk of the network on input \\\\( x \\\\in X \\\\), estimates the true probability of correctness \\\\( p_{\\\\text{data}}(\\\\arg \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} f_c(x) = y | x \\\\in X) \\\\). This is achieved by using a sigmoid correctness predictor head \\\\( h \\\\) and using the objective\\n\\n\\\\[\\nL_{cp} = -\\\\frac{1}{n} \\\\sum_{i=1}^{n} \\\\log \\\\pi_{y(i)}(x(i)) - \\\\lambda l_i \\\\log h(x(i)) + (1 - l_i) \\\\log (1 - h(x(i)));\\n\\\\]\\n\\n(3)\\n\\nwhere\\n\\n\\\\[\\nl_i = h(\\\\arg \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} f_c(x(i)) = y(i) \\\\quad \\\\forall i \\\\in \\\\{1, \\\\ldots, n\\\\},\\n\\\\]\\n\\nand the correctness predictor loss (binary cross-entropy) is traded off with the label predictor loss (cross-entropy) with a hyperparameter \\\\( \\\\lambda \\\\in \\\\mathbb{R}^+ \\\\). The uncertainty estimate is \\\\( u_{cp}(x) = 1 - h(x) \\\\) (i.e., the probability of making an error).\\n\\nA.1.3 Deterministic Uncertainty Quantification\\n\\nThe deterministic uncertainty quantification (DUQ) method of Van Amersfoort et al. \\\\([53]\\\\) learns a latent mixture-of-RBF density on the training set with a strictly proper scoring rule to capture the uncertainty in the prediction based on the Euclidean distance of the input's embedding to the mixture means. The training objective is\\n\\n\\\\[\\nL_{duq} = -\\\\frac{1}{n} \\\\sum_{i=1}^{n} \\\\sum_{c=1}^{C} \\\\pi_c(x) \\\\cdot \\\\log(k_c) + \\\\log(1 - k_c),\\n\\\\]\\n\\n(4)\\n\\nwhere\\n\\n\\\\[\\nk_c = \\\\frac{1}{n} \\\\sum_{i=1}^{n} \\\\text{one}_\\\\text{hot}(y(i), c) \\\\log \\\\pi_c(x(i)) + \\\\log(1 - \\\\pi_c(x(i))).\\n\\\\]\"}"}
{"id": "x8RgF2xQTj", "page_num": 18, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"where $K_c(x) = \\\\exp\\\\left(-\\\\frac{1}{2} \\\\gamma \\\\|f(x) - m_c\\\\|^2\\\\right)$ is the RBF value corresponding to class $c \\\\in \\\\{1, \\\\ldots, C\\\\}$ identified by its mean vector $m_c$ in the latent space. To facilitate minibatch training, Van Amersfoort et al. [53] employ an exponential moving average (EMA) to learn the mean vector using the following update rules:\\n\\n$$n_c \\\\leftarrow \\\\gamma \\\\cdot n_c + (1 - \\\\gamma) |B_c|$$ (5)\\n\\n$$M_c \\\\leftarrow \\\\gamma \\\\cdot M_c + (1 - \\\\gamma) X(x, y) \\\\in B_c W_c f(x)$$ (6)\\n\\n$$m_c \\\\leftarrow M_c n_c$$ (7)\\n\\nwhere $B$ is a minibatch of samples and $B_c = \\\\{(x, y) \\\\in B | y = c\\\\} \\\\forall c \\\\in \\\\{1, \\\\ldots, C\\\\}$. $\\\\gamma$ is the EMA parameter, and $W_c$ characterizes a linear mapping of the logits for each class.\\n\\nTo regularize the latent density and prevent feature collapse, Van Amersfoort et al. [53] use the following gradient penalty added to $\\\\nabla \\\\theta L$:\\n\\n$$\\\\lambda \\\\cdot \\\\left(\\\\frac{\\\\nabla_x \\\\sum_{c=1}^{C} K_c(x)^2 - 1}{2}\\\\right)^2$$ (8)\\n\\nEach RBF component in the latent space corresponds to one class. The confidence output of the method is the maximal RBF value of the input over all classes. Therefore, the uncertainty estimate can be calculated as $u_{duq}(x) = 1 - \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} K_c(x)$.\\n\\nThe predicted class of the trained network is $\\\\arg\\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} K_c(x)$.\\n\\nA.1.4 Mahalanobis\\n\\nThe Mahalanobis method [30] builds a post-hoc latent density for the training set in the latent space by calculating per-class means and covariances, and using the induced mixture-of-Gaussians as the latent density estimate. Such latent densities are estimated in multiple layers of the network. One layer's confidence estimate is the maximal Mahalanobis score (Gaussian log-likelihood) $K_\\\\ell(x)$ over all classes:\\n\\n$$K_{\\\\ell,c}(x) = -\\\\frac{1}{2} f_\\\\ell(x) - \\\\mu_{\\\\ell,c}^\\\\top \\\\Sigma_{\\\\ell}^{-1} f_\\\\ell(x) - \\\\mu_{\\\\ell,c}$$ (9)\\n\\n$$K_\\\\ell(x) = \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} K_{\\\\ell,c}(x).$$ (10)\\n\\nThe centroid of the Gaussian for class $c \\\\in \\\\{1, \\\\ldots, C\\\\}$ in layer $\\\\ell \\\\in \\\\{1, \\\\ldots, L\\\\}$ is $\\\\mu_{\\\\ell,c} = \\\\frac{1}{n_c} \\\\sum_{i=1}^{n_c} h(y(i)) = c, f_\\\\ell(x(i))$, (11)\\n\\nwhere $n_c$ is the number of samples with label $c$, and $\\\\Sigma_\\\\ell = \\\\frac{1}{n_C} \\\\sum_{c=1}^{C} \\\\sum_{i=1}^{n_c} [h(y(i)) = c, f_\\\\ell(x(i))] \\\\otimes [h(y(i)) = c, f_\\\\ell(x(i))]^\\\\top$ (12)\\n\\nis the tied covariance matrix used for all classes in layer $\\\\ell \\\\in \\\\{1, \\\\ldots, L\\\\}$.\\n\\nTo make the differences of latent embeddings of ID and OOD samples more pronounced, all samples are adversarially perturbed w.r.t. the maximal Mahalanobis score for each layer's confidence score:\\n\\n$$\\\\hat{x}_\\\\ell = x + \\\\epsilon \\\\text{sgn}(\\\\nabla_x K_\\\\ell(x))$$ (13)\\n\\nThis perturbed sample is used to compute $K_\\\\ell(x)$. Finally, a logistic regression OOD detector is learned on a held-out validation set of a balanced mix of ID and OOD samples to learn weights $w_\\\\ell$ for each layer $\\\\ell \\\\in \\\\{1, \\\\ldots, L\\\\}$ using the $L$-dimensional inputs $K_1(\\\\hat{x}_1)^\\\\top, \\\\ldots, K_L(\\\\hat{x}_L)^\\\\top$. The final uncertainty estimate becomes $u_{\\\\text{Mah}}(x) = \\\\sum_{\\\\ell=1}^{L} w_\\\\ell K_\\\\ell(\\\\hat{x}_\\\\ell)$. This is the only method in our benchmark that requires a mixed ID-OOD validation set for training the logistic regression OOD detector.\"}"}
{"id": "x8RgF2xQTj", "page_num": 19, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A.1.5 Temperature Scaling\\n\\nTemperature scaling [18] post-hoc calibrates the predictive softmax distribution \\\\( \\\\pi(x) \\\\) by learning a temperature parameter \\\\( \\\\tau \\\\in \\\\mathbb{R}^+ \\\\) on a held-out ID validation set after training and setting \\\\( \\\\pi(x) := \\\\text{softmax}(f(x)/\\\\tau) \\\\). Guo et al. [18] show that temperature scaling leads to improvements on both the ECE score and strictly proper scoring rules. To determine the optimal \\\\( \\\\tau \\\\), we perform a grid search over \\\\( \\\\tau \\\\in \\\\{0.1, 0.2, 0.3, \\\\ldots, 10.1\\\\} \\\\) and choose the one that leads to the lowest NLL loss, following [37].\\n\\nA.1.6 Deep Deterministic Uncertainty\\n\\nThe Deep Deterministic Uncertainty (DDU) method [37] applies the spectral normalization of SNGPs (Appendix A.2.1) to the hidden weights to establish a distance-aware latent space. It then fits a mixture of Gaussians to this latent space based on (ID) training set statistics. Unlike the Mahalanobis method, it\\n\\n1. does not use adversarial perturbations;\\n2. only builds a latent density in the pre-logit layer;\\n3. does not tie the covariance matrix across classes:\\n\\n\\\\[\\n\\\\pi_c = \\\\frac{1}{n_c n} \\\\quad (14)\\n\\\\]\\n\\n\\\\[\\n\\\\mu_c = \\\\frac{1}{n_c} \\\\sum_{i=1}^{n_c} h_y(i) = c_i f_{L-1}(x) \\\\quad (15)\\n\\\\]\\n\\n\\\\[\\n\\\\Sigma_c = \\\\frac{1}{n_c - 1} \\\\sum_{i=1}^{n_c} (h_y(i) = c_i f_{L-1}(x) - \\\\mu_c)^\\\\top \\\\quad (16)\\n\\\\]\\n\\nfor \\\\( c \\\\in \\\\{1, \\\\ldots, C\\\\} \\\\) where \\\\( f_{L-1}(x) \\\\) denotes the output of the pre-logit layer on input \\\\( x \\\\in X \\\\). Finally, it uses a held-out ID validation set to apply temperature scaling to the logits.\\n\\nUnlike the other methods we evaluate, the DDU method uses two uncertainty estimators, one for epistemic uncertainty and one for aleatoric uncertainty. The epistemic estimator is the negative log probability of the pre-logit on sample \\\\( x \\\\in X \\\\) under the MoG:\\n\\n\\\\[\\nu_{ddu,eu}(x) = -\\\\log p_{f_{L-1}(x)} \\\\{ \\\\pi_c \\\\} \\\\_{c=1}^C, \\\\{ \\\\mu_c \\\\} \\\\_{c=1}^C, \\\\{ \\\\Sigma_c \\\\} \\\\_{c=1}^C.\\n\\\\]\\n\\nThe aleatoric estimator is the entropy of the softmax predictive distribution:\\n\\n\\\\[\\nu_{ddu,au}(x) = H(\\\\pi(x)).\\n\\\\]\\n\\nMukhoti et al. [37] do not provide a predictive uncertainty estimator, and the sum of the aleatoric and epistemic estimator is not a performant choice for this task, as the magnitude of the epistemic part is usually much larger than that of the aleatoric part in practice.\\n\\nDuring training, we employ the cross-entropy loss to match the network's predicted probabilities to the (one-hot) ground-truth labels.\\n\\nFor a fair comparison of DDU with the other methods, we use the epistemic estimator for the OOD detection task following Mukhoti et al. [37] and the best-performing one from Appendix D otherwise.\\n\\nA.1.7 Cross-Entropy Baseline\\n\\nAs a baseline, we also benchmark a deterministic single-point network trained with the cross-entropy loss. While this is a deterministic method, one can also equate it to a degenerate Dirac delta distribution in parameter space:\\n\\n\\\\[ q(\\\\theta') = \\\\delta(\\\\theta - \\\\theta') \\\\]\\n\\nmaking it the simplest possible distributional method.\\n\\nA.2 Distributional Methods\\n\\nDistributional methods output a second-order input-conditional probability distribution over probability vectors \\\\( q(\\\\pi|x) \\\\).\"}"}
{"id": "x8RgF2xQTj", "page_num": 20, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A.2.1 Spectral Normalized Gaussian Process\\n\\nSpectral normalized Gaussian processes (SNGP) [32] give an approximate Bayesian treatment to obtain uncertainty estimates using spectral normalization of the parameter tensors and a last-layer Gaussian process approximated by Fourier features. For an input $x \\\\in X$, it predicts a multivariate Gaussian distribution $N(B\\\\phi(x), \\\\Phi^\\\\top\\\\Phi + I - 1\\\\phi(x)I)$, (17)\\n\\nwhere $B$ is a learned parameter matrix that maps from the pre-logits to the logits, and $\\\\phi(x) = \\\\text{cos}(Wf_{L-1}(x) + b)$ is a random feature embedding of the input $x \\\\in X$ with $f_{L-1}(x)$ being a pre-logit embedding, $W$ a fixed semi-orthogonal random matrix, and $b$ a fixed random vector sampled from Uniform $(0, 2\\\\pi)$. $\\\\Phi^\\\\top\\\\Phi$ is the (unnormalized) empirical covariance matrix of the pre-logits of the training set. This is calculated during the last epoch. The multivariate Gaussian presented above can be Monte-Carlo sampled to obtain $M$ logit vectors. We use $M = 1000$ Monte-Carlo samples and did not notice differences between using $M \\\\in \\\\{10, 100, 1000, 10000\\\\}$ samples. Unless noted otherwise, we use $M = 1000$ for all other methods that require Monte-Carlo sampling as well. During training, we calculate the BMA from the set of logits and use the cross-entropy loss to fit the BMA to the (one-hot) labels.\\n\\nThe method also applies spectral normalization to the hidden weights in each layer to satisfy input distance awareness. We treat whether to apply spectral normalization to the batch normalization modules and whether to use layer normalization in the GP layer as hyperparameters. We benchmark both SNGPs and their non-spectral-normalized variants (denoted by GP).\\n\\nA.2.2 Latent Heteroscedastic Classifier\\n\\nLatent heteroscedastic classifiers (HET-XL) [6] construct a heteroscedastic Gaussian distribution in the pre-logit layer to model per-input uncertainties: $N(\\\\phi(x), \\\\Sigma(x))$, where $\\\\phi(x)$ is the learned input-conditional pre-logit mean and $\\\\Sigma(x) = V(x)^\\\\top V(x) + \\\\text{diag}(d(x))$ (18) is an input-conditional full-rank covariance matrix. Both the low-rank term's $V(x)$ and the diagonal term's $d(x)$ are calculated as a linear function of the layer's output before the pre-logit layer. One can Monte-Carlo sample the pre-logits from the above Gaussian distribution and obtain a set of logits by transforming each using the last linear layer of the network. During training, this set is used to calculate the Bayesian Model Average (BMA), the argmax of which is the final prediction. HET-XL uses a temperature parameter to scale the logits before calculating the BMA. This is chosen using a validation set. During training, we sample a set of logits, calculate the BMA, and use the cross-entropy loss to fit the BMA to the (one-hot) labels.\\n\\nA.2.3 Laplace Approximation\\n\\nThe Laplace approximation [8] approximates a Gaussian posterior $q(\\\\theta|D)$ over the network parameters for a Gaussian prior $p(\\\\theta)$ and likelihood defined by the network architecture. It uses the maximum a posteriori (MAP) estimate as the mean and the inverse Hessian of the loss evaluated at the MAP as the covariance matrix:\\n\\n$N(\\\\theta_{MAP}, \\\\frac{\\\\partial^2 L(D; \\\\theta)}{\\\\partial \\\\theta_i \\\\partial \\\\theta_j} \\\\theta_{MAP}! - 1)$. (19)\\n\\nThis is a post-hoc method applied to a point estimate network. Following the recommendation of Daxberger et al. [8], we employ a last-layer KFAC Laplace approximation and find the prior variance using cross-validation. We draw network outputs using the GLM predictive on CIFAR-10, and the NN predictive on ImageNet because of the infeasibility of calculating the network Jacobian for the GLM due to extreme memory requirements ($\\\\approx 450$ GB VRAM).\\n\\nA.2.4 SW AG\\n\\nThe Stochastic Weight Averaging\u2013Dropout [34] method takes a model that has either converged or is close to converging and fine-tunes it for a certain number of epochs while taking checkpoints.\"}"}
{"id": "x8RgF2xQTj", "page_num": 21, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"of it at evenly spaced points. It keeps track of the averaged checkpoint weights and their low-rank covariance matrix. Once the fine-tuning is over, the method fits a Gaussian over the parameter space with mean and covariance matrix from the collected checkpoints. During inference, it samples the parameter-space posterior and uses these samples to make multiple predictions per input. Following [34], we sample $M = 30$ parameters from the Gaussian posterior before evaluation and re-calculate the batch normalization statistics for each of them on a fraction of the training dataset.\\n\\nA.2.5 MC Dropout\\n\\nMC Dropout [48] has been shown to be a variational approximation to a deep Gaussian process [12]. During training, only one logit vector per input is sampled, and the cross-entropy loss is used. MC Dropout in the realm of uncertainty quantification remains active during inference and is used to sample $M$ logits by performing $M$ forward passes. Therefore, it directly samples from $q(\\\\pi|x)$ without characterizing it.\\n\\nA.2.6 HetClassNN\\n\\nThe Heteroscedastic Classification Neural Network (HetClassNN) [23] employs an output head that predicts input-conditional heteroscedastic logit variance vectors. During training, the method MC approximates the integral of the softmax probabilities with respect to the logit-space Gaussian and trains this Bayesian Model Average (BMA) with the cross-entropy loss. We call the logit samples from the Gaussian \u2018internal logits.\u2019 During inference, there is another meta MC sampling step of $M = 30$ samples w.r.t. random dropout masks. This results in $M$ outputs from the method, each of which is a Bayesian Model average of the logit-space Gaussian w.r.t a different dropout mask. We refer to the logarithms of these outputs as the \u2018external logits\u2019 or just \u2018logits.\u2019\\n\\nA.2.7 Deep Ensemble\\n\\nDeep ensembles [29] are approximate model distributions that give rise to a mixture of Dirac deltas in parameter space:\\n\\n$$q(\\\\theta) = \\\\frac{1}{M} \\\\sum_{i=1}^{M} \\\\delta(\\\\theta - \\\\theta(i))$$\\n\\nPredominantly used to reduce the variance in the predictions and improve model accuracy, deep ensembles can also be used as approximators to the true distribution $p(\\\\theta)$ induced by the randomness over datasets $D = \\\\{(x(i), y(i)) \\\\in \\\\{1, \\\\ldots, n\\\\} \\\\times \\\\mathbb{R}, x(i) \\\\in \\\\mathbb{R}, y(i) \\\\in \\\\{1, \\\\ldots, C\\\\}\\\\}$ in the generative process $p_{\\\\text{data}}(x, y)$.\\n\\nWe obtain a set of logits by performing a forward pass over all models. Similarly to MC Dropout, deep ensembles do not explicitly parameterize the distribution over the predictions \u2013 they only sample from it. We ensemble five independently trained cross-entropy models.\\n\\nA.2.8 Shallow Ensemble\\n\\nShallow ensembles [31] are lightweight approximations of deep ensembles. They use a shared backbone and $M$ output heads (often referred to as \u201cexperts\u201d). With a single forward pass, one obtains $M$ logit vectors per input. During training, the BMA of the $M$ predictions is calculated and matched to the ground-truth labels.\\n\\nA.2.9 Evidential Deep Learning\\n\\nThe seminal evidential deep learning method of Sensoy et al. [46] (denoted by EDL following Ulmer et al. [50]) directly learns a second-order predictive distribution $q(\\\\pi|x)$ using closed-form Bayesian inference. In particular, it learns an input-conditional Dirichlet posterior $q(\\\\pi|x) = \\\\text{Dir}(\\\\pi; \\\\beta(x))$ with a fixed Dirichlet (conjugate) prior $\\\\text{Dir}(1)$ representing a total lack of information and a categorical distribution over the classes as the likelihood. The logits of the network, $f(x)$, are turned into pseudo-counts $\\\\alpha(x) \\\\in \\\\mathbb{R}^C$ using either the exp or the softplus activation function. The posterior distribution is obtained in closed form by setting $\\\\beta(x) = \\\\alpha(x) + 1$. The components of the IT decomposition can also be derived in closed form; see Ulmer et al. [50] for details.\"}"}
{"id": "x8RgF2xQTj", "page_num": 22, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"The loss of the EDL method has three components:\\n\\n\\\\[\\n\\\\text{Loss}_{\\\\text{EDL}} = \\\\sum_{n=1}^{N} \\\\left( \\\\frac{h(y_i)}{p(x_i)} - \\\\beta x_i \\\\right) + \\\\lambda t \\\\cdot D_{KL}(\\\\bar{\\\\beta} x_i, \\\\bar{y}_i) \\\\cdot \\\\text{Dir}(1), (20)\\n\\\\]\\n\\nwhere\\n\\n\\\\[\\nS(x) = \\\\sum_{c=1}^{C} \\\\beta x_i c\\n\\\\]\\n\\nand\\n\\n\\\\[\\n\\\\bar{\\\\beta}(x, y) = \\\\text{one}_\\\\text{hot}(y) + (1 - \\\\text{one}_\\\\text{hot}(y)) \\\\circ \\\\beta\\n\\\\]\\n\\nis the Dirichlet parameter vector after removing the prediction corresponding to the label's index. The first term matches the mean of the Dirichlet posterior to the (one-hot) GT labels. The second term reduces the summed variance of each index \\\\(c \\\\in \\\\{1, \\\\ldots, C\\\\}\\\\) of the random variable distributed as the Dirichlet posterior. These two terms concentrate the Dirichlet density onto the one-hot label. The third term is a regularizer that drives all dimensions of the Dirichlet parameter vector toward a complete lack of knowledge except the one corresponding to the GT label.\\n\\n\\\\(\\\\lambda_t\\\\) is the scheduled trade-off factor at step \\\\(t\\\\). We use a linear up-scaling of \\\\(\\\\lambda_t\\\\) from 0 to \\\\(\\\\lambda_{\\\\text{max}} \\\\leq 1\\\\). On CIFAR-10, \\\\(\\\\lambda_{\\\\text{max}} = 1\\\\) is used following Sensoy et al. \\\\[46\\\\]. On ImageNet, this led to an overly strong regularizer that prohibited learning (as the regularizer's magnitude depends on the number of classes). We found \\\\(\\\\lambda_{\\\\text{max}} = 0.001\\\\) to be a performant maximum trade-off factor for ImageNet.\\n\\nA.2.10 PostNet\\n\\nThe PostNet method of Charpentier et al. \\\\[4\\\\] builds upon the EDL method. PostNet also keeps the prior parameters fixed to 1, but instead of directly predicting pseudo-counts \\\\(\\\\alpha(x)\\\\), they are calculated as\\n\\n\\\\[\\n\\\\alpha(x) c = n_c \\\\cdot p_{\\\\phi}(z(x) | c)\\n\\\\]\\n\\nwhere \\\\(z(x)\\\\) is the latent embedding of input \\\\(x \\\\in X\\\\), \\\\(n_c\\\\) is the number of training samples of class \\\\(c \\\\in \\\\{1, \\\\ldots, C\\\\}\\\\) and \\\\(p_{\\\\phi}(z(x) | c)\\\\) is a class-conditional normalizing flow with parameters \\\\(\\\\phi\\\\). Intuitively, the class-conditional normalizing flows give soft class membership indicators to each input, and their indicators are weighted by the class size.\\n\\nThe PostNet method is trained with a regularized Uncertain Cross-Entropy (UCE) loss:\\n\\n\\\\[\\n\\\\text{Loss}_{\\\\text{PostNet}} = \\\\sum_{n=1}^{N} \\\\left( \\\\mathbb{E}_{\\\\text{Dir}(\\\\pi; \\\\bar{\\\\beta}(x_i))} h(CE(\\\\pi, \\\\text{one}_\\\\text{hot} y_i)) - \\\\lambda H_{\\\\text{Dir}(\\\\bar{\\\\beta}(x_i))} \\\\right). (21)\\n\\\\]\\n\\nWhile the first term drives \\\\(\\\\text{Dir}(\\\\bar{\\\\beta}(x_i))\\\\) toward a Dirac distribution concentrated at the one-hot label, the second term maximizes the entropy of the Dirichlet posterior. The effect of each is determined by the trade-off factor \\\\(\\\\lambda\\\\).\\n\\nB Definition and Further Results of the Bregman Decomposition\\n\\nBregman decompositions \\\\[42, 19, 28, 17\\\\] use not only the second-order predictive distribution \\\\(q(\\\\pi | x)\\\\) but also take the ground-truth (GT) generative process \\\\(p_{\\\\text{data}}(x, y)\\\\) into account. Bregman decompositions break up the expected loss of a model over all possible training datasets. This variability is approximated by \\\\(q(\\\\pi | x)\\\\):\\n\\n\\\\[\\n\\\\mathbb{E}_{q(\\\\pi | x), p_{\\\\text{data}}}(y | x) \\\\left[ D_F(y \\\\parallel \\\\pi) \\\\right] = \\\\mathbb{E}_{p_{\\\\text{data}}}(y | x) \\\\left[ D_F(y \\\\parallel \\\\pi^*(x)) \\\\right] + \\\\mathbb{E}_{q(\\\\pi | x)} \\\\left[ D_F(\\\\tilde{\\\\pi}(x) \\\\parallel \\\\pi) \\\\right] + D_F(\\\\pi^*(x) \\\\parallel \\\\tilde{\\\\pi}(x)) \\\\]\\n\\\\]\\n\\nThe loss \\\\(D_F\\\\) is a Bregman divergence induced by the strictly convex function \\\\(F\\\\), like the Euclidean distance or the KL divergence. Since \\\\(\\\\pi^*(x) = \\\\mathbb{E}_{p_{\\\\text{data}}}(y | x) \\\\left[ \\\\text{one}_\\\\text{hot} y \\\\right]\\\\) is the Bayes predictor, the aleatoric uncertainty is the Bayes risk of the generative process, which is irreducible and independent of the \\\\(q(\\\\pi | x)\\\\) distribution. As this process is unknown in practice, we estimate the aleatoric term by \\\\(\\\\mathbb{E}_{q(\\\\pi | x)} \\\\left[ H(\\\\pi) \\\\right]\\\\) to create estimators \u2013 but not for evaluation. Similarly to the IT decomposition, the epistemic uncertainty is the average distance of predictions \\\\(\\\\pi \\\\sim q(\\\\pi | x)\\\\) from their centroid, the 22 bias.\"}"}
{"id": "x8RgF2xQTj", "page_num": 23, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"dual BMA\\n\\n\\\\[ \\\\pi(x) = \\\\arg\\\\min_{z \\\\in \\\\Delta} C_{-1} \\\\mathbb{E}_q(\\\\pi|x) \\\\left[ D(z \\\\parallel \\\\pi) \\\\right]. \\\\]\\n\\nThis average is calculated in a dual space, but in certain cases, it is equal to the BMA [19]. The Bregman decomposition has an additional term, the bias \u2013 an uncertainty source that subsumes the uncertainty about the function class [54].\\n\\n**B.1 Special Form of the Bregman Decomposition for the Kullback-Leibler Divergence**\\n\\nWhen choosing\\n\\n\\\\[ F(\\\\cdot) = -H(\\\\cdot) \\\\]\\n\\nwe obtain\\n\\n\\\\[ D_F(\\\\cdot \\\\parallel \\\\cdot) = D_{KL}(\\\\cdot \\\\parallel \\\\cdot). \\\\]\\n\\nConsider the predictive uncertainty term. A one-hot vector's entropy is zero; therefore, the predictive uncertainty becomes\\n\\n\\\\[ \\\\mathbb{E}_q(\\\\pi|x) p_{data}(y|x) \\\\]  \\n\\nThe aleatoric term takes a convenient form:\\n\\n\\\\[ \\\\mathbb{E}_{p_{data}}(y|x) \\\\left[ D_{KL}(\\\\text{one-hot}(y) \\\\parallel \\\\pi^* (x)) \\\\right] = \\\\mathbb{E}_{p_{data}}(y|x) \\\\]\\n\\n\\\\[ \\\\sum_{c=1}^{C} \\\\text{one-hot}(y)_c \\\\log y_c \\\\pi^*_c(x) \\\\# = - \\\\sum_{c=1}^{C} \\\\pi^*_c(x) \\\\log \\\\pi^*_c(x) = H(\\\\pi^*(x)). \\\\]\\n\\n(23)\\n\\nOn datasets with multiple labels per input, this quantity is precisely the entropy of the (normalized) label distribution corresponding to the labeler votes.\\n\\nTo calculate \\\\( \\\\tilde{\\\\pi}(x) \\\\), we can proceed as follows.\\n\\n\\\\[ \\\\tilde{\\\\pi}(x) = \\\\arg\\\\min_{z \\\\in \\\\Delta} C_{-1} \\\\sum_{c=1}^{C} z_c \\\\log z_c - \\\\sum_{c=1}^{C} z_c \\\\log \\\\exp \\\\mathbb{E}_q(\\\\pi|x) \\\\left[ \\\\log \\\\pi_c \\\\right] \\\\]\\n\\n(24)\\n\\n\\\\[ = \\\\arg\\\\min_{z \\\\in \\\\Delta} C_{-1} \\\\sum_{c=1}^{C} z_c \\\\log z_c - \\\\sum_{c=1}^{C} z_c \\\\log \\\\exp \\\\mathbb{E}_q(\\\\pi|x) \\\\left[ \\\\log \\\\pi'_{c} \\\\right] + \\\\sum_{c=1}^{C} z_c \\\\log p_{C_{c}'=1} \\\\exp \\\\mathbb{E}_q(\\\\pi|x) \\\\left[ \\\\log \\\\pi'_{c} \\\\right] \\\\]\\n\\n(25)\\n\\n\\\\[ = \\\\arg\\\\min_{z \\\\in \\\\Delta} C_{-1} \\\\sum_{c=1}^{C} z_c \\\\log z_c - \\\\sum_{c=1}^{C} z_c \\\\log \\\\exp \\\\mathbb{E}_q(\\\\pi|x) \\\\left[ \\\\log \\\\pi'_{c} \\\\right] + \\\\sum_{c=1}^{C} z_c \\\\log p_{C_{c'}=1} \\\\exp \\\\mathbb{E}_q(\\\\pi|x) \\\\left[ \\\\log \\\\pi'_{c} \\\\right] \\\\]\\n\\n(26)\\n\\n\\\\[ = \\\\arg\\\\min_{z \\\\in \\\\Delta} C_{-1} \\\\sum_{c=1}^{C} z_c \\\\log z_c - \\\\sum_{c=1}^{C} z_c \\\\log \\\\exp \\\\mathbb{E}_q(\\\\pi|x) \\\\left[ \\\\log \\\\pi'_{c} \\\\right] + \\\\sum_{C_{c'}=1}^{C} z_c \\\\log p_{C_{c'}=1} \\\\exp \\\\mathbb{E}_q(\\\\pi|x) \\\\left[ \\\\log \\\\pi'_{c} \\\\right] \\\\]\\n\\n(27)\\n\\n\\\\[ = \\\\arg\\\\min_{z \\\\in \\\\Delta} D_{KL}(z \\\\parallel p) \\\\]\\n\\n(28)\\n\\n\\\\[ = p. \\\\]\\n\\n(29)\\n\\nTherefore,\\n\\n\\\\[ \\\\tilde{\\\\pi}(x) = \\\\text{softmax} \\\\mathbb{E}_q(\\\\pi|x) \\\\left[ \\\\log \\\\pi \\\\right], \\\\]\\n\\nwhere \\\\( \\\\log \\\\) is applied elementwise.\\n\\n**B.2 DEUP is a Special Case of Bregman**\\n\\nAs mentioned in Appendix B, a closely related formula to Bregman is the risk decomposition of Lahlou et al. [28] where the predictive uncertainty is directly equated to the risk of a deterministic predictor \\\\( \\\\pi: X \\\\to \\\\Delta_{-1} \\\\), not an expectation of risks over datasets or hypothesis distributions:\\n\\n\\\\[ R(\\\\pi, x) \\\\mid \\\\{ \\\\text{predictive} \\\\} = R(\\\\pi^*, x) \\\\mid \\\\{ \\\\text{aleatoric} \\\\} + R(\\\\pi, x) - R(\\\\pi^*, x) \\\\mid \\\\{ \\\\text{bias} \\\\} \\\\]\\n\\n(30)\\n\\nwhere\\n\\n\\\\[ R(\\\\pi, x) = \\\\mathbb{E}_{p_{data}}(y|x) \\\\left[ L(\\\\pi(x), y) \\\\right] \\\\]\\n\\nis the pointwise risk of \\\\( \\\\pi \\\\) at \\\\( x \\\\in X \\\\). When choosing \\\\( L \\\\) to be the squared Euclidean distance or the Kullback-Leibler divergence, Equation 30 becomes a special case of Equation 22 for a Dirac distribution \\\\( q(\\\\pi'|x) = \\\\delta(\\\\pi' - \\\\pi(x)) \\\\) at the deterministic prediction \\\\( \\\\pi(x) \\\\). This formulation is desired when one wants the predictive uncertainty to be aligned with the risk of one particular predictor and not the expected risk over a hypothesis distribution.\\n\\n**B.3 Correlation of Components and Limitations**\\n\\nLet us carry out the same experiments for Bregman as we did for the IT decomposition in Section 3.1 of the main paper. As the Bregman and DEUP decompositions (Equations 22 and 30) consider the...\"}"}
{"id": "x8RgF2xQTj", "page_num": 24, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure B.1: Left. On ImageNet-ReaL, the rank correlation of the Bregman aleatoric and bias terms is between $0.45$ and $0.52$ for all distributional methods we benchmark. Note that the maximal rank correlation is less than one due to ties in the GT aleatoric uncertainties. Right. The Bregman decomposition shows similar rank correlation results to the IT decomposition between the estimated aleatoric uncertainty and the epistemic component on the ImageNet validation dataset (Fig. 2a).\\n\\nFigure B.2: Left. The rank correlation of the Bregman aleatoric and bias GT terms is above $0.59$ for all methods we benchmark on CIFAR-10. Note that the maximal rank correlation is less than one due to ties in the GT aleatoric uncertainties. Right. On CIFAR-10, the Bregman decomposition shows similarly strong rank correlation results between the estimated aleatoric uncertainty and the epistemic component as the IT decomposition does in Fig. 2b.\\n\\nB.3.1 ImageNet\\nOn the right of Fig. B.1, we can see that the correlation between the aleatoric and epistemic components of the Bregman decomposition is similarly high as for the IT decomposition in the main paper. The Bregman decomposition also has a bias term. On the left of Fig. B.1, we show that there is a considerable rank correlation between the Bregman ground-truth aleatoric and bias components. However, this is not severe enough to prevent the theoretical possibility of disentangling them via estimators.\\n\\nB.3.2 CIFAR-10\\nWe see in Fig. B.2 (right) that the results using Bregman are virtually the same as those of the IT decomposition: most distributional methods exhibit very high rank correlations. As for the aleatoric and bias components, Fig. B.2 (left) shows that they have a high correlation on CIFAR-10 even when we use the GT values. Hence, there seems to be a fundamental limitation in disentangling them, no matter which estimators are used to approximate the GT values.\\n\\nB.4 Disentangling Epistemic and Aleatoric Uncertainty via Decomposition Formulas Is Feasible\\nIn this section, we present the rank correlation between the ground-truth aleatoric uncertainty and the models' epistemic uncertainties. This serves to capture an inevitable level of correlation between these uncertainty sources, as measured (and defined) by the Bregman decomposition.\"}"}
{"id": "x8RgF2xQTj", "page_num": 25, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure B.3: On ImageNet, we find a positive rank correlation between the (ground-truth) aleatoric and epistemic components of the Bregman decomposition, implying that some level of correlation is inevitable when using this decomposition formula. However, this correlation is considerably lower than that between the aleatoric and epistemic estimates in Fig. 2a. This holds even if we increase the epistemic uncertainty in the dataset via ImageNet-C corruptions. We only show severity levels one and two here, as the GT aleatoric uncertainty values from the soft ImageNet-ReaL labels are only valid for these corruption levels \u2013 higher corruption would possibly change the soft label votes.\\n\\nB.4.1 ImageNet\\n\\nImageNet results on the correlation of the ground-truth aleatoric uncertainty and epistemic uncertainties of methods are shown in Fig. B.3. There is a positive rank correlation of up to 0.45 between these quantities, implying that some level of correlation is inevitable (but not such extreme values displayed in Fig. 2a). The shallow ensemble, which already had the lowest actual correlation, also has the lowest feasible decorrelation. Since in the feasible decorrelation experiment, we replace the estimated AU with the GT AU and keep the epistemic component, this indicates that the epistemic estimate of the shallow ensemble is already quite disentangled. It is also high-performing, as seen in Fig. 3a. One way to improve this further was discussed in Section 3.3 of the main paper. We find that the Mahalanobis epistemic estimates and the CE baseline aleatoric estimates lead to reasonably well-performing yet decorrelated uncertainties. We hypothesize that the main reason is the explicit measurement of aleatoric and epistemic uncertainty at different parts of the computation graph. This, e.g., is lacking for the BMA decomposition: the aleatoric and epistemic estimates are generated from the same set of logits, which limits diverse behaviors across estimators.\\n\\nB.4.2 CIFAR-10\\n\\nCIFAR-10 results on the correlation of the ground-truth aleatoric uncertainty and epistemic uncertainties of methods are shown in Fig. B.4a. Similar to ImageNet, there is a positive rank correlation between these quantities, implying a (low) inevitable level of correlation between the uncertainty sources. However, even for the most correlated second-order distribution of SW AG, with 0.39 this...\"}"}
{"id": "x8RgF2xQTj", "page_num": 26, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure B.4: On CIFAR-10, we find a positive rank correlation between the (ground-truth) aleatoric and epistemic components of the Bregman decomposition, implying that some level of correlation is inevitable when using this decomposition formula. However, this correlation is considerably lower than that between the aleatoric and epistemic estimates in Fig. 2b. This holds even if we increase the epistemic uncertainty in the dataset via CIFAR-10C corruptions. We only show severity levels one and two here, as the GT aleatoric uncertainty values from the soft CIFAR-10H labels are only valid for these corruption levels \u2013 higher corruption would possibly change the human annotators\u2019 CIFAR-10H soft label votes.\\n\\nB.5 Alignment of Methods with the Bregman Bias\\n\\nB.5.1 ImageNet\\n\\nThe rank correlation of benchmarked methods with the bias component of the Bregman decomposition is shown in Fig. B.5 for ID and OOD with severity two. Most methods exhibit a high rank correlation ($\\\\geq 0.8$). This suggests that uncertainty estimators, to some extent, capture the model bias in terms of the Bregman formulation. All methods become less correlated with bias with increasing severity.\\n\\nB.5.2 CIFAR-10\\n\\nThe rank correlation of benchmarked methods with the bias component of the Bregman decomposition is shown in Fig. B.6. EDL is strongly correlated with the Bregman bias component, indicating that its uncertainty captures a notion of model bias. All methods become more highly correlated with bias with increasing OOD perturbation severity.\\n\\nC Further Results of the Information-Theoretical Decomposition\\n\\nC.1 Special Form on the Information-Theoretical Decomposition for Discrete Posteriors\\n\\nBelow, we show that the information-theoretical (IT) decomposition [11] separates the entropy of the BMA into an expected entropy term and a Jensen-Shannon divergence term when considering discrete uniform distributions $q(\\\\pi|x) = 1/M P_{m=1}^M \\\\delta(\\\\pi - \\\\pi(m))$ with $\\\\pi(m) \\\\sim q(\\\\pi|x)$. Note that our formulation uses sampling $M$ probability vectors from $q(\\\\pi|x)$ for each input $x \\\\in X$, but the results also hold in the case of having a set of $M$ predictors $\\\\{\\\\pi(m)(\\\\cdot)\\\\}_{m=1}^M$.26\"}"}
{"id": "x8RgF2xQTj", "page_num": 27, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"(a) ID rank correlation of methods with the Bregman decomposition's bias component.\\n\\n(b) Mixed ID and OOD rank correlation of methods with the Bregman bias using severity-one perturbations.\\n\\n(c) OOD rank correlation of methods with the Bregman bias using severity-one perturbations.\\n\\n(d) Mixed ID and OOD rank correlation of methods with the Bregman bias using severity-two perturbations.\\n\\n(e) OOD rank correlation of methods with the Bregman bias using severity-two perturbations.\\n\\nFigure B.5: Rank correlation with the Bregman bias component on the ImageNet validation dataset. Most methods exhibit a high rank correlation (\u22650.8). When going more OOD, all methods become less correlated with bias. Only severity levels one and two are shown, as the GT bias values from the soft ImageNet-ReaL labels are only valid for these corruption levels \u2013 higher corruption would possibly lead to a shift in labeler votes.\\n\\nThe IT decomposition treats the entropy of the predictive distribution \\\\( p(y|x) = \\\\int p(y|\\\\pi,x) \\\\, dq(\\\\pi|x) \\\\) as the predictive uncertainty metric and decomposes it into:\\n\\n\\\\[\\nH_{p}(y|x) = \\\\mathbb{E}_{q(\\\\pi|x)} \\\\left( H_{p}(y|\\\\pi,x) \\\\right) + I_{p}(y,\\\\pi|x)\\n\\\\]\\n\\nwhere \\\\( H \\\\) is the entropy and \\\\( I \\\\) is the mutual information. Under a discrete uniform approximate distribution \\\\( q(\\\\pi|x) \\\\), the predictive uncertainty is still the entropy of the BMA, and the aleatoric uncertainty also stays the expected entropy of the probability vectors of non-zero measure. We only have to show that the mutual information takes the convenient form of the Jensen-Shannon divergence under such an approximate posterior. Using \\\\( p(y,\\\\pi|x) = p(y|\\\\pi,x) \\\\)\"}"}
{"id": "x8RgF2xQTj", "page_num": 28, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure B.6: Rank correlations of the methods with the GT Bregman bias on CIFAR-10. EDL has a strong correlation, indicating that it estimates something close to the bias. When going more OOD, all methods become more highly correlated with the bias. Only severity levels one and two are shown, as the GT bias values from the soft CIFAR-10H labels are only valid for these corruption levels \u2013 higher corruption would possibly lead to a shift in labeler votes.\\n\\n\\\\[\\np(y | \\\\pi, x) q(\\\\pi | x), \\\\quad \\\\text{we have} \\\\\\\\\\nI_{p}(y, \\\\pi | x) (y; \\\\pi) = C_{X} \\\\sum_{y=1}^{Z} \\\\log p(y, \\\\pi | x) p(x) d p(y, \\\\pi | x) (32) \\\\\\\\\\n= 1/M \\\\sum_{m=1}^{M} C_{X} \\\\sum_{y=1}^{Z} p(y | \\\\pi(m)) \\\\log p(y | x) (33) \\\\\\\\\\n= -1/M \\\\sum_{m=1}^{M} H(\\\\pi(m)) - C_{X} \\\\sum_{y=1}^{Z} 1/M \\\\sum_{m=1}^{M} p(y | \\\\pi(m)) \\\\log p(y | x) (34) \\\\\\\\\\n= H(1/M \\\\sum_{m=1}^{M} \\\\pi(m))! - 1/M \\\\sum_{m=1}^{M} H(\\\\pi(m)) (35) \\n\\\\]\"}"}
{"id": "x8RgF2xQTj", "page_num": 29, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure C.1: Rank correlation of the aleatoric and epistemic components of the IT decomposition when increasing the epistemic uncertainty by going OOD on ImageNet-ReaL. Increasing the epistemic uncertainty of the datasets only slightly decreases the internal correlation of the estimates.\\n\\nC.2 Entanglement on Datasets with Increased Epistemic Uncertainty\\n\\nThe main paper showed in Section 3.1 that the IT decomposition's aleatoric and epistemic components are highly correlated across all distributional methods. In this section, we introduce epistemic uncertainty by going OOD via ImageNet-C distribution to find if this decorrelates the components.\\n\\nC.2.1 ImageNet\\n\\nFig. C.1 shows the results at severity levels one and two. The estimates generally become slightly less correlated as we go more OOD, but the correlations do not lower considerably.\\n\\nC.2.2 CIFAR-10\\n\\nResults for severity levels one and two are shown in Fig. C.2. The increased epistemic uncertainty does not help decorrelate the components. Quite the opposite; the previously most uncorrelated estimates on the Shallow Ensemble become more highly correlated.\\n\\nC.3 Performance of Decorrelated Methods using the Information-Theoretical Components\\n\\nIn Sections 3.2 and 3.3, we use the best-performing aggregator for predicting aleatoric and epistemic uncertainty to ensure each second-order method has the best possible chances. In this section, we solely use the aggregators dictated by the IT decomposition.\\n\\nC.3.1 ImageNet\\n\\nIn Fig. C.3, we replace the aggregators of the previously best-performing distributional method, Shallow Ensemble, with the aggregators dictated by the IT decomposition. This reduces its performance to the CE baseline level. This shows that the choice of the aggregator counts and that it is not always the intuitively expected aggregator that performs best.\\n\\nC.3.2 CIFAR-10\\n\\nAs on ImageNet, replacing the aggregators of Shallow Ensemble with the IT decomposed ones on CIFAR-10 also lowers its performance on both the aleatoric and epistemic task to or below the CE baseline level in Fig. C.4.\"}"}
{"id": "x8RgF2xQTj", "page_num": 30, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure C.2: Rank correlation of the aleatoric and epistemic components of the IT decomposition when increasing the epistemic uncertainty by going OOD on CIFAR-10H. The increased epistemic uncertainty does not decorrelate the components. Quite the opposite, it leads to even more highly correlated components.\\n\\nFigure C.3: On ImageNet, replacing the aggregators of the least-correlated distributional method, Shallow Ensemble, with the ones that the IT decomposition proposes drastically lowers its performance. All other methods are equipped with their best-performing estimator for the respective tasks, showing that specialized estimators work better.\\n\\nC.4 Pearson Correlation Results on ImageNet\\n\\nFig. C.5 shows Pearson correlation results between the IT decomposition's AU and EU term. In addition to the estimates having a strong monotonic relationship, they are also often linearly correlated.\\n\\nC.5 Cross-Evaluation of the IT Decomposition's Components on ImageNet\\n\\nIn Appendix C.5, we cross-evaluate the epistemic and aleatoric terms of the information-theoretical decomposition on the opposite task, which leads to two conclusions. (i) The epistemic estimates perform notably well on aleatoric uncertainty evaluation, which contradicts the common claim that epistemic estimates are not useful ID. (ii) The aleatoric estimates are almost always better than the epistemic ones on OOD detection, going against the wide belief that aleatoric estimates are not to be trusted OOD. This is another consequence of the entanglement that we uncover in our paper.\"}"}
{"id": "x8RgF2xQTj", "page_num": 31, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"(a) AUROC of OOD detection performance of methods using perturbations of severity level two.\\n\\n(b) Rank correlation between methods and the Bregman aleatoric component.\\n\\nFigure C.4: Shallow ensemble underperforms the cross-entropy baseline on CIFAR-10 when using the estimators of the IT decomposition for the OOD detection and human uncertainty alignment tasks. All other methods are equipped with their best-performing estimator for the respective tasks, showing that the IT decomposition is not practically beneficial.\\n\\nFigure C.5: Pearson correlation results of the IT decomposition's aleatoric and epistemic terms on ImageNet. The relationship is often not only monotonic but also linear, with PostNets being a notable exception.\\n\\nD Definitions and Results of the Benchmarked Aggregators\\n\\nIn practical applications, distributional methods output a discrete set of probability vectors \\\\( \\\\{ \\\\pi_m \\\\}_{m=1}^M \\\\) per input \\\\( x \\\\in X \\\\). This set can be aggregated in several ways to construct an uncertainty estimate \\\\( u(x) \\\\). Commonly used aggregators are the Bayesian Model Average (BMA):\\n\\n\\\\[\\n\\\\bar{\\\\pi}(x) = \\\\frac{1}{M} \\\\sum_{m=1}^M \\\\pi_m, \\\\tag{36}\\n\\\\]\\n\\nand the Bregman decomposition's central prediction term (Appendix B):\\n\\n\\\\[\\n\\\\tilde{\\\\pi}(x) = \\\\operatorname{softmax} \\\\frac{1}{M} \\\\sum_{m=1}^M \\\\log \\\\pi_m, \\\\tag{37}\\n\\\\]\\n\\nfollowed by taking their maximum probability, entropy, mutual information, or expected divergence [37, 11, 57, 19, 17]. Similarly, one can take the expected maximum probability and expected entropy over the set of probability vectors [37]. These possible choices are detailed below with pointers to their use in the literature.\\n\\nD.1 Entropy-Based Aggregators\\n\\nAccording to the Source Coding Theorem, the entropy of the code is a fundamental and tight lower bound on the expected code word length for prefix-free symbol codes [58]. The entropy is an expectation over the length of per-symbol codewords. For general distributions \\\\( p(x) \\\\), it intuitively measures the spread or the \\\"amount of surprise\\\" in \\\\( p(x) \\\\): a higher entropy indicates more stochasticity in the distribution. We consider three entropy-based aggregators of \\\\( \\\\{ \\\\pi_m \\\\}_{m=1}^M \\\\) per input:\\n\\n\\\\[\\n\\\\bar{\\\\pi}(x) = \\\\frac{1}{M} \\\\sum_{m=1}^M \\\\pi_m, \\\\tag{36}\\n\\\\]\\n\\nNote that our formulation uses sampling probability vectors from \\\\( q(\\\\pi|x) \\\\) for each input \\\\( x \\\\in X \\\\), but the results also hold in the case of having a set of \\\\( M \\\\) predictors \\\\( \\\\{ \\\\pi_m(\\\\cdot) \\\\}_{m=1}^M \\\\).\"}"}
{"id": "x8RgF2xQTj", "page_num": 32, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure C.6: Cross-evaluation of the IT decomposition\u2019s terms on ImageNet.\\n\\n\\\\[ u(x) = H(\\\\bar{\\\\pi}(x)) \\\\] (38)\\n\\n\\\\[ u(x) = H(\\\\tilde{\\\\pi}(x)) \\\\] (39)\\n\\n\\\\[ u(x) = \\\\frac{1}{M} \\\\sum_{m=1}^{M} H(\\\\pi(m)) \\\\] (40)\\n\\nThe entropy appears both in the IT and Bregman decompositions (Eq. (1), Eq. (22)). Eq. (38) is often cited to capture predictive (or total) uncertainty, whereas Eq. (40) is known to capture aleatoric uncertainty [37, 11, 57]. As \\\\( \\\\tilde{\\\\pi}(x) \\\\) is a central predictor similar to \\\\( \\\\bar{\\\\pi}(x) \\\\), its entropy aligns well with a notion of predictive uncertainty.\\n\\nD.2 Maximum-Probability-Based Aggregators\\n\\nMaximum-probability-based aggregators are similar to entropy-based ones: a small maximum probability value in the prediction vector necessarily means that all entries are small, leading to a high spread and entropy. As uncertainty estimates are higher when the model is more uncertain by convention, one usually takes one minus the maximum probability as a notion of uncertainty. We consider three maximum-probability-based aggregators of \\\\( \\\\{\\\\pi(m)\\\\}_{m=1}^{M} \\\\) per input \\\\( x \\\\in X \\\\):\\n\\n\\\\[ u(x) = 1 - \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} \\\\bar{\\\\pi}_c(x) \\\\] (41)\\n\\n\\\\[ u(x) = 1 - \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} \\\\tilde{\\\\pi}_c(x) \\\\] (42)\\n\\n\\\\[ u(x) = 1 - \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} \\\\pi_c(m) \\\\] (43)\\n\\nThe maximum-probability-based aggregators are restricted to the \\\\([0, 1]\\\\) range. This is particularly important for (strictly) proper scoring rules for the correctness of prediction [36] and the notion of calibration, including the ECE and the reliability diagram [39]. Similarly to the entropy-based aggregators, Eq. (41) and Eq. (42) align with a notion of predictive uncertainty, whereas Eq. (43) is more aligned with a notion of aleatoric uncertainty.\\n\\nD.3 Disagreement-Based Aggregators\\n\\nOne can directly use the epistemic components of the Bregman and IT decompositions as they do not require a ground truth. In particular, one can use\\n\\n\\\\[ u(x) = H(\\\\bar{\\\\pi}(x)) - \\\\frac{1}{M} \\\\sum_{m=1}^{M} H(\\\\pi(m)) \\\\] (44)\"}"}
{"id": "x8RgF2xQTj", "page_num": 1, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Benchmarking Uncertainty Disentanglement: Specialized Uncertainties for Specialized Tasks\\n\\nB\u00e1lint Mucs\u00e1nyi\\nUniversity of T\u00fcbingen\\nb.h.mucsanyi@gmail.com\\nMichael Kirchhof\\nUniversity of T\u00fcbingen\\nSeong Joon Oh\\nUniversity of T\u00fcbingen\\nT\u00fcbingen AI Center\\n\\nAbstract\\nUncertainty quantification, once a singular task, has evolved into a spectrum of tasks, including abstained prediction, out-of-distribution detection, and aleatoric uncertainty quantification. The latest goal is disentanglement: the construction of multiple estimators that are each tailored to one and only one source of uncertainty. This paper presents the first benchmark of uncertainty disentanglement. We reimplement and evaluate a comprehensive range of uncertainty estimators, from Bayesian over evidential to deterministic ones, across a diverse range of uncertainty tasks on ImageNet. We find that, despite recent theoretical endeavors, no existing approach provides pairs of disentangled uncertainty estimators in practice. We further find that specialized uncertainty tasks are harder than predictive uncertainty tasks, where we observe saturating performance. Our results provide both practical advice for which uncertainty estimators to use for which specific task, and reveal opportunities for future research toward task-centric and disentangled uncertainties. All our reimplementations and Weights & Biases logs are available at https://github.com/bmucsanyi/untangle.\\n\\n1 Introduction\\nWhen uncertainty quantification methods were first pioneered for deep learning [12, 29], their task was simple: giving one total uncertainty estimate. The recent demand for trustworthy machine learning [36] created new requirements, mostly centering around disentangling the above predictive uncertainty into aleatoric (data-inherent and irreducible) and epistemic (model-centric and reducible) components [11, 52, 47]. Such disentangled estimators are needed for multiple modern applications: Out-of-distribution detection needs to filter unseen samples with high epistemic uncertainty without being confounded with seen samples with high aleatoric uncertainty [37], and active learning uses individual aleatoric and epistemic estimates to select the most efficient samples to learn from [28, 35].\\n\\nHowever, recent advances towards such disentangled uncertainties are primarily theoretical and supported by only small-scale experiments [47, 53, 37]. Conversely, larger-scale benchmarks evaluate methods w.r.t. only one uncertainty component and do not test for undesirable side effects on other components [13, 40]. There is currently no study that evaluates which component(s) each method captures in practice and which it does not \u2013 which is often contrary to their original intuition.\\n\\nOur work provides a comprehensive benchmark of the vast recent landscape of uncertainty methods and tasks. We reimplement nineteen uncertainty quantification methods in up to fourteen ways and evaluate each on thirteen practically defined tasks on ImageNet-1k [10] and CIFAR-10 [27]. This includes recent information-theoretical and Bregman decomposition formulas that intend to disentangle total uncertainties into aleatoric and epistemic components [57, 42, 11]. We reveal that none of the existing approaches achieve disentanglement in practice. Most proposed pairs of estimators are highly internally correlated (rank corr. \u2265 0.78) and fail to unmix aleatoric and epistemic uncertainty (Section 3.1). We also find that specialized tasks (Sections 3.2 and 3.3) are harder to solve.\\n\\n38th Conference on Neural Information Processing Systems (NeurIPS 2024) Track on Datasets and Benchmarks.\"}"}
{"id": "x8RgF2xQTj", "page_num": 2, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Second-order Class Distribution\\n(e.g., Ensemble, MC Dropout, Laplace)\\nDecomposition Formula\\nEpistemic Uncertainty\\n(e.g., Disagreement)\\nAleatoric Uncertainty\\n(e.g., Average Entropy)\\n\\nFigure 1: Decomposition formulas like in Eq. (1) decompose second-order distributions into individual estimates for epistemic and aleatoric uncertainties. However, we find that the estimates are internally highly correlated. The density plot on the right shows this for the epistemic and aleatoric uncertainty estimates obtained from decomposing deep ensemble uncertainties on ImageNet-1k. This means that they capture the same notion of uncertainty in practice as opposed to two disentangled ones.\\n\\nBased on these insights, we uncover a promising path for future disentangled uncertainty estimates: combining individual estimators that strongly reflect one type of uncertainty while being (almost) unrelated to the other.\\n\\nThese findings emphasize the importance of clearly specifying the task one wants to solve with an uncertainty estimator and tailoring the estimator to it. We anticipate that our quantitative insights will drive the field toward developing more disentangled and specialized uncertainty estimators.\\n\\n2 Benchmarked Methods\\n\\nThis section provides an overview of the benchmarked uncertainty estimators and disentanglement formulas. We reimplement all nineteen methods and explain implementation details in Appendix A.\\n\\n2.1 Uncertainty Quantification Methods\\n\\nWe consider a classification setting with a discrete label space of $C$ classes. On top of the eight supervised uncertainty quantification methods from Kirchhof et al. [25], we reimplement another eleven methods to encourage diversity and general applicability of our findings. Below, we categorize the benchmarked approaches into distributional and deterministic methods.\\n\\n2.1.1 Distributional methods\\n\\nDistributional methods model a second-order predictive distribution $q(\\\\pi | x)$ over class probability vectors $\\\\pi \\\\in \\\\Delta_{C-1}$ for an input $x \\\\in X$. For example, $q(\\\\pi | x)$ can correspond to a Bayesian posterior on the simplex, $p(\\\\pi | x, D)$, induced by a weight-space posterior $p(\\\\theta | D) \\\\propto p(D | \\\\theta)p(\\\\theta)$ when training on dataset $D$.\\n\\nSpectral-Normalized Gaussian Processes (SNGP) [32] represent the $q(\\\\pi | x)$ distributions by approximating a Gaussian process (GP) over the classifier output, aided by spectral normalization. We also benchmark the last-layer GP without spectral normalization. The last-layer Laplace Approximation [8] and Stochastic Weight Averaging \u2013 Gaussian (SWAG) [34] both model a Gaussian parameter distribution in a post-hoc fashion that induces the $q(\\\\pi | x)$ distributions. The Laplace approximation does so by fitting the parameter-space Gaussian w.r.t. the local curvature around the MAP estimate, whereas SWAG samples model weights via checkpointing and fits an empirical distribution. Similarly, Heteroscedastic Classifiers (HET) [5] and Latent Heteroscedastic Classifiers (HET-XL) [6] predict a heteroscedastic Gaussian distribution over the logits and pre-logit embeddings, respectively. Evidential deep learning methods for classification [45, 4] directly learn a...\"}"}
{"id": "x8RgF2xQTj", "page_num": 3, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Dirichlet distribution over the output probability vectors. Following Ulmer et al. [50], we refer to the method of Sensoy et al. [45] as **Evidential Deep Learning (EDL)** and that of Charpentier et al. [4] as the **Posterior Network (PostNet)**.\\n\\n**MC Dropout** [12, 48] and **Deep Ensemble** [29] do not construct second-order predictive distributions $q(\\\\pi|\\\\mathbf{x})$ explicitly. Instead, they sample from them by $M$ repeated forward passes with randomly switched off activations or by training $M$ models, respectively. The **Heteroscedastic Classification Neural Network (HetClassNN)** [23] uses the uncertainties from MC Dropout for epistemic uncertainty and models an input-conditional heteroscedastic logit variance for aleatoric uncertainty. The **Shallow Ensemble** [31] is a lightweight approximation of the Deep Ensemble with a shared backbone and $M$ output heads.\\n\\nPractical tasks like threshold-based rejection often need a scalar uncertainty value $u(\\\\mathbf{x}) \\\\in \\\\mathbb{R}$ instead of a second-order predictive distribution $q(\\\\pi|\\\\mathbf{x})$. To this end, uncertainty aggregators compile the above distributions into scalar uncertainty estimates. Several methods exist for this aggregation, such as calculating the Bayesian Model Average (BMA) $\\\\bar{\\\\pi}(\\\\mathbf{x}) := \\\\mathbb{E}_{q(\\\\pi|\\\\mathbf{x})}[\\\\pi]$ and using its entropy as the uncertainty estimate $u(\\\\mathbf{x})$ or quantifying the variance of $q(\\\\pi|\\\\mathbf{x})$, as often seen in ensembles. While many distributional methods are proposed with a specific aggregator, we show in Appendix D.5 that they do not always behave as expected and limit performance. To remove this confounder, we consider fourteen aggregators (Appendix D) for distributional methods and use the best-performing one.\\n\\n**2.1.2 Deterministic Methods**\\n\\nDeterministic methods [43] directly output scalar uncertainty estimates $u(\\\\mathbf{x}) \\\\in \\\\mathbb{R}$ instead of modeling a second-order predictive distribution $q(\\\\pi|\\\\mathbf{x})$ over class probability vectors.\\n\\n**Loss Prediction** [59, 28, 25] employs an additional MLP head for $u(\\\\mathbf{x})$ that estimates the loss of the network's prediction $\\\\pi(\\\\mathbf{x}) \\\\in \\\\Delta_{C-1}$, reflecting a notion of (in-)correctness.\\n\\n**Correctness Prediction** is a special variant for classification where $u(\\\\mathbf{x})$ predicts how likely the predicted class $\\\\hat{y} := \\\\arg\\\\max_{c \\\\in \\\\{1,\\\\ldots,C\\\\}} \\\\pi_c(\\\\mathbf{x})$ is to be the correct class $y$, i.e., $p(\\\\hat{y} = y|\\\\mathbf{x})$.\\n\\n**Deterministic Uncertainty Quantification (DUQ)** [53] learns a latent mixture-of-RBF density on the training dataset and outputs as $u(\\\\mathbf{x})$ how close an input's embedding is to the mixture means. The **Mahalanobis** method [30] builds a similar latent mixture of Gaussians in a post-hoc fashion. It also perturbs the inputs adversarially to separate in-distribution (ID) and out-of-distribution (OOD) samples. The **Deep Deterministic Uncertainty (DDU)** method [37] combines the spectral normalization of SNGPs with the latent density of the Mahalanobis method.\\n\\n**Temperature Scaling** [18] post-hoc calibrates the predicted probability vectors with a temperature scalar. As a **Baseline**, we use a deterministic single-point network trained with the cross-entropy loss.\\n\\n**2.2 Uncertainty Decomposition Formulas**\\n\\nSo far, we only considered uncertainty estimators that (sometimes after aggregating) output a single estimate $u(\\\\mathbf{x})$. A second strain of literature outputs not only one estimate but decomposes the $q(\\\\pi|\\\\mathbf{x})$ of distributional methods into multiple estimators that each intend to quantify one source of uncertainty, such as epistemic and aleatoric uncertainty [22, 36]. We benchmark two prominent approaches to obtain such pairs of estimators: the **information-theoretical (IT)** [11, 37, 57] and the **Bregman** decomposition [42, 19, 17]. In the main paper, we focus on the IT decomposition due to its widespread use. The definition and results of the Bregman decomposition are shown in Appendix B.\\n\\nThe IT decomposition decomposes the entropy of the predictive distribution $p(y|\\\\mathbf{x}) = \\\\mathbb{R} p(y|\\\\pi,\\\\mathbf{x}) \\\\, dq(\\\\pi|\\\\mathbf{x})$ into an aleatoric and an epistemic component:\\n\\n$$H_{p}(y|\\\\mathbf{x})|_{\\\\{\\\\pi\\\\}} = \\\\mathbb{E}_{q(\\\\pi|\\\\mathbf{x})}[H_{p}(y|\\\\pi,\\\\mathbf{x})|_{\\\\{\\\\pi\\\\}}] + I_{p}(y,\\\\pi|\\\\mathbf{x})|_{\\\\{\\\\pi\\\\}},$$\\n\\nwhere $p(y|\\\\pi,\\\\mathbf{x}) = \\\\text{Cat}(y;\\\\pi) = \\\\pi_y$, $p(y,\\\\pi|\\\\mathbf{x}) = p(y|\\\\pi,\\\\mathbf{x}) q(\\\\pi|\\\\mathbf{x})$, $H_{p}(y|\\\\mathbf{x})|_{\\\\{\\\\pi\\\\}}$ is the entropy, and $I_{p}(y,\\\\pi|\\\\mathbf{x})|_{\\\\{\\\\pi\\\\}}$ is the mutual information. Intuitively, the aleatoric component represents the...\"}"}
{"id": "x8RgF2xQTj", "page_num": 4, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure 2: Rank correlation between the aleatoric and epistemic estimates obtained by the IT decomposition on ImageNet (left) and CIFAR-10 (right). The two uncertainty components are strongly correlated for most methods, violating a necessary condition of their disentanglement.\\n\\n3 Experiments\\n\\nWe now investigate our main research question: Does any approach give disentangled uncertainty estimators (Section 3.1)? Then, we go into each individual type of uncertainty and investigate which estimator practically performs the best on epistemic (Section 3.2), aleatoric (Section 3.3), and predictive uncertainty tasks (Section 3.4). Lastly, we draw conclusions across all tasks (Section 3.5) and benchmark the robustness of current uncertainty estimators (Section 3.6).\\n\\nTo provide even grounds, we reimplement each method and provide it as an easy-to-use uncertainty wrapper that can be added to arbitrary `timm` models\\\\(^2\\\\). In this paper, we use pretrained ResNet-50 backbones and train each approach for 50 ImageNet-1k\\\\(^1\\\\) epochs with a training pipeline following Tran et al.\\\\(^4\\\\). The CE baseline converges to an accuracy of 0.785 with this strategy.\\n\\nSince the DUQ method has memory and stability issues on ImageNet, in Section 3.7, we repeat all experiments on CIFAR-10\\\\(^2\\\\) with the WideResNet 28-10 architecture, following Liu et al.\\\\(^3\\\\). We only report the other 18 methods on ImageNet. We search for ideal hyperparameters and an early stopping checkpoint for each method by tracking the validation performance. We then run the best hyperparameters across five seeds and report mean, minimum, and maximum test performance. This overall takes 1.5 GPU years on RTX 2080 Ti GPUs. We report the main results in the paper and go into more detail for, e.g., different uncertainty aggregators in the appendix. We also publish all of these metrics and their logs.\\n\\n3.1 Decomposition Formulas Fail to Disentangle Aleatoric and Epistemic Uncertainty\\n\\nWe first study if decomposition formulas, IT or Bregman, yield disentangled estimators. Since they decompose second-order predictive distributions $q(\\\\pi|x)$, we analyze distributional methods and no deterministic methods in this section.\\n\\nFig. 1 reveals a simple failure: The decomposed aleatoric and epistemic uncertainty estimates are strongly correlated, being high or low iff the other component is high or low. These severe internal correlations prohibit the estimators from capturing semantically different sources of uncertainty and hinder applications that require unconfounded uncertainty estimates, such as active learning.\\n\\n---\\n\\n1. https://github.com/bmucsanyi/untangle\\n2. https://wandb.ai/bmucsanyi/untangle\\n3. https://www.nature.com/articles/s41467-020-17728-9\\n4. https://arxiv.org/abs/2007.10448\"}"}
{"id": "x8RgF2xQTj", "page_num": 5, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 3: Performance of uncertainty quantification methods on epistemic (left) and aleatoric (right) uncertainty tasks on the ImageNet validation dataset. The behavior of deep ensembles is just one example. Figure 2a shows that aleatoric and epistemic estimates obtained via the IT decomposition are highly rank correlated (rank corr. \u2208 [0.78, 0.99]) for all distributional methods that we benchmark. This holds similarly on CIFAR-10 (Figure 2b), as well as for the Bregman decomposition (Appendix B) and also does not considerably lower when we artificially add more epistemic uncertainty into the dataset, see Appendix C.2. Often, the components are even linearly correlated; see the Pearson correlation results in Appendix C.4.\\n\\nA part of these correlations is inevitable: On ImageNet, regions with aleatorically uncertain images are undersampled compared to regions without aleatoric uncertainty and thus also more epistemically uncertain (see Fig. J.3). This means that ImageNet has a level of inevitable correlation between epistemic and aleatoric uncertainty estimates. We quantify this inevitable correlation via the rank correlation between the GT aleatoric uncertainty (i.e., the entropy of the GT label distribution) and the models' epistemic uncertainty given by the Bregman decomposition in Appendix B.4. This gives levels of inevitable correlation for the Bregman decomposition that are at most 0.45. Further, we show in Section 3.3 that there are pairs of uncertainty estimators where one performs well on aleatoric and the other on epistemic uncertainty, with a notably low rank correlation of 0.15 \u00b1 0.01. Thus, the severe correlations exceeding 0.78 are shortcomings of the decomposition formulas and not inherent properties of the ImageNet dataset.\\n\\nIn conclusion, decomposition formulas of various forms applied to various second-order distributions produce uncertainty estimators that are so highly correlated that they hardly capture the different individual notions of aleatoric and epistemic uncertainty that they are intended to capture.\"}"}
{"id": "x8RgF2xQTj", "page_num": 6, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"(a) ID correctness prediction results measured by the AUROC w.r.t. model correctness. The evidential deep learning methods, EDL and PostNet, capture predictive uncertainty remarkably well.\\n\\n(b) Abstained prediction results using the AUAC metric. Most methods are within a 0.03 AUAC band. EDL and PostNet lose their advantage as their accuracy is lower.\\n\\nFigure 4: ID predictive uncertainty evaluation on the ImageNet validation dataset. The Mahalanobis method is a specialized OOD detector that cannot differentiate between ID samples.\\n\\n3.3 Aleatoric Uncertainty: No Method With Outstanding Performance\\n\\nThe previous experiment isolated the epistemic capabilities of uncertainty estimates. We now evaluate how well the benchmarked models predict aleatoric uncertainty. We follow Tran et al. [49] and Kirchhof et al. [24, 25] and use the disagreement of human annotators as ground truths for aleatoric uncertainty. ImageNet-ReaL [2] (and CIFAR-10H [41]) queries multiple annotators for labels on each image. We showcase some examples in Appendix J. We use the entropy of the soft-label distributions per image as GT aleatoric uncertainties. We then calculate the rank correlation between the methods\u2019 uncertainty estimates and the GT label entropies across all images. We do not use an AUROC here because the GT values are continuous, but provide binarized AUROCs for direct comparability of aleatoric and epistemic uncertainty performance results in Appendix H.4.\\n\\nFig. 3b shows that almost all methods lie within a correlation of [0.37, 0.46]. Note that the best achievable rank correlation is not one since the GT aleatoric data contains ties. While it is unknown how high the best achievable rank correlation is, the fact that there are consistent improvements across the methods hints at the fact that further performance gains are far from saturated. The method that sticks out on the low end of the spectrum is Mahalanobis, which is uncorrelated with the GT aleatoric uncertainty. This is, in fact, a strength: Mahalanobis estimates reflect epistemic uncertainty while being non-informative of aleatoric uncertainty. Combining this with a second estimator for aleatoric uncertainty can pave the way for a pair of disentangled uncertainty estimators. As a simple start, combining it with the CE baseline achieves a low rank correlation of 0.15 \u00b1 0.01 between the two. We see this as a promising pathway to disentangled uncertainty estimators in the future.\\n\\nWith the aleatoric and epistemic tasks introduced, we can take a final look at the epistemic and aleatoric estimators proposed by the IT decomposition. In Appendix C.3, using them instead of the best ones reduces Shallow Ensemble\u2019s performance, which was the best distributional method on OOD detection, to the CE baseline level. It again shows that the theoretically intuitive estimators underperform in practice.\\n\\n3.4 Predictive Uncertainty: The Best Method Depends on the Precise Task\\n\\nLet us now broaden the view beyond disentanglement to benchmark how well uncertainty estimators solve other practically relevant tasks. We start with correctness prediction, where the AUROC quantifies whether wrong predictions generally have higher uncertainties than correct predictions. Fig. 4a shows that most uncertainty estimators perform within \u00b10.014 of the cross-entropy baseline when predicting correctness. Modern methods like HET-XL do not outperform older methods like the Deep Ensemble or MC Dropout. Evidential deep learning methods, like EDL and PostNet, are an exception to this. They are considerably better at predicting correctness. This also holds when mixing the datasets with OOD data in Appendix H.1. However, their better performance comes at a cost. Evidential methods have a trade-off between the quality of their uncertainty estimates and the...\"}"}
{"id": "x8RgF2xQTj", "page_num": 7, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"When demanding similar classification accuracies, we find that they lose their advantage. A related task to correctness prediction is abstained prediction. It involves refusing to predict on the $x\\\\%$ most uncertain examples and calculating the model's accuracy on the remaining samples. We use the Accuracy-Coverage (AC) curve [15] that plots increasing fractions of abstained samples from $0\\\\%$ to $100\\\\%$ on the $x$-axis against the accuracy on the non-abstained portion. Following the conventions of Galil et al. [14], we denote this metric as the area under the accuracy coverage curve (AUAC). In Appendix H.5, we also evaluate methods on the rAULC and E-AURC metrics that normalize the AUAC by the accuracy of the underlying model [43, 14].\\n\\nFig. 4b shows that this predictive uncertainty task is saturated. All uncertainty methods apart from Mahalanobis obtain an AUAC score greater than $0.91$, and only a few outperform the CE baseline. Since the AUAC depends on accuracy, EDL and PostNet perform worse in this metric, although both AUROC and AUAC target predictive uncertainty. This demonstrates that practitioners need to carefully specify an uncertainty estimator's overall goal. Designing a system that can detect errors is not the same as designing a system that reduces errors.\\n\\nThe same holds for calibration. While this is also a predictive uncertainty task, the goal is slightly different. It is not to provide a good ranking of uncertain images but to give correctness probabilities that are close to the true frequentist probabilities.\\n\\nFig. 5 shows that different methods excel at this task than at the AUROC correctness task (Fig. 4a). In particular, Laplace and temperature scaling, which were only as good as the CE baseline in terms of AUROC, show drastically improved performance in terms of the ECE. Note that these two use a validation dataset to become better calibrated, similar to how Mahalanobis specialized and outperformed on the epistemic uncertainty task.\\n\\nIn conclusion, the predictive uncertainty results show that the exact definition of the task one intends to solve with uncertainty estimators matters because different estimators specialize in different notions of uncertainty.\"}"}
{"id": "x8RgF2xQTj", "page_num": 8, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"As uncertainty estimates are often intended to increase the reliability of systems, one necessity is that they remain robust when a system faces unforeseen inputs. We test this by checking if their previous abstinence and correctness performances are preserved even when the model\u2019s accuracy drops with increasing ImageNet-C perturbation levels. Only then can we trust them and, e.g., base the abstinence from prediction on these uncertainty estimates.\\n\\nFig. 7a shows the correctness prediction AUROC, AUAC, and model accuracy as we increasingly perturb the ImageNet validation samples and go OOD. The correctness prediction performance in terms of the AUROC remains almost constant, whereas the accuracy degrades to less than 25% at severity level five. The AUAC performance degrades together with accuracy, which is a fundamental property of the metric itself since the area under the accuracy is lower-bounded by the baseline accuracy. The AUAC gain (i.e., AUAC \u2212 Accuracy) increases with the perturbation severity, showing that the uncertainty estimators even become relatively better on the abstinence task as the severity increases. The tendencies are maintained when we normalize the metrics (solid lines) according to their random predictive performance (see Appendix H.2 for details). This observation holds for all methods except Mahalanobis, see Appendix H.2. Figure 8a shows that the methods\u2019 ECE also remains robust to perturbations on ImageNet. These results underline the trustworthiness of existing uncertainty quantification methods as we go OOD on ImageNet.\"}"}
{"id": "x8RgF2xQTj", "page_num": 9, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"3.7 CIFAR-10 Results Do Not Always Transfer to ImageNet\\n\\nWe conclude our experiments with a word of caution. Appendix G repeats all experiments on CIFAR-10, which is widely used in the uncertainty quantification literature [53, 37, 17]. While some conclusions from CIFAR-10 experiments replicate on ImageNet, like the correlated aleatoric and epistemic estimators, the larger-scale ImageNet often shows different behavior.\\n\\nRobustness.\\n\\nUncertainty estimates are far less robust on CIFAR-10 than on the ImageNet scale, even though the drop in classification accuracy is very similar. Unlike on ImageNet, where the uncertainty estimators maintain a close to constant performance in predicting correctness as we go OOD (Fig. 7a), on CIFAR-10, correctness estimators deteriorate together with the model's accuracy (Fig. 7b). The same holds for the ECE (Fig. 8a vs. Fig. 8b). So, while robustness appears to be a striking problem on CIFAR-10, it gets resolved by scaling to a larger dataset.\\n\\nMethod rankings.\\n\\nNine out of thirteen tasks exhibit substantially different rankings (rank corr. < 0.5) between CIFAR-10 and ImageNet. See Table H.1 for details. This indicates that performance on CIFAR-10 should not be taken as an estimate for ImageNet performance.\\n\\nThese experiments underline that methods might show substantially different behaviors on large-scale datasets. As best practice, we encourage to first scale the approaches to the final deployment domain (and define a precise task) instead of making fundamental design choices on toy datasets.\\n\\n4 Connections Between Our Findings and Related Works\\n\\nUncertainty Disentanglement.\\n\\nThe decomposition of aleatoric and epistemic uncertainties [42, 11] has recently been shown to have failure cases. The disentanglement is usually analyzed theoretically [57, 1, 16] or with qualitative plots (Kirchhof et al. [26], Fig. 6-9; Mukhoti et al. [37], Fig. 2; Valdenegro-Toro and Mori [52], Fig. 8-10). Our results support this discussion with a practical and quantitative perspective. To the best of our knowledge, we are the first to quantify the uncertainty disentanglement. We find that no tested decomposition formula works for any tested second-order distribution, neither on ImageNet-1k nor CIFAR-10. Our findings encourage combining separate methods instead, such as the CE baseline's predictive entropy and the Mahalanobis values, where each method handles a specific type of uncertainty. This is similar to the recent work of Mukhoti et al. [37]. We expect that our quantitative benchmarking methods help develop this field further.\\n\\nRobustness.\\n\\nRecent benchmarks on OOD detection and robustness [38, 40, 43, 13] have first highlighted robustness issues of uncertainty estimates. Our benchmark supports these findings on CIFAR-10, especially in the region that is slightly OOD yet already causes degradation of both the main task and the uncertainty estimator. The latter implies that uncertainty estimators either need to become more robust to distribution shifts [25] or be better able to detect subtle epistemic uncertainties. However, our experiments on ImageNet do not show robustness issues. It is possible that the vast space of natural images that the ImageNet training dataset covers resolves this issue. We encourage repeating our experiments and testing the uncertainty estimation not just on test data but also on perturbed test data for future large-scale uncertainty estimators.\\n\\nAleatoric uncertainty.\\n\\nWhile epistemic uncertainty is widely evaluated on the OOD detection proxy task [37, 49, 17], aleatoric uncertainty still lacks a standardized testing protocol. The current approaches seem to converge to soft labels, but nuances in how they are collected still need discussion (compare, for example, CIFAR-10H [41] to CIFAR-10S [7] and CIFAR-10N [55]). An increasing number of uncertainty quantification approaches compare to such human GT notions of aleatoric uncertainty [49, 24, 25, 26], indicating the interest in the field. Our benchmark shows that no method can give highly accurate aleatoric uncertainty estimates yet, stressing the need for benchmarks, methods, and training resources to develop along.\\n\\nPredictive uncertainty and calibration.\\n\\nContrary to aleatoric uncertainty alignment, calibration and predictive uncertainty benchmarks are starting to become saturated and, according to our experiments, the top performers are ready for deployment. This corroborates recent findings by Galil et al. [14]. In comparison to this benchmark that compared model architectures, we compared nineteen different approaches on the same backbone with a wide range of aggregator functions.\"}"}
{"id": "x8RgF2xQTj", "page_num": 10, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Conclusions, Limitations, and Outlooks\\n\\nWe study how a diverse spectrum of uncertainty estimators and decomposition formulas perform on a comprehensive set of uncertainty quantification tasks. Our quantitative findings bring an empirical foundation to recent discussions in the field, namely that 1) the aleatoric and epistemic uncertainty components of decomposition formulas are highly correlated and not disentangled, 2) epistemic and aleatoric tasks are best solved by practically tailored methods, whereas methods relying on intuitions often underperform, and 3) there is no one-fits-all uncertainty estimate. On a brighter side, our experiments also reveal the important fact for practitioners that 4) predictive uncertainty estimation achieve a high, saturating performance across almost all methods, and 5) uncertainty estimates, when trained on large amounts of data, stay robust to perturbations longer than the classifiers whose uncertainties they predict, hence enabling to safeguard the classifiers to some extent.\\n\\nA limitation of our disentanglement benchmark is that we tested on two datasets, which are both classification tasks. This is because we require ground truths for aleatoric uncertainty. Currently, the only larger-scale datasets with such ground truths, in the form of multiple annotations per input, are the two classification datasets we base our analysis on [2, 41]. Further aleatoric uncertainty ground truths are an ongoing effort [44, 7]. We encourage the expansion of the set of datasets, both within classification and to fields like regression [51] or unsupervised learning [24], to expand our uncertainty disentanglement investigations. A second limitation is that we focus on models that have converged after training on the large-scale ImageNet dataset. A different interesting setup is models trained on small amounts of data, where epistemic uncertainty may be further from convergence. For example, there is a follow-up investigation of our work by de Jong et al. [9] that undersamples the train data. We replicate parts of their main experiment results on CIFAR-10 in Appendix H.9. We encourage future works to evaluate uncertainties on an as broad array of tasks as possible to refine the understanding of which specific uncertainty tasks individual uncertainty estimators excel at.\\n\\nThis last suggestion is a corollary of how our findings changed our perspective on uncertainty quantification. There is no general uncertainty; instead, uncertainty quantification covers a spectrum of tasks where the definition of the exact task heavily influences the optimal method and performance. Such a precise definition of tasks per estimator would help construct disentangled uncertainties and could lead to the alignment of theoretical developments and intuitive descriptions about what particular types of uncertainty methods aim to capture. This pragmatic reassessment of the field could overcome the traditional one-fits-all view of uncertainty and even the more recent epistemic vs. aleatoric dichotomy and uncover the full variety of uncertainty estimates that are tailored to nuanced, practical tasks.\\n\\nAcknowledgements\\n\\nThis work was funded by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under Germany's Excellence Strategy \u2013 EXC number 2064/1 \u2013 Project number 390727645. It also received funding from the DFG via the Priority Programme DFG SPP 2298-2. The authors thank the International Max Planck Research School for Intelligent Systems (IMPRS-IS) for supporting B\u00e1lint Mucs\u00e1nyi and Michael Kirchhof.\\n\\nReferences\\n\\n[1] V. Bengs, E. H\u00fcllermeier, and W. Waegeman. On second-order scoring rules for epistemic uncertainty quantification. In International Conference on Machine Learning (ICML), 2023.\\n\\n[2] L. Beyer, O. J. H\u00e9naff, A. Kolesnikov, X. Zhai, and A. v. d. Oord. Are we done with imagenet? arXiv preprint arXiv:2006.07159, 2020.\\n\\n[3] L. Biewald. Experiment tracking with weights and biases, 2020. URL https://www.wandb.com/. Software available from wandb.com.\\n\\n[4] B. Charpentier, D. Z\u00fcgner, and S. G\u00fcnnemann. Posterior network: Uncertainty estimation without ood samples via density-based pseudo-counts. In H. Larochelle, M. Ranzato, R. Hadsell, M. Balcan, and H. Lin, editors, Advances in Neural Information Processing Systems, volume 33, pages 1356\u20131367. Curran Associates, Inc., 2020. URL https://proceedings.neurips.cc/paper_files/paper/2020/file/0eac690d7059a8de4b48e90f14510391-Paper.pdf.\"}"}
{"id": "x8RgF2xQTj", "page_num": 11, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"M. Collier, B. Mustafa, E. Kokiopoulou, R. Jenatton, and J. Berent. Correlated input-dependent label noise in large-scale image classification. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 1551\u20131560, 2021.\\n\\nM. Collier, R. Jenatton, B. Mustafa, N. Houlsby, J. Berent, and E. Kokiopoulou. Massively scaling heteroscedastic classifiers. In The Eleventh International Conference on Learning Representations, 2023. URL https://openreview.net/forum?id=sIoED-yPK9l.\\n\\nK. M. Collins, U. Bhatt, and A. Weller. Eliciting and learning with soft labels from every annotator. In Proceedings of the AAAI Conference on Human Computation and Crowdsourcing (HCOMP), volume 10, 2022.\\n\\nE. Daxberger, A. Kristiadi, A. Immer, R. Eschenhagen, M. Bauer, and P. Hennig. Laplace redux-effortless bayesian deep learning. Advances in Neural Information Processing Systems, 34:20089\u201320103, 2021.\\n\\nI. P. de Jong, A. I. Sburlea, and M. Valdenegro-Toro. How disentangled are your classification uncertainties? arXiv preprint arXiv:2408.12175, 2024.\\n\\nJ. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei. Imagenet: A large-scale hierarchical image database. In 2009 IEEE conference on computer vision and pattern recognition, pages 248\u2013255. Ieee, 2009.\\n\\nS. Depeweg, J.-M. Hernandez-Lobato, F. Doshi-Velez, and S. Udluft. Decomposition of uncertainty in bayesian deep learning for efficient and risk-sensitive learning. In International Conference on Machine Learning, pages 1184\u20131193. PMLR, 2018.\\n\\nY. Gal and Z. Ghahramani. Dropout as a bayesian approximation: Representing model uncertainty in deep learning. In international conference on machine learning, pages 1050\u20131059. PMLR, 2016.\\n\\nI. Galil, M. Dabbah, and R. El-Yaniv. A framework for benchmarking class-out-of-distribution detection and its application to imagenet. In The Eleventh International Conference on Learning Representations (ICLR), 2023.\\n\\nI. Galil, M. Dabbah, and R. El-Yaniv. What can we learn from the selective prediction and uncertainty estimation performance of 523 imagenet classifiers? In International Conference on Learning Representations (ICLR), 2023.\\n\\nY. Geifman, G. Uziel, and R. El-Yaniv. Bias-reduced uncertainty estimation for deep neural classifiers. arXiv preprint arXiv:1805.08206, 2018.\\n\\nC. Gruber, P. O. Schenk, M. Schierholz, F. Kreuter, and G. Kauermann. Sources of uncertainty in machine learning\u2014a statisticians' view. arXiv preprint arXiv:2305.16703, 2023.\\n\\nS. Gruber and F. Buettner. Uncertainty estimates of predictions via a general bias-variance decomposition. In International Conference on Artificial Intelligence and Statistics, pages 11331\u201311354. PMLR, 2023.\\n\\nC. Guo, G. Pleiss, Y. Sun, and K. Q. Weinberger. On calibration of modern neural networks. In International conference on machine learning, pages 1321\u20131330. PMLR, 2017.\\n\\nN. Gupta, J. Smith, B. Adlam, and Z. Mariet. Ensembling over classifiers: a bias-variance perspective. arXiv preprint arXiv:2206.10566, 2022.\\n\\nK. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning for image recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 770\u2013778, 2016.\\n\\nD. Hendrycks and T. Dietterich. Benchmarking neural network robustness to common corruptions and perturbations. arXiv preprint arXiv:1903.12261, 2019.\\n\\nS. C. Hora. Aleatory and epistemic uncertainty in probability elicitation with an example from hazardous waste management. Reliability Engineering & System Safety, 54(2-3):217\u2013223, 1996.\"}"}
{"id": "x8RgF2xQTj", "page_num": 12, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"[23] A. Kendall and Y. Gal. What uncertainties do we need in bayesian deep learning for computer vision? Advances in neural information processing systems, 30, 2017.\\n\\n[24] M. Kirchhof, E. Kasneci, and S. J. Oh. Probabilistic contrastive learning recovers the correct aleatoric uncertainty of ambiguous inputs. International Conference on Machine Learning (ICML), 2023.\\n\\n[25] M. Kirchhof, B. Mucs\u00e1nyi, S. J. Oh, and E. Kasneci. URL: A representation learning benchmark for transferable uncertainty estimates. In Thirty-seventh Conference on Neural Information Processing Systems Datasets and Benchmarks Track, 2023. URL https://openreview.net/forum?id=e9n4JjkmXZ.\\n\\n[26] M. Kirchhof, M. Collier, S. J. Oh, and E. Kasneci. Pretrained visual uncertainties. arXiv preprint arXiv:2402.16569, 2024.\\n\\n[27] A. Krizhevsky and G. Hinton. Learning multiple layers of features from tiny images. Master's thesis, Department of Computer Science, University of Toronto, 2009.\\n\\n[28] S. Lahlou, M. Jain, H. Nekoei, V. I. Butoi, P. Bertin, J. Rector-Brooks, M. Korablyov, and Y. Bengio. DEUP: Direct epistemic uncertainty prediction. Transactions on Machine Learning Research, 2023. ISSN 2835-8856. URL https://openreview.net/forum?id=eGLdVRvvfQ.\\n\\n[29] B. Lakshminarayanan, A. Pritzel, and C. Blundell. Simple and scalable predictive uncertainty estimation using deep ensembles. Advances in neural information processing systems, 30, 2017.\\n\\n[30] K. Lee, K. Lee, H. Lee, and J. Shin. A simple unified framework for detecting out-of-distribution samples and adversarial attacks. Advances in neural information processing systems, 31, 2018.\\n\\n[31] S. Lee, S. Purushwalkam, M. Cogswell, D. Crandall, and D. Batra. Why m heads are better than one: Training a diverse ensemble of deep networks. arXiv preprint arXiv:1511.06314, 2015.\\n\\n[32] J. Liu, Z. Lin, S. Padhy, D. Tran, T. Bedrax Weiss, and B. Lakshminarayanan. Simple and principled uncertainty estimation with deterministic deep learning via distance awareness. Advances in Neural Information Processing Systems, 33:7498\u20137512, 2020.\\n\\n[33] I. Loshchilov and F. Hutter. SGDR: Stochastic gradient descent with warm restarts. In International Conference on Learning Representations, 2017. URL https://openreview.net/forum?id=Skq89Scxx.\\n\\n[34] W. J. Maddox, P. Izmailov, T. Garipov, D. P. Vetrov, and A. G. Wilson. A simple baseline for bayesian uncertainty in deep learning. Advances in neural information processing systems, 32, 2019.\\n\\n[35] S. Mindermann, J. M. Brauner, M. T. Razzak, M. Sharma, A. Kirsch, W. Xu, B. H\u00f6ltgen, A. N. Gomez, A. Morisot, S. Farquhar, et al. Prioritized training on points that are learnable, worth learning, and not yet learnt. In International Conference on Machine Learning, pages 15630\u201315649. PMLR, 2022.\\n\\n[36] B. Mucs\u00e1nyi, M. Kirchhof, E. Nguyen, A. Rubinstein, and S. J. Oh. Trustworthy machine learning. arXiv preprint arXiv:2310.08215, 2023.\\n\\n[37] J. Mukhoti, A. Kirsch, J. van Amersfoort, P. H. Torr, and Y. Gal. Deep deterministic uncertainty: A new simple baseline. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 24384\u201324394, 2023.\\n\\n[38] Z. Nado, N. Band, M. Collier, J. Djolonga, M. Dusenberry, S. Farquhar, A. Filos, M. Havasi, R. Jenatton, G. Jerfel, J. Liu, Z. Mariet, J. Nixon, S. Padhy, J. Ren, T. Rudner, Y. Wen, F. Wenzel, K. Murphy, D. Sculley, B. Lakshminarayanan, J. Snoek, Y. Gal, and D. Tran. Uncertainty Baselines: Benchmarks for uncertainty & robustness in deep learning. arXiv preprint arXiv:2106.04015, 2021.\\n\\n[39] J. Nixon, M. W. Dusenberry, L. Zhang, G. Jerfel, and D. Tran. Measuring calibration in deep learning. In CVPR workshops, volume 2, 2019.\"}"}
{"id": "x8RgF2xQTj", "page_num": 13, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Y. Ovadia, E. Fertig, J. Ren, Z. Nado, D. Sculley, S. Nowozin, J. Dillon, B. Lakshminarayanan, and J. Snoek. Can you trust your model's uncertainty? Evaluating predictive uncertainty under dataset shift. Advances in Neural Information Processing Systems (NeurIPS), 32, 2019.\\n\\nJ. C. Peterson, R. M. Battleday, T. L. Griffiths, and O. Russakovsky. Human uncertainty makes classification more robust. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 9617\u20139626, 2019.\\n\\nD. Pfau. A generalized bias-variance decomposition for bregman divergences. Unpublished Manuscript, 2013.\\n\\nJ. Postels, M. Seg\u00f9, T. Sun, L. D. Sieber, L. Van Gool, F. Yu, and F. Tombari. On the practicality of deterministic epistemic uncertainty. In International Conference on Machine Learning (ICML), 2022.\\n\\nL. Schmarje, V. Grossmann, C. Zelenka, S. Dippel, R. Kiko, M. Oszust, M. Pastell, J. Stracke, A. Valros, N. Volkmann, et al. Is one annotation enough?-a data-centric image classification benchmark for noisy and ambiguous label estimation. Advances in Neural Information Processing Systems, 35:33215\u201333232, 2022.\\n\\nM. Sensoy, L. Kaplan, and M. Kandemir. Evidential deep learning to quantify classification uncertainty. In S. Bengio, H. Wallach, H. Larochelle, K. Grauman, N. Cesa-Bianchi, and R. Garnett, editors, Advances in Neural Information Processing Systems, volume 31. Curran Associates, Inc., 2018. URL https://proceedings.neurips.cc/paper_files/paper/2018/file/a981f2b708044d6fb4a71a1463242520-Paper.pdf.\\n\\nM. Sensoy, L. Kaplan, and M. Kandemir. Evidential deep learning to quantify classification uncertainty. Advances in neural information processing systems, 31, 2018.\\n\\nM. H. Shaker and E. H\u00fcllermeier. Ensemble-based uncertainty quantification: Bayesian versus credal inference. In Proceedings of the 31. Workshop on Computational Intelligence, volume 25, page 63, 2021.\\n\\nN. Srivastava, G. Hinton, A. Krizhevsky, I. Sutskever, and R. Salakhutdinov. Dropout: a simple way to prevent neural networks from overfitting. The journal of machine learning research, 15(1):1929\u20131958, 2014.\\n\\nD. Tran, J. Z. Liu, M. W. Dusenberry, D. Phan, M. Collier, J. Ren, K. Han, Z. Wang, Z. E. Mariet, H. Hu, N. Band, T. G. J. Rudner, Z. Nado, J. van Amersfoort, A. Kirsch, R. Jenatton, N. Thain, E. K. Buchanan, K. P. Murphy, D. Sculley, Y. Gal, Z. Ghahramani, J. Snoek, and B. Lakshminarayanan. Plex: Towards reliability using pretrained large model extensions. In First Workshop on Pre-training: Perspectives, Pitfalls, and Paths Forward at ICML 2022, 2022. URL https://openreview.net/forum?id=6x0gB9gOHFg.\\n\\nD. Ulmer, C. Hardmeier, and J. Frellsen. Prior and posterior networks: A survey on evidential deep learning methods for uncertainty estimation. Trans. Mach. Learn. Res., 2023, 2023. URL https://openreview.net/forum?id=xqS8k9E75c.\\n\\nU. Upadhyay, J. M. Kim, C. Schmidt, B. Sch\u00f6lkopf, and Z. Akata. Likelihood annealing: Fast calibrated uncertainty for regression. arXiv preprint arXiv:2302.11012, 2023.\\n\\nM. Valdenegro-Toro and D. S. Mori. A deeper look into aleatoric and epistemic uncertainty disentanglement. In Computer Vision and Pattern Recognition Workshops (CVPRW), 2022.\\n\\nJ. Van Amersfoort, L. Smith, Y. W. Teh, and Y. Gal. Uncertainty estimation using a single deep deterministic neural network. In International conference on machine learning, pages 9690\u20139700. PMLR, 2020.\\n\\nU. Von Luxburg and B. Sch\u00f6lkopf. Statistical learning theory: Models, concepts, and results. In Handbook of the History of Logic, volume 10, pages 651\u2013706. Elsevier, 2011.\\n\\nJ. Wei, Z. Zhu, H. Cheng, T. Liu, G. Niu, and Y. Liu. Learning with noisy labels revisited: A study using real-world human annotations. In International Conference on Learning Representations (ICLR), 2022.\"}"}
{"id": "x8RgF2xQTj", "page_num": 14, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"[56] R. Wightman. Pytorch image models. https://github.com/rwightman/pytorch-image-models, 2019.\\n\\n[57] L. Wimmer, Y. Sale, P. Hofman, B. Bischl, and E. H\u00fcllermeier. Quantifying aleatoric and epistemic uncertainty in machine learning: Are conditional entropy and mutual information appropriate measures? In Uncertainty in Artificial Intelligence, pages 2282\u20132292. PMLR, 2023.\\n\\n[58] Y. Yang, S. Mandt, L. Theis, et al. An introduction to neural data compression. Foundations and Trends\u00ae in Computer Graphics and Vision, 15(2):113\u2013200, 2023.\\n\\n[59] D. Yoo and I. S. Kweon. Learning loss for active learning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), 2019.\\n\\n[60] Y. You, J. Li, S. Reddi, J. Hseu, S. Kumar, S. Bhojanapalli, X. Song, J. Demmel, K. Keutzer, and C.-J. Hsieh. Large batch optimization for deep learning: Training bert in 76 minutes. In International Conference on Learning Representations, 2020. URL https://openreview.net/forum?id=Syx4wnEtvH.\\n\\n[61] S. Zagoruyko and N. Komodakis. Wide residual networks. In Proceedings of the British Machine Vision Conference 2016. British Machine Vision Association, 2016.\"}"}
{"id": "x8RgF2xQTj", "page_num": 15, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A Details of Benchmarked Methods\\n\\nA.1 Deterministic Methods\\n\\nA.2 Distributional Methods\\n\\nB Definition and Further Results of the Bregman Decomposition\\n\\nB.1 Special Form of the Bregman Decomposition for the Kullback-Leibler Divergence\\n\\nB.2 DEUP is a Special Case of Bregman\\n\\nB.3 Correlation of Components and Limitations\\n\\nB.4 Disentangling Epistemic and Aleatoric Uncertainty via Decomposition Formulas Is Feasible\\n\\nB.5 Alignment of Methods with the Bregman Bias\\n\\nC Further Results of the Information-Theoretical Decomposition\\n\\nC.1 Special Form on the Information-Theoretical Decomposition for Discrete Posteriors\\n\\nC.2 Entanglement on Datasets with Increased Epistemic Uncertainty\\n\\nC.3 Performance of Decorrelated Methods using the Information-Theoretical Components\\n\\nC.4 Pearson Correlation Results on ImageNet\\n\\nC.5 Cross-Evaluation of the IT Decomposition\u2019s Components on ImageNet\\n\\nD Definitions and Results of the Benchmarked Aggregators\\n\\nD.1 Entropy-Based Aggregators\\n\\nD.2 Maximum-Probability-Based Aggregators\\n\\nD.3 Disagreement-Based Aggregators\\n\\nD.4 Dempster-Shafer Value\\n\\nD.5 The Behavior of the Aggregators Does Not Align With What the Literature Suggests\\n\\nE Goals of Disentanglement\\n\\nF Design Choices\\n\\nF.1 Disentanglement Experiments\\n\\nF.2 Epistemic Uncertainty Experiments\\n\\nF.3 Aleatoric Uncertainty Experiments\\n\\nG Main CIFAR-10 Experiments\\n\\nG.1 Epistemic Uncertainty: Specialized Uncertainty Estimators detect OOD Inputs the Best\\n\\nG.2 Aleatoric Uncertainty: No Method With Outstanding Performance\\n\\nG.3 Predictive Uncertainty: Close to Saturation on CIFAR-10\\n\\nG.4 Different Tasks Require Different Estimators\\n\\nH Further Practical Results\\n\\nH.1 Correctness Prediction\\n\\nH.2 Performance Tendency for Increasing Severity\\n\\nH.3 OOD Detection\"}"}
{"id": "x8RgF2xQTj", "page_num": 16, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":null}"}
{"id": "x8RgF2xQTj", "page_num": 65, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"\u2022 It should be clear whether the error bar is the standard deviation or the standard error of the mean.\\n\u2022 It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified.\\n\u2022 For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates).\\n\u2022 If error bars are reported in tables or plots, the authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.\\n\\n8. Experiments Compute Resources\\n\\nQuestion: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments?\\n\\nAnswer: [Yes]\\n\\nJustification: In Section 3.\\n\\nGuidelines:\\n\u2022 The answer NA means that the paper does not include experiments.\\n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.\\n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.\\n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).\\n\\n9. Code Of Ethics\\n\\nQuestion: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines?\\n\\nAnswer: [Yes]\\n\\nJustification: We fulfill all requirements.\\n\\nGuidelines:\\n\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.\\n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.\\n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).\\n\\n10. Broader Impacts\\n\\nQuestion: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed?\\n\\nAnswer: [N/A]\\n\\nJustification: Our paper conducts no societally harmful research.\\n\\nGuidelines:\\n\u2022 The answer NA means that there is no societal impact of the work performed.\\n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.\\n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.\"}"}
{"id": "x8RgF2xQTj", "page_num": 66, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.\\n\\nThe authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.\\n\\nIf there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).\\n\\n11. Safeguards\\n\\nQuestion: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)?\\n\\nAnswer: [N/A]\\n\\nJustification: There is no risk in abusing ImageNet or CIFAR-10 classifiers.\\n\\nGuidelines:\\n- The answer NA means that the paper poses no such risks.\\n- Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.\\n- Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.\\n- We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.\\n\\n12. Licenses for existing assets\\n\\nQuestion: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected?\\n\\nAnswer: [Yes]\\n\\nJustification: We cite the ImageNet, ImageNet-ReaL, CIFAR-10, and CIFAR-10H datasets and the timm library for the code and the pretrained ResNet-50s.\\n\\nGuidelines:\\n- The answer NA means that the paper does not use existing assets.\\n- The authors should cite the original paper that produced the code package or dataset.\\n- The authors should state which version of the asset is used and, if possible, include a URL.\\n- The name of the license (e.g., CC-BY 4.0) should be included for each asset.\\n- For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.\\n- If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.\\n- For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.\"}"}
{"id": "x8RgF2xQTj", "page_num": 67, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"If this information is not available online, the authors are encouraged to reach out to the asset's creators.\\n\\n13. New Assets\\n\\nQuestion: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets?\\n\\nAnswer: [N/A]\\n\\nJustification: We do not release new assets, we only record metrics.\\n\\nGuidelines:\\n- The answer NA means that the paper does not release new assets.\\n- Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.\\n- The paper should discuss whether and how consent was obtained from people whose asset is used.\\n- At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.\\n\\n14. Crowdsourcing and Research with Human Subjects\\n\\nQuestion: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)?\\n\\nAnswer: [N/A]\\n\\nJustification: We do not use crowdsourcing.\\n\\nGuidelines:\\n- The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.\\n- Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.\\n- According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.\\n\\n15. Institutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects\\n\\nQuestion: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained?\\n\\nAnswer: [N/A]\\n\\nJustification: We do not conduct experiments with humans.\\n\\nGuidelines:\\n- The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.\\n- Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.\\n- We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.\\n- For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.\"}"}
{"id": "x8RgF2xQTj", "page_num": 49, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"| Method          | AUROC \u2191 | Deep Ens. | MC Dropout | SW AG   | SNGP   | HetClassNN | GP      | Laplace | CE Baseline | Temperature | Shallow Ens. | HET-XL | PostNet | HET          | EDL      | DDU | Corr. Pred. | DUQ | Loss Pred. | Mahalanobis | Distributional | Deterministic |\\n|-----------------|---------|-----------|------------|----------|--------|------------|---------|---------|-------------|-------------|--------------|--------|--------|--------------|---------|-----|-------------|-----|-----------|-------------|----------------|---------------|\\n| AUROC \u2191         |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (a) ID results. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (b) Mixed ID and OOD severity level one. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (c) OOD severity level one. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (d) Mixed ID and OOD severity level two. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (e) OOD severity level two. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (f) Mixed ID and OOD severity level three. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (g) OOD severity level three. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (h) Mixed ID and OOD severity level four. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (i) OOD severity level four. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (j) Mixed ID and OOD severity level five. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n| (k) OOD severity level five. |         |           |            |          |        |             |         |         |             |             |              |        |         |              |         |     |             |     |           |             |                |               |\\n\\nFigure H.2: On CIFAR-10, the performance of the methods consistently drops on the correctness prediction task, both on completely OOD datasets (right column) and on balanced mixtures of ID and OOD datasets (left column).\"}"}
{"id": "x8RgF2xQTj", "page_num": 50, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.3: On CIFAR-10, all methods' performance deteriorates at the same rate as the model's accuracy on the correctness and abstinence tasks. The only exception is Mahalanobis, which is a specialized OOD detector.\"}"}
{"id": "x8RgF2xQTj", "page_num": 51, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.4: On ImageNet, the estimate for predictive correctness is much more robust to OOD perturbations than the model's accuracy for all methods except Mahalanobis (a specialized OOD detector). The AUC abstinence score deteriorates at the same rate as the model's accuracy, which is an inherent property of the metric as the accuracy lower bounds the abstinence AUC metric.\"}"}
{"id": "x8RgF2xQTj", "page_num": 52, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"| Method          | Severity Level |\\n|-----------------|----------------|\\n| AUROC \u2191         |                |\\n| Mahalanobis     |                |\\n| Shallow Ens.    |                |\\n| Deep Ens.       |                |\\n| MC Dropout      |                |\\n| HetClassNN      |                |\\n| SW AG           |                |\\n| SNGP            |                |\\n| Corr. Pred.     |                |\\n| Loss Pred.      |                |\\n| Laplace         |                |\\n| EDL             |                |\\n| PostNet         |                |\\n| Temperature     |                |\\n| HET-XL          |                |\\n| CE Baseline     |                |\\n| HET             |                |\\n| GP              |                |\\n| DDU             |                |\\n| Distributional  |                |\\n| Deterministic   |                |\\n\\n(a) OOD detection AUROC with severity level one.\\n\\n(b) OOD detection AUROC with severity level two.\\n\\n(c) OOD detection AUROC with severity level three.\\n\\n(d) OOD detection AUROC with severity level four.\\n\\n(e) OOD detection AUROC with severity level five.\\n\\nFigure H.5: The OOD detection performance of all methods increases steadily as we increase the severity of the perturbed half of the mixed dataset on the ImageNet validation dataset. However, the specialized OOD detector, Mahalanobis, generalizes worse than the other methods.\"}"}
{"id": "x8RgF2xQTj", "page_num": 53, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.6: On CIFAR-10, the OOD detection performance of all methods increases steadily as we increase the severity of the perturbed half of the mixed dataset. The relative distance between Mahalanobis and the other methods decreases with increasing severity level.\\n\\nFigure H.7: ImageNet ambiguous input detection results. The ranking is considerably different from the ranking with the continuous ground truths in Fig. 3b.\\n\\nFigure H.8: CIFAR-10 ambiguous input detection results. The Correctness Prediction method is most aligned with human uncertainties. The methods are ranked the same as when using the rank correlation in Fig. G.2, except for MC Dropout.\"}"}
{"id": "x8RgF2xQTj", "page_num": 54, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.9: ImageNet abstained prediction evaluation on the E-AURC (left) and the rAULC (right) metric. Even though both metrics are normalized by the underlying model's accuracy, this normalization is done in different ways, and the rankings of methods are quite different, e.g., for PostNet and SNGP.\\n\\nFigure H.10: CIFAR-10 abstained prediction evaluation on the E-AURC (left) and the rAULC (right) metric. While deep ensembles are best according to both metrics, the rankings of methods are quite different.\"}"}
{"id": "x8RgF2xQTj", "page_num": 55, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.11: On ImageNet, most methods consistently outperform the cross-entropy baseline on average, both ID and OOD for all severity levels when evaluating on the log probability proper scoring rule for correctness prediction. The EDL method performs best across all settings.\"}"}
{"id": "x8RgF2xQTj", "page_num": 56, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.12: On CIFAR-10, the deep ensemble is a consistently robust method both ID and OOD for all but one severity level when evaluating on the log probability proper scoring rule for correctness prediction.\"}"}
{"id": "x8RgF2xQTj", "page_num": 57, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"| Metric          | Method 1 | Method 2 | Method 3 | Method 4 | Method 5 | Method 6 |\\n|-----------------|----------|----------|----------|----------|----------|----------|\\n| Correctness AUROC | 1.0      | 0.15     | 0.76     | 0.60     | 0.80     | 0.37     |\\n| -ECE            |          |          |          |          |          | 0.03     |\\n| Correctness Brier |          |          |          |          |          | -0.09    |\\n| Correctness Log Prob. |          |          |          |          |          | 0.40     |\\n| Aleatoric Rank Corr. |          |          |          |          |          | 0.10     |\\n| AUAC            |          |          |          |          |          |          |\\n| Accuracy        |          |          |          |          |          |          |\\n| OOD AUROC       |          |          |          |          |          |          |\\n\\nFigure H.13: Spearman correlation of metric pairs across all methods and aggregators on the ImageNet validation set. The correlations are similar to those of the linear correlation in Fig. 6. Only some of the considered metrics have a very high rank correlation among methods on the ImageNet validation dataset: most capture different aspects of uncertainty methods.\"}"}
{"id": "x8RgF2xQTj", "page_num": 58, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.15: Spearman correlation variant of Fig. H.14.\\n\\n(a) Trained on 10% of CIFAR-10.\\n\\n(b) Trained on 50% of CIFAR-10.\\n\\n(c) Trained on 100% of CIFAR-10.\\n\\nFigure H.16: Gaussian kernel density estimates of the EDL method's aleatoric and epistemic uncertainties of the IT decomposition when trained on different CIFAR-10 portions.\\n\\nFigure H.17: Kendall and Gal Rank Correlation scores for different methods on ImageNet. This formulation uses the expected variance of the probability vectors as epistemic and the expected entropy as aleatoric uncertainty. We report the mean rank correlation across five seeds.\"}"}
{"id": "x8RgF2xQTj", "page_num": 59, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Original Samples Perturbed Samples\\n\\nFigure J.1: Easy ImageNet-ReaL cases with no human disagreement on the labels. OOD samples are of severity two.\"}"}
{"id": "x8RgF2xQTj", "page_num": 60, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure J.2: Hard ImageNet-ReaL cases with high human uncertainty (i.e., high disagreement among annotators on the correct label). OOD samples are of severity two.\\n\\nFigure J.3: Histograms of the label distributions of the ImageNet-ReaL validation set.\"}"}
{"id": "x8RgF2xQTj", "page_num": 61, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure J.4: Histograms of the label distributions of the CIFAR-10H validation set.\"}"}
{"id": "x8RgF2xQTj", "page_num": 62, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"1. Claims\\n\\nQuestion: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope?\\n\\nAnswer: [Yes]\\n\\nJustification: Each section title summarizes the findings and we clearly highlight which methods we test on which datasets.\\n\\nGuidelines:\\n- The answer NA means that the abstract and introduction do not include the claims made in the paper.\\n- The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.\\n- The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.\\n- It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.\\n\\n2. Limitations\\n\\nQuestion: Does the paper discuss the limitations of the work performed by the authors?\\n\\nAnswer: [Yes]\\n\\nJustification: In Section 5.\\n\\nGuidelines:\\n- The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.\\n- The authors are encouraged to create a separate \\\"Limitations\\\" section in their paper.\\n- The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.\\n- The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.\\n- The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.\\n- The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.\\n- If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.\\n- While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren't acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.\\n\\n3. Theory Assumptions and Proofs\\n\\nQuestion: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof?\\n\\nAnswer: [N/A]\"}"}
{"id": "x8RgF2xQTj", "page_num": 63, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"4. Experimental Result Reproducibility\\n\\nQuestion: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)?\\n\\nAnswer: [Yes]\\n\\nJustification: We provide open-source code, all weights and biases logs, and describe each method in detail in the appendix.\\n\\nGuidelines:\\n\\n- The answer NA means that the paper does not include experiments.\\n- If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.\\n- If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.\\n- Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general, releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.\\n- While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example:\\n  - (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm.\\n  - (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully.\\n  - (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset).\\n  - (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.\\n\\n5. Open access to data and code\\n\\nQuestion: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material?\"}"}
{"id": "x8RgF2xQTj", "page_num": 64, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Answer: [Yes]\\n\\nJustification: See above.\\n\\nGuidelines:\\n\u2022 The answer NA means that paper does not include experiments requiring code.\\n\u2022 Please see the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.\\n\u2022 While we encourage the release of code and data, we understand that this might not be possible, so \u201cNo\u201d is an acceptable answer. Papers cannot be rejected simply for not including code, unless this is central to the contribution (e.g., for a new open-source benchmark).\\n\u2022 The instructions should contain the exact command and environment needed to run to reproduce the results. See the NeurIPS code and data submission guidelines (https://nips.cc/public/guides/CodeSubmissionPolicy) for more details.\\n\u2022 The authors should provide instructions on data access and preparation, including how to access the raw data, preprocessed data, intermediate data, and generated data, etc.\\n\u2022 The authors should provide scripts to reproduce all experimental results for the new proposed method and baselines. If only a subset of experiments are reproducible, they should state which ones are omitted from the script and why.\\n\u2022 At submission time, to preserve anonymity, the authors should release anonymized versions (if applicable).\\n\u2022 Providing as much information as possible in supplemental material (appended to the paper) is recommended, but including URLs to data and code is permitted.\\n\\n6. Experimental Setting/Details\\n\\nQuestion: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results?\\n\\nAnswer: [Yes]\\n\\nJustification: The main training and implementation details are discussed in Appendix I and exact hyperparameters are available on the published code repository.\\n\\nGuidelines:\\n\u2022 The answer NA means that the paper does not include experiments.\\n\u2022 The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them.\\n\u2022 The full details can be provided either with the code, in appendix, or as supplemental material.\\n\\n7. Experiment Statistical Significance\\n\\nQuestion: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments?\\n\\nAnswer: [Yes]\\n\\nJustification: We run each experiment on five different seeds and report the min, mean, and max metric values.\\n\\nGuidelines:\\n\u2022 The answer NA means that the paper does not include experiments.\\n\u2022 The authors should answer \u201cYes\u201d if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.\\n\u2022 The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).\\n\u2022 The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)\\n\u2022 The assumptions made should be given (e.g., Normally distributed errors).\"}"}
{"id": "x8RgF2xQTj", "page_num": 33, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"the (discretized) epistemic part of the IT decomposition, which is the Jensen-Shannon Divergence (see Appendix C.1), or\\n\\\\[ u(x) = \\\\frac{1}{M} \\\\sum_{m=1}^{M} h_{\\\\text{KL}} \\\\tilde{\\\\pi}(x) \\\\pi(m), \\\\quad \\\\pi(m) \\\\sim q(\\\\pi|x) \\\\quad \\\\forall m \\\\in \\\\{1, \\\\ldots, M\\\\}, \\\\quad (45) \\\\]\\n\\nthe (discretized) epistemic part of the Bregman decomposition, which is the expected divergence from the central predictor (see Appendix B.1). As both aggregators are divergences, they capture disagreement among a set of models. Thus, they are usually cited to be aligned with epistemic uncertainty [37, 11, 57, 19, 17].\\n\\nKendall and Gal [23] propose the expected variance of the logit or probability vectors as a measure of epistemic uncertainty:\\n\\\\[ u(x) = \\\\frac{1}{C} \\\\sum_{c=1}^{C} \\\\left[ \\\\frac{1}{M} \\\\sum_{m=1}^{M} f(m) c(x)^2 - \\\\left( \\\\frac{1}{M} \\\\sum_{m=1}^{M} f(m) c(x) \\\\right)^2 \\\\right], \\\\quad (46) \\\\]\\n\\\\[ u(x) = \\\\frac{1}{C} \\\\sum_{c=1}^{C} \\\\left[ \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\pi(m) c(x)^2 - \\\\left( \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\pi(m) c(x) \\\\right)^2 \\\\right]. \\\\quad (47) \\\\]\\n\\nFor the HetClassNN method, we also calculate these estimates using the internal logits. Unless stated otherwise, we use the best-performing alternative for each distributional method in the benchmarks. For these methods, the model's prediction is always the most confident class of the BMA. For deterministic methods, we use their \\\"canonical\\\" uncertainty estimator introduced in Appendix A.1.\\n\\nD.4 Dempster-Shafer Value\\nThe Dempster-Shafer (D-S) value Sensoy et al. [46] is an outlier: it does not fit into any of the aforementioned aggregator categories. In the framework of Evidential Deep Learning (see Appendix A.2.9), the D-S value is inversely proportional to the Dirichlet strength\\n\\\\[ S(x) = \\\\sum_{c=1}^{C} \\\\beta(x)^c \\\\]\\nfor input \\\\( x \\\\in X \\\\):\\n\\\\[ u(x) = \\\\frac{1}{S(x)}. \\\\quad (48) \\\\]\\nInformally, the more evidence the predictor has, the less uncertain it is about the input \\\\( x \\\\in X \\\\).\\n\\nThe D-S value can be extended to non-evidential methods by treating the exponentiated logits as pseudo-counts for the individual classes and setting\\n\\\\[ \\\\beta(x) = \\\\exp(f(x)) + 1. \\\\quad (49) \\\\]\\nwhere the exponentiation is applied elementwise, and the \\\\( + \\\\) operator denotes vector addition.\\n\\nD.5 The Behavior of the Aggregators Does Not Align With What the Literature Suggests\\nIn this section, we collect per-aggregator results of specific methods to highlight that the best-performing aggregator often goes against what these aggregators intuitively aim to capture as described in Appendix D. Below, we provide a list of abbreviations used in the figures and connect them to the formulas in Appendix D. The \\\"it\\\" and \\\"b\\\" superscripts refer to the IT and Bregman decompositions, respectively. \\\"AU\\\", \\\"PU\\\", \\\"EU\\\", and \\\"B\\\" are shorthands for aleatoric, predictive, epistemic uncertainty, and Bregman uncertainty, respectively.\"}"}
{"id": "x8RgF2xQTj", "page_num": 34, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"where $\\\\pi(m) \\\\sim q(\\\\pi|x)$,\\n\\n$\\\\pi(m) = \\\\text{softmax}(f) \\\\quad \\\\forall m \\\\in \\\\{1, \\\\ldots, M\\\\}$.\\n\\nD.5.1 Aleatoric and predictive aggregators are often best for OOD detection\\n\\nLet us consider the binary prediction task of distinguishing ID and OOD samples. Fig. D.1 and Fig. D.2 show the per-aggregator results on the OOD detection task for the GP and MC Dropout methods, respectively. These figures highlight two important observations:\\n\\n1. the best aggregator for the task varies among different methods and\\n2. the disagreement-based epistemic uncertainty aggregators are often not the best for detecting OOD samples, against their original intuition.\\n\\nBoth results show that the choice of the estimator should be treated pragmatically based on performance because there are no intuitions that would consistently give the best estimator in each scenario.\\n\\nD.5.2 Methods are not equally sensitive to the choice of aggregator on correctness prediction\\n\\nLet us turn to the binary correctness prediction task. Fig. D.3 and Fig. D.4 show the per-aggregator results on the correctness prediction detection task for the HET-XL and Deep Ensemble methods, respectively. These figures show that HET-XL is considerably less sensitive to the choice of the\"}"}
{"id": "x8RgF2xQTj", "page_num": 35, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure D.1: OOD detection results of the GP method on the ImageNet validation dataset measured by the AUROC metric. The OOD detection performance of all aggregators increases steadily as we increase the severity of the perturbed half of the mixed dataset. However, the disagreement-based epistemic aggregators, $EU_{it}$ and $EU_{b}$, notably underperform the $AU_{it}$ aggregator, even though the epistemic aggregators are deemed more suitable for OOD detection in the literature.\\n\\nThe ranking of the aggregators is inconsistent between the two methods. The epistemic aggregators are among the worst-performing estimates for deep ensembles. One might say that this is in line with their intuitions, as they are being used ID, but on HET-XL, they perform as strongly as predictive estimators. This reinforces that intuitions should not be used to guide the aggregator choice and to rather treat it as a hyperparameter for optimal performance.\\n\\nE Goals of Disentanglement\\nWhat does it mean to have disentangled uncertainty estimators? Consider two estimators $u(a(x))$, $u(e(x))$ and ground-truth aleatoric and epistemic uncertainties $U(a(x))$, $U(e(x))$ for each input $x_i$. The estimators $u(a)$ and $u(e)$ are decorrelated if\\n\\n1. $u(a)$ has low rank correlation with $U(e)$ and\\n2. $u(e)$ has low rank correlation with $U(a)$.\\n\\nImportantly, $u(a)$ and $u(e)$ having a severely high rank correlation prohibits disentanglement. Further, they are well-performing if\\n\\n3. $u(a)$ has high rank correlation with $U(a)$ and\\n4. $u(e)$ has high rank correlation with $U(e)$.\"}"}
{"id": "x8RgF2xQTj", "page_num": 36, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure D.2: OOD detection results of the MC Dropout method on the ImageNet validation dataset measured by the AUROC metric. Contrarily to the GP method in Fig. D.1, the disagreement-based epistemic aggregators are on par with the predictive and aleatoric aggregators but lose their edge as the severity level increases.\\n\\nWe call uncertainty estimators disentangled when they are simultaneously decorrelated and well-performing.\\n\\nInspired by generalized bias-variance decompositions [42, 17], one may treat the training dataset $D$ as a random variable sampled from the generative process $p(x, y)$ and record the variability of the trained predictor under dataset change. Following the Bregman decomposition, one may then define\\n\\n$$U(e(x)) := \\\\mathbb{E}_{p(D)}[D_F(\\\\tilde{\\\\pi}(x) \\\\parallel \\\\pi D(x))]$$\\n\\n(64)\\n\\nwith the corresponding central predictor $\\\\tilde{\\\\pi}(x) = \\\\arg\\\\min\\\\limits_{z \\\\in \\\\Delta C} - \\\\mathbb{E}_{p(D)}[D_F(z \\\\parallel \\\\pi D(x))]$. As this is impossible to obtain in practical setups (or is too noisy to MC-approximate), we instead consider the proxy task of OOD detection for evaluating the disentanglement of aleatoric and epistemic uncertainties.\\n\\nThe above definition generalizes to any pair of different uncertainty sources, e.g., the Bregman bias and aleatoric uncertainties. The workaround of choosing a proxy task is not needed to evaluate the Bregman bias and aleatoric components' disentanglement.\\n\\n**F Design Choices**\\n\\nIn this section, we provide the rationale behind which metrics we report for each section.\"}"}
{"id": "x8RgF2xQTj", "page_num": 37, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"F.1 Disentanglement Experiments\\n\\nIn Appendix E, we motivate that disentangled uncertainty estimators for epistemic and aleatoric uncertainty should be decorrelated. To quantify this, we measure the Spearman rank correlation. The Spearman rank correlation can detect any monotonic dependency between two continuous variables. Hence, in this case it will allow us to detect whether the aleatoric uncertainties are always high when the epistemic uncertainties are high. We choose this over the Pearson correlation, as the Pearson correlation can only detect linear dependencies. Although we have seen in Fig. 1 that the dependencies are, in fact, often linear, we chose the Spearman correlation because it still works even if two estimators are beyond linear correlation.\\n\\nF.2 Epistemic Uncertainty Experiments\\n\\nWe use OOD detection as a prominent proxy task for epistemic uncertainty. In OOD detection, some samples are from the ID dataset, and some are OOD. In other words, the true uncertainty here surfaces in two classes, and we want the estimated uncertainty to be higher for OOD samples than for ID samples. Such cases of a binary outcome variable predicted with a continuous estimator in a given direction can be handled by the AUROC. It measures the probability that an OOD sample will have a higher estimated uncertainty than an ID sample.\\n\\nF.3 Aleatoric Uncertainty Experiments\\n\\nIn the aleatoric uncertainty experiments, we check whether the estimated uncertainty is predictive of the true aleatoric uncertainty. The estimated uncertainty is a continuous variable, as are the true aleatoric uncertainty values. Hence, we again need a correlation metric. We again decide on the Spearman rank correlation because it can detect non-linear, monotonic relationships, and there is no prior reason to believe that, e.g., the disagreement aggregator of ensembles as an uncertainty estimator should behave linearly the same as the aleatoric uncertainty ground-truths.\\n\\nThe aleatoric ground truths are, however, often equal to zero (when all annotators agree), and one can argue that the exact amount of disagreement between humans when it is non-zero is quite noisy. This is why we also report a binarized version of the aleatoric GT uncertainty in Appendix H.4. Now, the estimated uncertainty is continuous while the GT is binary (with a direction, i.e., that GT uncertain samples should have higher predicted uncertainties). So, like above, we measure the AUROC.\\n\\nG Main CIFAR-10 Experiments\\n\\nThis section mirrors Section 3 of the main paper on the CIFAR-10 dataset whenever they were not already studied in the main paper.\\n\\nG.1 Epistemic Uncertainty: Specialized Uncertainty Estimators detect OOD Inputs the Best\\n\\nWe use balanced mixtures of ID and OOD datasets to evaluate OOD detection performance as a proxy for epistemic uncertainty. OOD samples are perturbed ID samples with severity level two. The uncertainty estimators are tasked to predict which sample is OOD, i.e., OOD inputs should have higher uncertainty estimates. As for ImageNet in Section 3.2, the Mahalanobis method is by far the most performant in telling apart clean CIFAR-10 samples from perturbed ones. However, the ranking of the remaining methods is different from that of ImageNet.\\n\\nG.2 Aleatoric Uncertainty: No Method With Outstanding Performance\\n\\nLet us now benchmark how much the estimators predict aleatoric uncertainties on CIFAR-10. Since we use the entropy of human annotator label distributions as ground truths, this could also be considered the alignment with human uncertainties. Fig. G.2 shows drastically different results from the ImageNet results in Section 3.3. Correctness prediction is most aligned on average with a notably small min-max error bar. This is reasonable since ID, the aleatoric uncertainty of the sample determines the network's correctness the most.\"}"}
{"id": "x8RgF2xQTj", "page_num": 38, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"performed worse than the CE baseline on ImageNet, now perform among the best. This again shows that rankings from CIFAR-10 are not very informative of ImageNet rankings, especially because the ground-truth soft-label distributions on CIFAR-10H and ImageNet-ReaL-H were collected with slightly different protocols.\\n\\n**G.3 Predictive Uncertainty: Close to Saturation on CIFAR-10**\\n\\nFig. G.3 shows that most uncertainty estimators perform within \u00b10.02 of the cross-entropy baseline when predicting correctness ID, and modern methods like HET-XL do not outperform older methods like deep ensembles. The best methods are saturated at very high AUROCs of 0.95. The methods are also close to the CE baseline (but with a different ranking) when slightly altering the correctness metric to account for soft labels in Appendix H.1.\\n\\nThe saturation is even more pronounced on the abstained prediction task. All uncertainty methods apart from Mahalanobis obtain an AUC score greater than 0.99 in Fig. G.4. Practically, this means that one can obtain a close-to-perfect classification accuracy by abstaining from prediction on a tiny set of samples. This is largely because the classification accuracy on CIFAR-10 is very high, so the AUAC, even of methods with worse ID uncertainty estimation like Mahalanobis, is close to perfect.\\n\\n**G.4 Different Tasks Require Different Estimators**\\n\\nIn the previous sections, we have hinted at the fact that the performance across methods is very similar on some tasks and dissimilar on others. In this section, we investigate the correlation among the previous practical tasks using a correlation matrix. To construct the matrix, we consider all benchmarked methods with all uncertainty aggregators (see Appendix D) and calculate the Pearson (Fig. G.5) and Spearman correlations (Fig. G.6) of performances on different metrics. Similar to ImageNet, we find consistent clusters between the Pearson and Spearman correlations. One similarity to ImageNet is also that the OOD cluster repels the other clusters. However, the aleatoric cluster on CIFAR-10H forms a unique cluster, whereas it was correlated with the Accuracy cluster on ImageNet. We believe this is due to the different ways the soft labels were obtained on ImageNet-ReaL and CIFAR-10H.\\n\\n**H Further Practical Results**\\n\\n**H.1 Correctness Prediction**\\n\\n**H.1.1 ImageNet**\\n\\nWe show the correctness prediction performance of methods on OOD and mixed ID + OOD datasets in Fig. H.1. Like in the main paper, evidential deep learning methods, EDL and PostNet, dominate on the correctness prediction task across all severity levels and mixtures. The performance of Mahalanobis increases on mixed datasets as it can detect OOD samples well, which happen to also be incorrect more often.\\n\\n**H.1.2 CIFAR-10**\\n\\nWe show the correctness prediction performance of methods on OOD and mixed ID + OOD datasets in Fig. H.2. We observe a consistent degradation of performance across methods on both dataset types.\\n\\n**H.2 Performance Tendency for Increasing Severity**\\n\\nIn Section 3.6 of the main paper, we show the performance of MC Dropout when going OOD, claiming that it is prototypical for other methods. Figs. H.3 and H.4 show for CIFAR-10 and ImageNet, respectively, that MC Dropout is not an outlier and other methods show very similar generalization capabilities. The only outlier is Mahalanobis, which has a bad correctness AUROC regardless of whether it is ID or OOD. In Figs. 7a, H.3 and H.4, we normalize the metrics using the formula \\\\((\\\\text{metric} - \\\\text{rnd}) / (1 - \\\\text{rnd})\\\\) for direct comparability, where rnd is the base value that a random predictor achieves on that metric (0.5 for AUROC, \\\\(1 / C\\\\) for classification accuracy).\"}"}
{"id": "x8RgF2xQTj", "page_num": 39, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"H.3 OOD Detection\\n\\nH.3.1 ImageNet\\n\\nIn Appendix G.1, we hint at the fact that nearly all methods show a steady increase in OOD detection performance as we increase the severity of the perturbed half of the dataset. Fig. H.5 shows how the performance of each method changes as we increase the severity level. We can see a steady increase in OOD detection performance for all methods. However, the specialized OOD detector, Mahalanobis, benefits less than the other methods. In particular, at severity level three, shallow and deep ensembles overtake Mahalanobis and remain the best estimators from then on. At severity levels four and five, Mahalanobis falls below the CE baseline. This may be because Mahalanobis was trained to detect samples at severity level two and cannot generalize as well to higher severity levels as the other methods.\\n\\nH.3.2 CIFAR-10\\n\\nFig. H.6 shows the OOD detection performance of the benchmarked methods as we increase the severity level. We can see a steady increase in the performance for all methods. However, the relative distance of the specialized OOD detector, Mahalanobis, to the other methods shrinks. This could, however, be because it is the first to arrive at a higher, possibly saturated, performance.\\n\\nH.4 Ambiguous Input Detection\\n\\nIn this section, we consider an alternative task to evaluate the alignment of methods with aleatoric uncertainty. It is a binary prediction problem where the positive samples are ones with a non-deterministic GT soft label distribution, i.e., where annotators do not unanimously agree on the class of the sample. We evaluate the AUROC of uncertainty estimators on this binary task.\\n\\nH.4.1 ImageNet\\n\\nImageNet ambiguous input detection results are shown in Fig. H.7. Method rankings are different from the continuous rankings in Fig. 3b. This indicates that, on ImageNet, the uncertainty estimators also differ in their performance on ranking within the ambiguous images.\\n\\nH.4.2 CIFAR-10\\n\\nAmbiguous input detection results on CIFAR-10 are shown in Fig. H.8. Interestingly, the ranking of methods is the same as when using rank correlations in Fig. G.2, except for MC Dropout. This could indicate that, on CIFAR-10, most of the rankings in the rank correlations come from the methods telling apart samples with and without uncertainty, and that the ranking within the uncertain images does not make too much of a difference, or that none of the benchmarked methods (except possibly MC Dropout) is much better than the others in this.\\n\\nH.5 Abstained Prediction Results on the rAULC and E-AURC Metrics\\n\\nIn this section, we evaluate the benchmarked methods on the rAULC and E-AURC abstained prediction metrics that normalize the AUAC by the accuracy of the underlying model [43, 14].\\n\\nH.5.1 ImageNet\\n\\nImageNet rAULC and E-AURC results are shown in Fig. H.9. Even though both metrics are normalized by the underlying model's accuracy, this normalization is done in different ways, and the rankings of methods are quite different.\\n\\nH.5.2 CIFAR-10\\n\\nFig. H.10 shows CIFAR-10 rAULC and E-AURC results for abstained prediction. The ranking is similar to that of AUROC and non-normalized AUAC, as foreshadowed by the correlation matrix in Fig. G.5.\"}"}
{"id": "x8RgF2xQTj", "page_num": 40, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"H.6 Log Probability Proper Scoring Rule for Correctness Prediction\\n\\nH.6.1 ImageNet\\nResults on the log probability proper scoring rule are shown in Fig. H.11. The EDL method consistently outperforms all other methods across all severity levels. The performance of all methods stays roughly constant as we increase the severity.\\n\\nH.6.2 CIFAR-10\\nIn Fig. H.12, we present the methods' results on the log probability proper scoring rule considering the CIFAR-10 dataset. We find that the Deep Ensemble consistently outperforms the others ID and on OOD in all but one scenario.\\n\\nH.7 Correlation Matrices of Metrics on ImageNet\\nAll correlation matrices in this paper are constructed using the following procedure. First, the results of all methods on all metrics are collected. We consider three aggregators for all methods: $\\\\max \\\\bar{\\\\pi}$, $\\\\max \\\\tilde{\\\\pi}$, and $E[\\\\max \\\\pi]$, using the notation introduced in Appendix D.5. These are the only aggregators that are restricted to the $[0, 1]$ interval, which is needed for the ECE metric and the proper scoring rules for correctness prediction. On a particular metric, each (method, aggregator) pair gives rise to one score. For each metric pair, we calculate the Pearson and Spearman correlations between the corresponding rankings of (method, aggregator) pairs.\\n\\nFig. 6 of the main paper shows Pearson correlation results on ImageNet among eight metrics, showcasing two clusters of metrics. Fig. H.13 shows the Spearman correlation results. The results are stable across these different metrics.\\n\\nTo give a more comprehensive overview of metric correlations, Fig. H.14 shows an extended correlation matrix. This matrix contains further abstinence and aleatoric uncertainty metrics, coupled with proper scoring rules for the models' predictions. Most of the added metrics fall into the bottom-right cluster. Interestingly, even though the rAULC and E-AURC metrics both evaluate abstained prediction performance, only the latter is highly correlated with the AUAC metric. The rAULC metric is more aligned with correctness prediction (corr. $= 0.98$) and the top-left cluster. The rank correlation results are, again, similar but more pronounced; see Fig. H.15.\\n\\nH.8 Correlations of Rankings Between Datasets\\nTable H.1 shows the correlation of rankings on CIFAR-10 and ImageNet. Nine of thirteen metrics have substantially different rankings (rank. corr $< 0.5$). On nine of the thirteen metrics, the best-performing method also differs between the two datasets, indicating that performance on CIFAR-10 should not be taken as an estimate for ImageNet performance.\\n\\nH.9 Training on Different Training Dataset Fractions of CIFAR-10\\nThis subsection shows how the uncertainties reported by different distributional methods change as we vary the training dataset size. In particular, we train on $\\\\{10\\\\%, 50\\\\%, 100\\\\%\\\\}$ of CIFAR-10 from scratch and evaluate the trained models on the CIFAR-10 test set.\\n\\nTable H.2 shows that for the majority of the benchmarked methods, both the mean epistemic and aleatoric uncertainties of the IT decomposition decrease monotonically with an increasing training dataset size. Table H.3 shows the results using the estimators of Kendall and Gal [23], and Table H.4 shows the results of the Bregman decomposition. Fig. H.16 visualizes this tendency for the EDL method but also highlights the extreme correlation (0.9993) between the aleatoric and epistemic estimates.\\n\\nFig. H.17 shows that the severe rank correlations between the aleatoric and epistemic estimates remain when using the formulation of Kendall and Gal [23].\"}"}
{"id": "x8RgF2xQTj", "page_num": 41, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table H.1: Rank correlations of method rankings on different metrics for all combinations of methods and aggregators between CIFAR-10 and ImageNet. The rankings of approaches are considerably different between these two datasets.\\n\\n| Metric Rank Corr. CIFAR-10 vs. ImageNet | Correctness AUROC | ECE | Correctness Brier | Correctness Log Prob. | rAULC | E-AURC | AUAC | Accuracy | Aleatoric Log Prob. | Aleatoric Brier | Aleatoric Rank Corr. | Aleatoric AUROC | OOD AUROC |\\n|----------------------------------------|-------------------|-----|-------------------|----------------------|-------|--------|------|----------|-------------------|----------------|-------------------|---------------|-----------|\\n| Correctness AUROC                      | 0.503             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| ECE                                    | 0.659             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| Correctness Brier                      | 0.193             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| Correctness Log Prob.                  | 0.445             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| rAULC                                  | 0.554             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| E-AURC                                 | 0.482             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| AUAC                                   | 0.581             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| Accuracy                               | 0.263             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| Aleatoric Log Prob.                    | 0.484             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| Aleatoric Brier                        | 0.426             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| Aleatoric Rank Corr.                   | 0.013             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| Aleatoric AUROC                        | 0.290             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n| OOD AUROC                              | 0.368             |     |                   |                      |       |        |      |          |                   |                |                   |               |           |\\n\\nTable H.2: Aleatoric and epistemic uncertainty estimates of the IT decomposition for different methods and reduced training dataset fractions of CIFAR-10. We report the mean estimates over the test dataset.\\n\\n| Methods | Deep EDL | GP | HET | HETClassNN | HET-XL | Laplace | MC | Dropout | PostNet | Shallow | SNGP | SW | AG |\\n|---------|----------|----|-----|-----------|--------|---------|-----|---------|---------|--------|------|----|----|\\n| 10%     | 0.235    | 1.701 | 0.208 | 0.200 | 0.184 | 0.214 | 0.272 | 0.209 | 0.480 | 0.228 | 0.201 | 0.418 | 0.161 | 0.296 | 0.015 | 0.004 | 0.109 | 0.014 | 0.181 | ...\\n\\nI Training and Implementation Details\\n\\nFor both datasets, we train and evaluate on an NVIDIA GeForce RTX 2080 Ti GPU. We only use an NVIDIA A100 Tensor Core GPU for the construction of the Laplace approximation on ImageNet, owing to the VRAM requirements of this method. Our code is based on the timm library [56], extended with a wide range of uncertainty quantification methods, evaluation metrics, ImageNet-C and CIFAR-10C corruptions, and general soft label support. The exact hyperparameter settings for each method are available in the README.md file of our published GitHub repository.\\n\\nI.1 CIFAR-10\\n\\nFor CIFAR-10, we follow the augmentations and training schedules of the uncertainty_baselines GitHub repository [38]. In particular, for non-post-hoc methods, we train a Wide ResNet 28-10 [61] for 200 epochs with a step decay schedule at [60, 120, 160] epochs with decay rate 0.2 and one learning rate warmup epoch. The only exceptions are the SNGP-variants and the DDU method (250 epochs with a step decay schedule at [75, 150, 200] epochs) [32, 37]. We use stochastic gradient descent with momentum 0.9 and a batch size of 128. Our training augmentation comprises a random crop using padding 2 and a random flip on the vertical axis with probability 0.5. We use 2/5th of the CIFAR-10 test dataset as the validation split and the rest as the test split. The learning rate and weight decay hyperparameters are chosen by ten iterations of the Bayesian optimization scheme of Weights & Biases [3] based on the correctness prediction AUROC metric on the validation split. The additional hyperparameters of benchmarked methods are determined by either using values suggested by the original authors or including these in the hyperparameter sweep.\\n\\nI.2 ImageNet\\n\\nOn ImageNet, we fine-tune a pretrained ResNet 50 [20] using the resnet50.a1_in1k parameters from the timm library as initialization. We fine-tune for 50 epochs following a cosine learning rate schedule [33] using the LAMB optimizer [60] and a learning rate warmup period of 5 epochs. We use a batch size of 128 with 16 accumulation steps, resulting in an effective batch size of 2048,41.\"}"}
{"id": "x8RgF2xQTj", "page_num": 42, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"Table H.3: Aleatoric and epistemic uncertainty estimates of the formulation of Kendall and Gal for different methods and reduced training dataset fractions of CIFAR-10. This formulation uses the expected variance of the probability vectors as epistemic and the expected entropy as aleatoric uncertainty. We report the mean estimates over the test dataset.\\n\\n| Method          | Aleatoric | Epistemic |\\n|-----------------|-----------|-----------|\\n| Deep EDL        | 0.235     | 1.701     |\\n| GP              | 0.208     | 0.200     |\\n| HET             | 0.184     | 0.214     |\\n| HetClassNN      | 0.272     | 0.209     |\\n| HET-XL          | 0.480     | 0.228     |\\n| Laplace         | 1.064e-2  | 6.156e-3  |\\n| MC              | 8.322e-4  | 1.635e-4  |\\n| Dropout         | 6.030e-3  | 6.030e-3  |\\n| PostNet         | 0.058     | 0.056     |\\n| Shallow         | 2.484e-3  | 1.139e-3  |\\n| SNGP            | 1.855e-3  | 5.595e-5  |\\n| SW AG           | 2.885e-3  | 2.020e-5  |\\n| Deep EDL        | 1.743e-3  | 1.743e-3  |\\n| GP              | 0.058     | 0.056     |\\n| HET             | 2.484e-3  | 1.139e-3  |\\n| HetClassNN      | 1.855e-3  | 5.595e-5  |\\n| HET-XL          | 2.885e-3  | 2.020e-5  |\\n| Laplace         | 1.743e-3  | 1.743e-3  |\\n| MC              | 0.058     | 0.056     |\\n| Dropout         | 2.484e-3  | 1.139e-3  |\\n| PostNet         | 1.855e-3  | 5.595e-5  |\\n| Shallow         | 2.885e-3  | 2.020e-5  |\\n| SNGP            | 1.743e-3  | 1.743e-3  |\\n| SW AG           | 0.058     | 0.056     |\\n\\nTable H.4: Aleatoric and epistemic uncertainty estimates of the Bregman decomposition for different methods and reduced training dataset fractions of CIFAR-10. We report the mean estimates over the test dataset.\\n\\n| Method          | Aleatoric | Epistemic |\\n|-----------------|-----------|-----------|\\n| Deep EDL        | 0.258     | 4.03e-2   |\\n| GP              | 1.589e-2  | 4.016e-3  |\\n| HET             | 0.146     | 1.408e-2  |\\n| HetClassNN      | 0.211     | 0.131     |\\n| HET-XL          | 8.497e-3  | 7.965e-4  |\\n| Laplace         | 1.642e-2  | 0.379     |\\n| MC              | 0.235     | 1.701     |\\n| Dropout         | 0.208     | 0.200     |\\n| PostNet         | 0.077     | 0.050     |\\n| Shallow         | 1.476e-3  | 1.590e-6  |\\n| SNGP            | 0.039     | 0.084     |\\n| SW AG           | 0.079     | 0.080     |\\n| Deep EDL        | 0.055     | 0.118     |\\n| GP              | 0.058     | 0.056     |\\n| HET             | 1.476e-3  | 1.590e-6  |\\n| HetClassNN      | 0.039     | 0.084     |\\n| HET-XL          | 0.079     | 0.080     |\\n| Laplace         | 0.055     | 0.118     |\\n| MC              | 0.058     | 0.056     |\\n| Dropout         | 1.476e-3  | 1.590e-6  |\\n| PostNet         | 0.039     | 0.084     |\\n| Shallow         | 0.079     | 0.080     |\\n| SNGP            | 0.055     | 0.118     |\\n| SW AG           | 0.058     | 0.056     |\\n\\nfollowing Tran et al. [49]. The hyperparameters are chosen identically to those on CIFAR-10 (see Appendix I.1).\\n\\nTable I.1 and Table I.2 show statistics of the per-epoch runtime for each method on ImageNet and CIFAR-10, respectively. As Laplace, Mahalanobis, temperature scaling, and deep ensemble are post-hoc methods, their reported time comprises the construction of the method and its evaluation on various ID and OOD test datasets.\\n\\nJ Visualization of Images and Label Distributions\\n\\nThis section displays both easy (low human uncertainty) ImageNet samples in Fig. J.1 and hard (high human uncertainty) ones in Fig. J.2 using the ImageNet-ReaL labels and ImageNet-C perturbations. Figs. J.3 and J.4 give summary statistics of the label distributions of ImageNet-ReaL and CIFAR-10H, respectively.\"}"}
{"id": "x8RgF2xQTj", "page_num": 43, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"Table I.1: Summary of average per-batch forward times for the benchmarked methods on CIFAR-10.\\n\\nNote that the rankings for methods with similar forward times are subject to many external factors, such as the cluster node's state or the uptime of the allocated GPU. However, computationally costly methods consistently require more time. Methods are sorted by increasing mean per-batch forward time.\\n\\n| Method          | Mean (s) | Min (s) | Max (s) |\\n|-----------------|----------|---------|---------|\\n| Temperature     | 0.0614   | 0.0605  | 0.0629  |\\n| EDL             | 0.0626   | 0.0616  | 0.0634  |\\n| DUQ             | 0.0627   | 0.0619  | 0.0635  |\\n| CE Baseline     | 0.0628   | 0.0622  | 0.0635  |\\n| Corr. Pred.     | 0.0631   | 0.0625  | 0.0639  |\\n| HET             | 0.0635   | 0.0625  | 0.0640  |\\n| Shallow Ens.    | 0.0636   | 0.0620  | 0.0668  |\\n| Loss Pred.      | 0.0673   | 0.0619  | 0.0800  |\\n| Laplace         | 0.0668   | 0.0664  | 0.0677  |\\n| SNGP            | 0.0703   | 0.0665  | 0.0842  |\\n| GP              | 0.0698   | 0.0625  | 0.0870  |\\n| HET-XL          | 0.0728   | 0.0727  | 0.0730  |\\n| PostNet         | 0.0838   | 0.0812  | 0.0882  |\\n| Mahalanobis     | 0.7524   | 0.7215  | 0.8132  |\\n| DDU             | 0.2038   | 0.1543  | 0.2685  |\\n| Deep Ens.       | 0.3426   | 0.3426  | 0.3426  |\\n| HetClassNN      | 1.9995   | 1.9938  | 2.0077  |\\n| MC Dropout      | 2.0342   | 1.9832  | 2.1176  |\\n| SW AG           | 3.2236   | 2.8773  | 4.3338  |\\n\\nTable I.2: Summary of average per-batch forward times for the benchmarked methods on ImageNet.\\n\\nNote that the rankings for methods with similar forward times are subject to many external factors, such as the cluster node's state or the uptime of the allocated GPU. However, computationally costly methods consistently require more time. Methods are sorted by increasing mean per-batch forward time.\\n\\n| Method          | Mean (s) | Min (s) | Max (s) |\\n|-----------------|----------|---------|---------|\\n| HET             | 0.0485   | 0.0464  | 0.0538  |\\n| HET-XL          | 0.0576   | 0.0564  | 0.0596  |\\n| Loss Pred.      | 0.0597   | 0.0585  | 0.0622  |\\n| Corr. Pred.     | 0.0598   | 0.0591  | 0.0606  |\\n| CE Baseline     | 0.0610   | 0.0592  | 0.0637  |\\n| Shallow Ens.    | 0.0651   | 0.0590  | 0.0882  |\\n| EDL             | 0.0764   | 0.0739  | 0.0790  |\\n| Temperature     | 0.0765   | 0.0671  | 0.1039  |\\n| GP              | 0.0818   | 0.0795  | 0.0836  |\\n| PostNet         | 0.0846   | 0.0816  | 0.0942  |\\n| SNGP            | 0.0924   | 0.0861  | 0.1168  |\\n| Laplace         | 0.3933   | 0.3837  | 0.4005  |\\n| Deep Ens.       | 0.4822   | 0.4822  | 0.4822  |\\n| Mahalanobis     | 1.5409   | 1.4934  | 1.6099  |\\n| DDU             | 2.3874   | 2.2113  | 2.5266  |\\n| MC Dropout      | 2.1183   | 2.0455  | 2.3026  |\\n| HetClassNN      | 2.2859   | 2.0830  | 2.4543  |\\n| SW AG           | 2.9623   | 2.8433  | 3.1278  |\"}"}
{"id": "x8RgF2xQTj", "page_num": 44, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"(b) HET-XL correctness AUROC on OOD data of severity level one.\\n\\n(c) HET-XL correctness AUROC on OOD data of severity level two.\\n\\n(d) HET-XL correctness AUROC on OOD data of severity level three.\\n\\n(e) HET-XL correctness AUROC on OOD data of severity level four.\\n\\n(f) HET-XL correctness AUROC on OOD data of severity level five.\\n\\n(g) HET-XL correctness AUROC on mixed ID and OOD data of severity level one.\\n\\n(h) HET-XL correctness AUROC on mixed ID and OOD data of severity level two.\\n\\n(i) HET-XL correctness AUROC on mixed ID and OOD data of severity level three.\\n\\n(j) HET-XL correctness AUROC on mixed ID and OOD data of severity level four.\\n\\n(k) HET-XL correctness AUROC on mixed ID and OOD data of severity level five.\\n\\n(D-S) AUROC \u2191\\n\\nIt is noted that the disagreement-based epistemic aggregators perform poorly on ID.\\n\\nThe disagreement-based epistemic aggregators, on the ImageNet validation dataset. The disagreement-based epistemic aggregators, AUROC \u2191\\n\\nEstimate Ground Truth\\n\\nAUC of 0.5\"}"}
{"id": "x8RgF2xQTj", "page_num": 45, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure D.4: For the Deep Ensemble method, the disagreement-based epistemic aggregators underperform on OOD data of severity level one. The agreement-based epistemic aggregators underperform on OOD data of severity level two. The disagreement-based aleatoric aggregators underperform on OOD data of severity level three. The agreement-based aleatoric aggregators underperform on OOD data of severity level four. The agreement-based epistemic aggregators underperform on OOD data of severity level five.\"}"}
{"id": "x8RgF2xQTj", "page_num": 46, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure G.1: OOD detection results on the CIFAR-10 test set, measured by the AUROC metric. OOD samples are perturbed by CIFAR-10C corruptions of severity level two. Mahalanobis, a method specially trained for this task, has an edge over the remaining methods.\\n\\nFigure G.2: Rank correlation with the soft input-conditional label distributions of CIFAR-10H corresponding to labeler votes.\\n\\nFigure G.3: On ID CIFAR-10 samples, the performance of methods on predicting correctness is close to saturated, although the more expensive distributional methods tend to perform better than the cheaper deterministic methods.\\n\\nFigure G.4: ID abstained prediction results using the AUAC metric on the CIFAR-10 test dataset. On ID CIFAR-10 samples, most methods solve the abstinence task almost perfectly. This even holds for Mahalanobis. This is largely because the accuracy on CIFAR-10 is very high, and AUAC depends on it.\"}"}
{"id": "x8RgF2xQTj", "page_num": 47, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"|                     | Correctness AUROC | -ECE | Correctness Brier | Correctness Log Prob. | rAULC | -E-AURC | Aleatoric Rank Corr. | Aleatoric AUROC | Accuracy | Aleatoric Log Prob. | Aleatoric Brier | AUAC | OOD AUROC |\\n|---------------------|-------------------|------|-------------------|-----------------------|-------|---------|-----------------------|----------------|----------|--------------------|----------------|------|-----------|\\n| Figure G.5: Pearson correlation of metric pairs calculated over all (method, aggregator) pairs on CIFAR-10. | 0.60 | 0.85 | 0.98 | 0.40 | 0.37 | 0.85 | 0.70 | 0.84 | 1.00 | 0.53 | 0.63 | 0.27 | 0.42 | 0.32 | 0.60 | 0.58 | 0.63 | 0.71 | 0.33 | 0.29 | 0.44 | 0.53 | 1.00 |\\n| Figure G.6: Spearman rank correlation of metric pairs calculated over all (method, aggregator) pairs on CIFAR-10. The clusters are similar to those of the linear correlation in Fig. G.5, although there are more cases of higher correlations between the clusters. This discrepancy can be attributed to the saturation of methods on various metrics on CIFAR-10. |\"}"}
{"id": "x8RgF2xQTj", "page_num": 48, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.1: On ImageNet, the evidential deep learning methods, EDL and PostNet, dominate on the correctness prediction task. The performance of Mahalanobis stably increases on mixed datasets, as models perform worse on OOD images than on ID ones, and it can detect OOD samples well.\"}"}
{"id": "x8RgF2xQTj", "page_num": 5, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 3: Performance of uncertainty quantification methods on epistemic (left) and aleatoric (right) uncertainty tasks on the ImageNet validation dataset. The behavior of deep ensembles is just one example. Figure 2a shows that aleatoric and epistemic estimates obtained via the IT decomposition are highly rank correlated ($\\\\text{rank corr.} \\\\in [0.78, 0.99]$) for all distributional methods that we benchmark. This holds similarly on CIFAR-10 (Figure 2b), as well as for the Bregman decomposition (Appendix B) and also does not considerably lower when we artificially add more epistemic uncertainty into the dataset, see Appendix C.2. Often, the components are even linearly correlated; see the Pearson correlation results in Appendix C.4.\\n\\nA part of these correlations is inevitable: On ImageNet, regions with aleatorically uncertain images are undersampled compared to regions without aleatoric uncertainty and thus also more epistemically uncertain (see Fig. J.3). This means that ImageNet has a level of inevitable correlation between epistemic and aleatoric uncertainty estimates. We quantify this inevitable correlation via the rank correlation between the GT aleatoric uncertainty (i.e., the entropy of the GT label distribution) and the models' epistemic uncertainty given by the Bregman decomposition in Appendix B.4. This gives levels of inevitable correlation for the Bregman decomposition that are at most 0.45. Further, we show in Section 3.3 that there are pairs of uncertainty estimators where one performs well on aleatoric and the other on epistemic uncertainty, with a notably low rank correlation of 0.15$\\\\pm$0.01. Thus, the severe correlations exceeding 0.78 are shortcomings of the decomposition formulas and not inherent properties of the ImageNet dataset.\\n\\nIn conclusion, decomposition formulas of various forms applied to various second-order distributions produce uncertainty estimators that are so highly correlated that they hardly capture the different individual notions of aleatoric and epistemic uncertainty that they are intended to capture.\\n\\n3.2 Epistemic Uncertainty: Specialized Uncertainty Estimators Detect OOD Inputs the Best\\n\\nIf decomposition formulas cannot yield epistemic and aleatoric uncertainty estimates, which methods can? For the rest of the paper, we widen the scope and include not only the aleatoric and epistemic estimators defined by the decomposition formulas but also arbitrary aggregators of second-order distributions, as well as deterministic methods. This section tests which of these estimators represents epistemic uncertainty, measured by an out-of-distribution (OOD) detection task [17, 37]. We create a 50/50 dataset of in-distribution (ID) and OOD samples, with ID samples getting class 0 and OOD samples getting class 1. We quantify via a binary classification AUROC if uncertainty estimates are higher on OOD samples than on ID samples. We use ImageNet-C [21] with all of its corruptions of severity level two as OOD data. The severity level two is far enough out-of-distribution to deteriorate the ImageNet accuracy by 27% (Section 3.6).\\n\\nFig. 3a shows that the methods differ greatly in their ability to detect OOD samples and, thus, in their alignment with epistemic uncertainty. The Mahalanobis method performs best. This is likely because it is the only method trained specifically for OOD detection with ImageNet-C corruptions of severity level two. We find its advantage already vanishes when changing the task to severity level three (Appendix H.3). A method with a similar latent density intuition and distance-awareness induced by spectral normalization, DDU, is the worst at telling ID and OOD samples apart (AUROC $= 0.675$).\\n\\nAdditionally, the best-performing aggregators for the second-order distributions, the performance of which Fig. 3a shows, are often not the disagreement-based aggregators that decomposition formulas propose for epistemic uncertainty tasks (Appendix D.5). These insights highlight that the practical\"}"}
{"id": "x8RgF2xQTj", "page_num": 6, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"(a) ID correctness prediction results measured by the AUROC w.r.t. model correctness. The evidential deep learning methods, EDL and PostNet, capture predictive uncertainty remarkably well.\\n\\n(b) Abstained prediction results using the AUAC metric. Most methods are within a $0.03$ AUAC band. EDL and PostNet lose their advantage as their accuracy is lower.\\n\\nFigure 4: ID predictive uncertainty evaluation on the ImageNet validation dataset. The Mahalanobis method is a specialized OOD detector that cannot differentiate between ID samples.\\n\\ntailoring of uncertainties to a specific uncertainty task of interest, as done by the Mahalanobis method, weighs more than high-level intuitions, which, e.g., decomposition formulas are based on.\\n\\n3.3 Aleatoric Uncertainty: No Method With Outstanding Performance\\n\\nThe previous experiment isolated the epistemic capabilities of uncertainty estimates. We now evaluate how well the benchmarked models predict aleatoric uncertainty. We follow Tran et al. [49] and Kirchhof et al. [24, 25] and use the disagreement of human annotators as ground truths for aleatoric uncertainty. ImageNet-ReaL [2] (and CIFAR-10H [41]) queries multiple annotators for labels on each image. We showcase some examples in Appendix J. We use the entropy of the soft-label distributions per image as GT aleatoric uncertainties. We then calculate the rank correlation between the methods' uncertainty estimates and the GT label entropies across all images. We do not use an AUROC here because the GT values are continuous, but provide binarized AUROCs for direct comparability of aleatoric and epistemic uncertainty performance results in Appendix H.4.\\n\\nFig. 3b shows that almost all methods lie within a correlation of $[0.37, 0.46]$. Note that the best achievable rank correlation is not one since the GT aleatoric data contains ties. While it is unknown how high the best achievable rank correlation is, the fact that there are consistent improvements across the methods hints at the fact that further performance gains are far from saturated. The method that sticks out on the low end of the spectrum is Mahalanobis, which is uncorrelated with the GT aleatoric uncertainty. This is, in fact, a strength: Mahalanobis estimates reflect epistemic uncertainty while being non-informative of aleatoric uncertainty. Combining this with a second estimator for aleatoric uncertainty can pave the way for a pair of disentangled uncertainty estimators. As a simple start, combining it with the CE baseline achieves a low rank correlation of $0.15 \\\\pm 0.01$ between the two. We see this as a promising pathway to disentangled uncertainty estimators in the future.\\n\\nWith the aleatoric and epistemic tasks introduced, we can take a final look at the epistemic and aleatoric estimators proposed by the IT decomposition. In Appendix C.3, using them instead of the best ones reduces Shallow Ensemble's performance, which was the best distributional method on OOD detection, to the CE baseline level. It again shows that the theoretically intuitive estimators underperform in practice.\\n\\n3.4 Predictive Uncertainty: The Best Method Depends on the Precise Task\\n\\nLet us now broaden the view beyond disentanglement to benchmark how well uncertainty estimators solve other practically relevant tasks. We start with correctness prediction, where the AUROC quantifies whether wrong predictions generally have higher uncertainties than correct predictions. Fig. 4a shows that most uncertainty estimators perform within $\\\\pm 0.014$ of the cross-entropy baseline when predicting correctness. Modern methods like HET-XL do not outperform older methods like the Deep Ensemble or MC Dropout. Evidential deep learning methods, like EDL and PostNet, are an exception to this. They are considerably better at predicting correctness. This also holds when mixing the datasets with OOD data in Appendix H.1. However, their better performance comes at a cost. Evidential methods have a trade-off between the quality of their uncertainty estimates and the\"}"}
{"id": "x8RgF2xQTj", "page_num": 7, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"When demanding similar classification accuracies, we find that they lose their advantage. A related task to correctness prediction is abstained prediction. It involves refusing to predict on the $x\\\\%$ most uncertain examples and calculating the model's accuracy on the remaining samples. We use the Accuracy-Coverage (AC) curve [15] that plots increasing fractions of abstained samples from $0\\\\%$ to $100\\\\%$ on the $x$-axis against the accuracy on the non-abstained portion. Following the conventions of Galil et al. [14], we denote this metric as the area under the accuracy coverage curve (AUAC). In Appendix H.5, we also evaluate methods on the rAULC and E-AURC metrics that normalize the AUAC by the accuracy of the underlying model [43, 14].\\n\\nFig. 4b shows that this predictive uncertainty task is saturated. All uncertainty methods apart from Mahalanobis obtain an AUAC score greater than 0.91, and only a few outperform the CE baseline. Since the AUAC depends on accuracy, EDL and PostNet perform worse in this metric, although both AUROC and AUAC target predictive uncertainty. This demonstrates that practitioners need to carefully specify an uncertainty estimator's overall goal. Designing a system that can detect errors is not the same as designing a system that reduces errors.\\n\\nThe same holds for calibration. While this is also a predictive uncertainty task, the goal is slightly different. It is not to provide a good ranking of uncertain images but to give correctness probabilities that are close to the true frequentist probabilities.\\n\\nIn conclusion, the predictive uncertainty results show that the exact definition of the task one intends to solve with uncertainty estimators matters because different estimators specialize in different notions of uncertainty.\\n\\n### Table: Figure 5 - Expected calibration error on ImageNet\\n\\n| Method          | ECE \u2193 |\\n|-----------------|-------|\\n| Laplace         | 0.09  |\\n| HetClassNN      | 0.75  |\\n| DDU             | 0.54  |\\n| MC Dropout      | 0.76  |\\n| SW AG           | 0.36  |\\n| Deep Ens.       | 0.16  |\\n| Temperature     | 0.10  |\\n| Shallow Ens.    | 0.03  |\\n| PostNet         | 0.24  |\\n| EDL             | 0.75  |\\n| HET-XL          | 0.64  |\\n| HET             | 0.73  |\\n| SNGP            | 0.16  |\\n| CE Baseline     | 0.10  |\\n| Mahalanobis     | 0.03  |\\n| GP              | 0.24  |\\n| Corr. Pred.     | 0.75  |\\n| Loss Pred.      | 0.64  |\\n\\n### Table: Figure 6 - The Pearson correlation of metric pairs across methods and aggregators on the ImageNet validation dataset is only medium. Most capture different aspects of uncertainty methods.\\n\\nThe previous sections suggest that uncertainty tasks are not all solved by the same best method. In this section, we investigate how the performance of methods on different tasks is correlated. In particular, we use the previous practical tasks along with further popular metrics and measure the between-task Pearson correlations of the performance of all benchmarked methods. The correlations of the rankings of the methods are similar; see Appendix H.7.\\n\\nFig. 6 shows barely any recognizable clusters, except that AUAC is confounded by accuracy. While all other metrics, except OOD AUROC, correlate to some extent, their correlation is not perfect, once again demonstrating that the performances of the uncertainty estimators depend on the exact task. These findings further corroborate that there is no one-fits-all uncertainty estimator, but there are multiple tasks with nuanced differences to which an uncertainty estimator can be tailored.\"}"}
{"id": "x8RgF2xQTj", "page_num": 8, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Fig. 7a shows the correctness prediction AUROC, AUAC, and model accuracy as we increasingly perturb the ImageNet validation samples and go OOD. The correctness prediction performance in terms of the AUROC remains almost constant, whereas the accuracy degrades to less than 25% at severity level five. The AUAC performance degrades together with accuracy, which is a fundamental property of the metric itself since the area under the accuracy is lower-bounded by the baseline accuracy. The AUAC gain (i.e., $\\\\text{AUAC} - \\\\text{Accuracy}$) increases with the perturbation severity, showing that the uncertainty estimators even become relatively better on the abstinence task as the severity increases. The tendencies are maintained when we normalize the metrics (solid lines) according to their random predictive performance (see Appendix H.2 for details). This observation holds for all methods except Mahalanobis, see Appendix H.2. Figure 8a shows that the methods' ECE also remains robust to perturbations on ImageNet. These results underline the trustworthiness of existing uncertainty quantification methods as we go OOD on ImageNet.\"}"}
{"id": "x8RgF2xQTj", "page_num": 1, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Benchmarking Uncertainty Disentanglement: Specialized Uncertainties for Specialized Tasks\\n\\nB\u00e1lint Mucs\u00e1nyi\\nUniversity of T\u00fcbingen\\nb.h.mucsanyi@gmail.com\\n\\nMichael Kirchhof\\nUniversity of T\u00fcbingen\\n\\nSeong Joon Oh\\nUniversity of T\u00fcbingen\\nT\u00fcbingen AI Center\\n\\nAbstract\\nUncertainty quantification, once a singular task, has evolved into a spectrum of tasks, including abstained prediction, out-of-distribution detection, and aleatoric uncertainty quantification. The latest goal is disentanglement: the construction of multiple estimators that are each tailored to one and only one source of uncertainty. This paper presents the first benchmark of uncertainty disentanglement. We reimplement and evaluate a comprehensive range of uncertainty estimators, from Bayesian over evidential to deterministic ones, across a diverse range of uncertainty tasks on ImageNet. We find that, despite recent theoretical endeavors, no existing approach provides pairs of disentangled uncertainty estimators in practice. We further find that specialized uncertainty tasks are harder than predictive uncertainty tasks, where we observe saturating performance. Our results provide both practical advice for which uncertainty estimators to use for which specific task, and reveal opportunities for future research toward task-centric and disentangled uncertainties. All our reimplementations and Weights & Biases logs are available at https://github.com/bmucsanyi/untangle.\\n\\n1 Introduction\\nWhen uncertainty quantification methods were first pioneered for deep learning [12, 29], their task was simple: giving one total uncertainty estimate. The recent demand for trustworthy machine learning [36] created new requirements, mostly centering around disentangling the above predictive uncertainty into aleatoric (data-inherent and irreducible) and epistemic (model-centric and reducible) components [11, 52, 47]. Such disentangled estimators are needed for multiple modern applications: Out-of-distribution detection needs to filter unseen samples with high epistemic uncertainty without being confounded with seen samples with high aleatoric uncertainty [37], and active learning uses individual aleatoric and epistemic estimates to select the most efficient samples to learn from [28, 35].\\n\\nHowever, recent advances towards such disentangled uncertainties are primarily theoretical and supported by only small-scale experiments [47, 53, 37]. Conversely, larger-scale benchmarks evaluate methods w.r.t. only one uncertainty component and do not test for undesirable side effects on other components [13, 40]. There is currently no study that evaluates which component(s) each method captures in practice and which it does not \u2013 which is often contrary to their original intuition.\\n\\nOur work provides a comprehensive benchmark of the vast recent landscape of uncertainty methods and tasks. We reimplement nineteen uncertainty quantification methods in up to fourteen ways and evaluate each on thirteen practically defined tasks on ImageNet-1k [10] and CIFAR-10 [27]. This includes recent information-theoretical and Bregman decomposition formulas that intend to disentangle total uncertainties into aleatoric and epistemic components [57, 42, 11]. We reveal that none of the existing approaches achieve disentanglement in practice. Most proposed pairs of estimators are highly internally correlated (rank corr. \u2265 0.78) and fail to unmix aleatoric and epistemic uncertainty (Section 3.1). We also find that specialized tasks (Sections 3.2 and 3.3) are harder to solve.\"}"}
{"id": "x8RgF2xQTj", "page_num": 2, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 1: Decomposition formulas like in Eq. (1) decompose second-order distributions into individual estimates for epistemic and aleatoric uncertainties. However, we find that the estimates are internally highly correlated. The density plot on the right shows this for the epistemic and aleatoric uncertainty estimates obtained from decomposing deep ensemble uncertainties on ImageNet-1k. This means that they capture the same notion of uncertainty in practice as opposed to two disentangled ones.\\n\\nBased on these insights, we uncover a promising path for future disentangled uncertainty estimates: combining individual estimators that strongly reflect one type of uncertainty while being (almost) unrelated to the other.\\n\\nThese findings emphasize the importance of clearly specifying the task one wants to solve with an uncertainty estimator and tailoring the estimator to it. We anticipate that our quantitative insights will drive the field toward developing more disentangled and specialized uncertainty estimators.\\n\\n2 Benchmarked Methods\\n\\nThis section provides an overview of the benchmarked uncertainty estimators and disentanglement formulas. We reimplement all nineteen methods and explain implementation details in Appendix A.\\n\\n2.1 Uncertainty Quantification Methods\\n\\nWe consider a classification setting with a discrete label space of $C$ classes. On top of the eight supervised uncertainty quantification methods from Kirchhof et al. [25], we reimplement another eleven methods to encourage diversity and general applicability of our findings. Below, we categorize the benchmarked approaches into distributional and deterministic methods.\\n\\n2.1.1 Distributional methods\\n\\nDistributional methods model a second-order predictive distribution $q(\\\\pi | x)$ over class probability vectors $\\\\pi \\\\in \\\\Delta^{C-1}$ for an input $x \\\\in X$. For example, $q(\\\\pi | x)$ can correspond to a Bayesian posterior on the simplex, $p(\\\\pi | x, D) \\\\propto p(D | \\\\theta)p(\\\\theta)$ when training on dataset $D$. Spectral-Normalized Gaussian Processes (SNGP) [32] represent the $q(\\\\pi | x)$ distributions by approximating a Gaussian process (GP) over the classifier output, aided by spectral normalization. We also benchmark the last-layer GP without spectral normalization. The last-layer Laplace Approximation [8] and Stochastic Weight Averaging \u2013 Gaussian (SWAG) [34] both model a Gaussian parameter distribution in a post-hoc fashion that induces the $q(\\\\pi | x)$ distributions. The Laplace approximation does so by fitting the parameter-space Gaussian w.r.t. the local curvature around the MAP estimate, whereas SWAG samples model weights via checkpointing and fits an empirical distribution. Similarly, Heteroscedastic Classifiers (HET) [5] and Latent Heteroscedastic Classifiers (HET-XL) [6] predict a heteroscedastic Gaussian distribution over the logits and pre-logit embeddings, respectively. Evidential deep learning methods for classification [45, 4] directly learn a...\"}"}
{"id": "x8RgF2xQTj", "page_num": 3, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Dirichlet distribution over the output probability vectors. Following Ulmer et al. [50], we refer to the method of Sensoy et al. [45] as Evidential Deep Learning (EDL) and that of Charpentier et al. [4] as the Posterior Network (PostNet).\\n\\nMC Dropout [12, 48] and Deep Ensemble [29] do not construct second-order predictive distributions \\\\( q(\\\\pi|x) \\\\) explicitly. Instead, they sample from them by \\\\( M \\\\) repeated forward passes with randomly switched off activations or by training \\\\( M \\\\) models, respectively. The Heteroscedastic Classification Neural Network (HetClassNN) [23] uses the uncertainties from MC Dropout for epistemic uncertainty and models an input-conditional heteroscedastic logit variance for aleatoric uncertainty. The Shallow Ensemble [31] is a lightweight approximation of the Deep Ensemble with a shared backbone and \\\\( M \\\\) output heads.\\n\\nPractical tasks like threshold-based rejection often need a scalar uncertainty value \\\\( u(x) \\\\in \\\\mathbb{R} \\\\) instead of a second-order predictive distribution \\\\( q(\\\\pi|x) \\\\). To this end, uncertainty aggregators compile the above distributions into scalar uncertainty estimates. Several methods exist for this aggregation, such as calculating the Bayesian Model Average (BMA) \\\\( \\\\bar{\\\\pi}(x) := \\\\mathbb{E}_{q(\\\\pi|x)}[\\\\pi] \\\\) and using its entropy as the uncertainty estimate \\\\( u(x) \\\\) or quantifying the variance of \\\\( q(\\\\pi|x) \\\\), as often seen in ensembles. While many distributional methods are proposed with a specific aggregator, we show in Appendix D.5 that they do not always behave as expected and limit performance. To remove this confounder, we consider fourteen aggregators (Appendix D) for distributional methods and use the best-performing one.\\n\\n2.1.2 Deterministic Methods\\n\\nDeterministic methods [43] directly output scalar uncertainty estimates \\\\( u(x) \\\\in \\\\mathbb{R} \\\\) instead of modeling a second-order predictive distribution \\\\( q(\\\\pi|x) \\\\) over class probability vectors. Loss Prediction [59, 28, 25] employs an additional MLP head for \\\\( u(x) \\\\) that estimates the loss of the network's prediction \\\\( \\\\pi(x) \\\\in \\\\Delta_{C-1} \\\\), reflecting a notion of (in-)correctness. Correctness Prediction is a special variant for classification where \\\\( u(x) \\\\) predicts how likely the predicted class \\\\( \\\\hat{y} := \\\\text{arg max}_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} \\\\pi_c(x) \\\\) is to be the correct class \\\\( y \\\\), i.e., \\\\( p(\\\\hat{y} = y|x) \\\\).\\n\\nDeterministic Uncertainty Quantification (DUQ) [53] learns a latent mixture-of-RBF density on the training dataset and outputs as \\\\( u(x) \\\\) how close an input's embedding is to the mixture means. The Mahalanobis method [30] builds a similar latent mixture of Gaussians in a post-hoc fashion. It also perturbs the inputs adversarially to separate in-distribution (ID) and out-of-distribution (OOD) samples. The Deep Deterministic Uncertainty (DDU) method [37] combines the spectral normalization of SNGPs with the latent density of the Mahalanobis method. Temperature Scaling [18] post-hoc calibrates the predicted probability vectors with a temperature scalar.\\n\\nAs a Baseline, we use a deterministic single-point network trained with the cross-entropy loss.\\n\\n2.2 Uncertainty Decomposition Formulas\\n\\nSo far, we only considered uncertainty estimators that (sometimes after aggregating) output a single estimate \\\\( u(x) \\\\). A second strain of literature outputs not only one estimate but decomposes the \\\\( q(\\\\pi|x) \\\\) of distributional methods into multiple estimators that each intend to quantify one source of uncertainty, such as epistemic and aleatoric uncertainty [22, 36]. We benchmark two prominent approaches to obtain such pairs of estimators: the information-theoretical (IT) [11, 37, 57] and the Bregman decomposition [42, 19, 17]. In the main paper, we focus on the IT decomposition due to its widespread use. The definition and results of the Bregman decomposition are shown in Appendix B.\\n\\nThe IT decomposition decomposes the entropy of the predictive distribution \\\\( p(y|x) = \\\\int p(y|x, \\\\pi) \\\\, d\\\\pi \\\\) into an aleatoric and an epistemic component:\\n\\n\\\\[\\nH_p(y|x) = \\\\underbrace{E_{q(\\\\pi|x)}[H_p(y|x, \\\\pi)]}_{\\\\text{predictive}} + \\\\underbrace{I_p(y, \\\\pi|x)}_{\\\\text{aleatoric} + \\\\text{epistemic}},\\n\\\\]\\n\\nwhere \\\\( p(y|x, \\\\pi) = \\\\text{Cat}(y; \\\\pi) = \\\\pi_y \\\\), \\\\( p(y, \\\\pi|x) = p(y|x, \\\\pi) q(\\\\pi|x) \\\\), \\\\( H_p(y|x) \\\\) is the entropy, and \\\\( I_p(y, \\\\pi|x) \\\\) is the mutual information. Intuitively, the aleatoric component represents the uncertainty due to the random noise in the data, while the epistemic component represents the uncertainty due to the limitations of the model.\"}"}
{"id": "x8RgF2xQTj", "page_num": 4, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":true,\"natural_text\":\"| Method                      | Rank Corr. \u2193 |\\n|-----------------------------|--------------|\\n| Shallow Ens.                |              |\\n| PostNet                     |              |\\n| SW AG                       |              |\\n| HetClassNN                  |              |\\n| MC Dropout                  |              |\\n| Deep Ens.                   |              |\\n| HET                         |              |\\n| Laplace                     |              |\\n| HET-XL                      |              |\\n| SNGP                        |              |\\n| GP                          |              |\\n| EDL                         |              |\\n\\n(a) ImageNet results. All twelve distributional methods exhibit a high rank corr. \\\\(\\\\geq 0.78\\\\).\\n\\n(b) CIFAR-10 results. Eleven out of twelve distributional methods exhibit a strong rank corr. \\\\(\\\\geq 0.88\\\\).\\n\\nFigure 2: Rank correlation between the aleatoric and epistemic estimates obtained by the IT decomposition on ImageNet (left) and CIFAR-10 (right). The two uncertainty components are strongly correlated for most methods, violating a necessary condition of their disentanglement.\\n\\nThe key goal behind these decompositions is uncertainty disentanglement: The aleatoric component should capture aleatoric and only aleatoric uncertainty, and the epistemic estimator should reflect epistemic and only epistemic uncertainty. In particular, this entails that both components need to be sufficiently uncorrelated. See Appendix E for more details and a formal definition.\\n\\n3 Experiments\\n\\nWe now investigate our main research question: Does any approach give disentangled uncertainty estimators (Section 3.1)? Then, we go into each individual type of uncertainty and investigate which estimator practically performs the best on epistemic (Section 3.2), aleatoric (Section 3.3), and predictive uncertainty tasks (Section 3.4). Lastly, we draw conclusions across all tasks (Section 3.5) and benchmark the robustness of current uncertainty estimators (Section 3.6).\\n\\nTo provide even grounds, we reimplement each method and provide it as an easy-to-use uncertainty wrapper that can be added to arbitrary \\\\texttt{timm}\\\\[56\\\\] models. In this paper, we use pretrained ResNet-50 backbones and train each approach for 50 ImageNet-1k [10] epochs with a training pipeline following Tran et al. [49]. The CE baseline converges to an accuracy of 0.785 with this strategy.\\n\\nSince the DUQ method has memory and stability issues on ImageNet, in Section 3.7, we repeat all experiments on CIFAR-10 [27] with the WideResNet 28-10 architecture, following Liu et al. [32]. We only report the other 18 methods on ImageNet. We search for ideal hyperparameters and an early stopping checkpoint for each method by tracking the validation performance. We then run the best hyperparameters across five seeds and report mean, minimum, and maximum test performance. This overall takes 1.5 GPU years on RTX 2080 Ti GPUs. We report the main results in the paper and go into more detail for, e.g., different uncertainty aggregators in the appendix. We also publish all of these metrics and their logs.\"}"}
{"id": "x8RgF2xQTj", "page_num": 9, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"We conclude our experiments with a word of caution. Appendix G repeats all experiments on CIFAR-10, which is widely used in the uncertainty quantification literature [53, 37, 17]. While some conclusions from CIFAR-10 experiments replicate on ImageNet, like the correlated aleatoric and epistemic estimators, the larger-scale ImageNet often shows different behavior.\\n\\nRobustness.\\n\\nUncertainty estimates are far less robust on CIFAR-10 than on the ImageNet scale, even though the drop in classification accuracy is very similar. Unlike on ImageNet, where the uncertainty estimators maintain a close to constant performance in predicting correctness as we go OOD (Fig. 7a), on CIFAR-10, correctness estimators deteriorate together with the model's accuracy (Fig. 7b). The same holds for the ECE (Fig. 8a vs. Fig. 8b). So, while robustness appears to be a striking problem on CIFAR-10, it gets resolved by scaling to a larger dataset.\\n\\nMethod rankings.\\n\\nNine out of thirteen tasks exhibit substantially different rankings (rank corr. < 0.5) between CIFAR-10 and ImageNet. See Table H.1 for details. This indicates that performance on CIFAR-10 should not be taken as an estimate for ImageNet performance.\\n\\nThese experiments underline that methods might show substantially different behaviors on large-scale datasets. As best practice, we encourage to first scale the approaches to the final deployment domain (and define a precise task) instead of making fundamental design choices on toy datasets.\\n\\n4 Connections Between Our Findings and Related Works\\n\\nUncertainty Disentanglement.\\n\\nThe decomposition of aleatoric and epistemic uncertainties [42, 11] has recently been shown to have failure cases. The disentanglement is usually analyzed theoretically [57, 1, 16] or with qualitative plots (Kirchhof et al. [26], Fig. 6-9; Mukhoti et al. [37], Fig. 2; Valdenegro-Toro and Mori [52], Fig. 8-10). Our results support this discussion with a practical and quantitative perspective. To the best of our knowledge, we are the first to quantify the uncertainty disentanglement. We find that no tested decomposition formula works for any tested second-order distribution, neither on ImageNet-1k nor CIFAR-10. Our findings encourage combining separate methods instead, such as the CE baseline's predictive entropy and the Mahalanobis values, where each method handles a specific type of uncertainty. This is similar to the recent work of Mukhoti et al. [37]. We expect that our quantitative benchmarking methods help develop this field further.\\n\\nRobustness.\\n\\nRecent benchmarks on OOD detection and robustness [38, 40, 43, 13] have first highlighted robustness issues of uncertainty estimates. Our benchmark supports these findings on CIFAR-10, especially in the region that is slightly OOD yet already causes degradation of both the main task and the uncertainty estimator. The latter implies that uncertainty estimators either need to become more robust to distribution shifts [25] or be better able to detect subtle epistemic uncertainties. However, our experiments on ImageNet do not show robustness issues. It is possible that the vast space of natural images that the ImageNet training dataset covers resolves this issue. We encourage repeating our experiments and testing the uncertainty estimation not just on test data but also on perturbed test data for future large-scale uncertainty estimators.\\n\\nAleatoric uncertainty.\\n\\nWhile epistemic uncertainty is widely evaluated on the OOD detection proxy task [37, 49, 17], aleatoric uncertainty still lacks a standardized testing protocol. The current approaches seem to converge to soft labels, but nuances in how they are collected still need discussion (compare, for example, CIFAR-10H [41] to CIFAR-10S [7] and CIFAR-10N [55]). An increasing number of uncertainty quantification approaches compare to such human GT notions of aleatoric uncertainty [49, 24, 25, 26], indicating the interest in the field. Our benchmark shows that no method can give highly accurate aleatoric uncertainty estimates yet, stressing the need for benchmarks, methods, and training resources to develop along.\\n\\nPredictive uncertainty and calibration.\\n\\nContrary to aleatoric uncertainty alignment, calibration and predictive uncertainty benchmarks are starting to become saturated and, according to our experiments, the top performers are ready for deployment. This corroborates recent findings by Galil et al. [14]. In comparison to this benchmark that compared model architectures, we compared nineteen different approaches on the same backbone with a wide range of aggregator functions.\"}"}
{"id": "x8RgF2xQTj", "page_num": 10, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"5 Conclusions, Limitations, and Outlooks\\n\\nWe study how a diverse spectrum of uncertainty estimators and decomposition formulas perform on a comprehensive set of uncertainty quantification tasks. Our quantitative findings bring an empirical foundation to recent discussions in the field, namely that 1) the aleatoric and epistemic uncertainty components of decomposition formulas are highly correlated and not disentangled, 2) epistemic and aleatoric tasks are best solved by practically tailored methods, whereas methods relying on intuitions often underperform, and 3) there is no one-fits-all uncertainty estimate. On a brighter side, our experiments also reveal the important fact for practitioners that 4) predictive uncertainty estimation achieve a high, saturating performance across almost all methods, and 5) uncertainty estimates, when trained on large amounts of data, stay robust to perturbations longer than the classifiers whose uncertainties they predict, hence enabling to safeguard the classifiers to some extent.\\n\\nA limitation of our disentanglement benchmark is that we tested on two datasets, which are both classification tasks. This is because we require ground truths for aleatoric uncertainty. Currently, the only larger-scale datasets with such ground truths, in the form of multiple annotations per input, are the two classification datasets we base our analysis on [2, 41]. Further aleatoric uncertainty ground truths are an ongoing effort [44, 7]. We encourage the expansion of the set of datasets, both within classification and to fields like regression [51] or unsupervised learning [24], to expand our uncertainty disentanglement investigations. A second limitation is that we focus on models that have converged after training on the large-scale ImageNet dataset. A different interesting setup is models trained on small amounts of data, where epistemic uncertainty may be further from convergence. For example, there is a follow-up investigation of our work by de Jong et al. [9] that undersamples the train data. We replicate parts of their main experiment results on CIFAR-10 in Appendix H.9. We encourage future works to evaluate uncertainties on an as broad array of tasks as possible to refine the understanding of which specific uncertainty tasks individual uncertainty estimators excel at.\\n\\nThis last suggestion is a corollary of how our findings changed our perspective on uncertainty quantification. There is no general uncertainty; instead, uncertainty quantification covers a spectrum of tasks where the definition of the exact task heavily influences the optimal method and performance. Such a precise definition of tasks per estimator would help construct disentangled uncertainties and could lead to the alignment of theoretical developments and intuitive descriptions about what particular types of uncertainty methods aim to capture. This pragmatic reassessment of the field could overcome the traditional one-fits-all view of uncertainty and even the more recent epistemic vs. aleatoric dichotomy and uncover the full variety of uncertainty estimates that are tailored to nuanced, practical tasks.\\n\\nAcknowledgements\\n\\nThis work was funded by the Deutsche Forschungsgemeinschaft (DFG, German Research Foundation) under Germany's Excellence Strategy \u2013 EXC number 2064/1 \u2013 Project number 390727645. It also received funding from the DFG via the Priority Programme DFG SPP 2298-2. The authors thank the International Max Planck Research School for Intelligent Systems (IMPRS-IS) for supporting B\u00e1lint Mucs\u00e1nyi and Michael Kirchhof.\\n\\nReferences\\n\\n[1] V. Bengs, E. H\u00fcllermeier, and W. Waegeman. On second-order scoring rules for epistemic uncertainty quantification. In International Conference on Machine Learning (ICML), 2023.\\n\\n[2] L. Beyer, O. J. H\u00e9naff, A. Kolesnikov, X. Zhai, and A. v. d. Oord. Are we done with imagenet? arXiv preprint arXiv:2006.07159, 2020.\\n\\n[3] L. Biewald. Experiment tracking with weights and biases, 2020. URL https://www.wandb.com. Software available from wandb.com.\\n\\n[4] B. Charpentier, D. Z\u00fcgner, and S. G\u00fcnnemann. Posterior network: Uncertainty estimation without ood samples via density-based pseudo-counts. In H. Larochelle, M. Ranzato, R. Hadsell, M. Balcan, and H. Lin, editors, Advances in Neural Information Processing Systems, volume 33, pages 1356\u20131367. Curran Associates, Inc., 2020. URL https://proceedings.neurips.cc/paper_files/paper/2020/file/0eac690d7059a8de4b48e90f14510391-Paper.pdf.\"}"}
{"id": "x8RgF2xQTj", "page_num": 11, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"[1] M. Collier, B. Mustafa, E. Kokiopoulou, R. Jenatton, and J. Berent. Correlated input-dependent label noise in large-scale image classification. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 1551\u20131560, 2021.\\n\\n[2] M. Collier, R. Jenatton, B. Mustafa, N. Houlsby, J. Berent, and E. Kokiopoulou. Massively scaling heteroscedastic classifiers. In The Eleventh International Conference on Learning Representations, 2023. URL https://openreview.net/forum?id=sIoED-yPK9l.\\n\\n[3] K. M. Collins, U. Bhatt, and A. Weller. Eliciting and learning with soft labels from every annotator. In Proceedings of the AAAI Conference on Human Computation and Crowdsourcing (HCOMP), volume 10, 2022.\\n\\n[4] E. Daxberger, A. Kristiadi, A. Immer, R. Eschenhagen, M. Bauer, and P. Hennig. Laplace redux-effortless bayesian deep learning. Advances in Neural Information Processing Systems, 34:20089\u201320103, 2021.\\n\\n[5] I. P. de Jong, A. I. Sburlea, and M. Valdenegro-Toro. How disentangled are your classification uncertainties? arXiv preprint arXiv:2408.12175, 2024.\\n\\n[6] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, and L. Fei-Fei. Imagenet: A large-scale hierarchical image database. In 2009 IEEE conference on computer vision and pattern recognition, pages 248\u2013255. Ieee, 2009.\\n\\n[7] S. Depeweg, J.-M. Hernandez-Lobato, F. Doshi-Velez, and S. Udluft. Decomposition of uncertainty in bayesian deep learning for efficient and risk-sensitive learning. In International Conference on Machine Learning, pages 1184\u20131193. PMLR, 2018.\\n\\n[8] Y. Gal and Z. Ghahramani. Dropout as a bayesian approximation: Representing model uncertainty in deep learning. In international conference on machine learning, pages 1050\u20131059. PMLR, 2016.\\n\\n[9] I. Galil, M. Dabbah, and R. El-Yaniv. A framework for benchmarking class-out-of-distribution detection and its application to imagenet. In The Eleventh International Conference on Learning Representations (ICLR), 2023.\\n\\n[10] I. Galil, M. Dabbah, and R. El-Yaniv. What can we learn from the selective prediction and uncertainty estimation performance of 523 imagenet classifiers? In International Conference on Learning Representations (ICLR), 2023.\\n\\n[11] Y. Geifman, G. Uziel, and R. El-Yaniv. Bias-reduced uncertainty estimation for deep neural classifiers. arXiv preprint arXiv:1805.08206, 2018.\\n\\n[12] C. Gruber, P. O. Schenk, M. Schierholz, F. Kreuter, and G. Kauermann. Sources of uncertainty in machine learning\u2014a statisticians' view. arXiv preprint arXiv:2305.16703, 2023.\\n\\n[13] S. Gruber and F. Buettner. Uncertainty estimates of predictions via a general bias-variance decomposition. In International Conference on Artificial Intelligence and Statistics, pages 11331\u201311354. PMLR, 2023.\\n\\n[14] C. Guo, G. Pleiss, Y. Sun, and K. Q. Weinberger. On calibration of modern neural networks. In International conference on machine learning, pages 1321\u20131330. PMLR, 2017.\\n\\n[15] N. Gupta, J. Smith, B. Adlam, and Z. Mariet. Ensembling over classifiers: a bias-variance perspective. arXiv preprint arXiv:2206.10566, 2022.\\n\\n[16] K. He, X. Zhang, S. Ren, and J. Sun. Deep residual learning for image recognition. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 770\u2013778, 2016.\\n\\n[17] D. Hendrycks and T. Dietterich. Benchmarking neural network robustness to common corruptions and perturbations. arXiv preprint arXiv:1903.12261, 2019.\\n\\n[18] S. C. Hora. Aleatory and epistemic uncertainty in probability elicitation with an example from hazardous waste management. Reliability Engineering & System Safety, 54(2-3):217\u2013223, 1996.\"}"}
{"id": "x8RgF2xQTj", "page_num": 12, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A. Kendall and Y. Gal. What uncertainties do we need in Bayesian deep learning for computer vision? Advances in neural information processing systems, 30, 2017.\\n\\nM. Kirchhof, E. Kasneci, and S. J. Oh. Probabilistic contrastive learning recovers the correct aleatoric uncertainty of ambiguous inputs. International Conference on Machine Learning (ICML), 2023.\\n\\nM. Kirchhof, B. Mucs\u00e1nyi, S. J. Oh, and E. Kasneci. URL: A representation learning benchmark for transferable uncertainty estimates. In Thirty-seventh Conference on Neural Information Processing Systems Datasets and Benchmarks Track, 2023. URL https://openreview.net/forum?id=e9n4JjkmXZ.\\n\\nM. Kirchhof, M. Collier, S. J. Oh, and E. Kasneci. Pretrained visual uncertainties. arXiv preprint arXiv:2402.16569, 2024.\\n\\nA. Krizhevsky and G. Hinton. Learning multiple layers of features from tiny images. Master's thesis, Department of Computer Science, University of Toronto, 2009.\\n\\nS. Lahlou, M. Jain, H. Nekoei, V. I. Butoi, P. Bertin, J. Rector-Brooks, M. Korablyov, and Y. Bengio. DEUP: Direct epistemic uncertainty prediction. Transactions on Machine Learning Research, 2023. ISSN 2835-8856. URL https://openreview.net/forum?id=eGLdVRvvfQ.\\n\\nB. Lakshminarayanan, A. Pritzel, and C. Blundell. Simple and scalable predictive uncertainty estimation using deep ensembles. Advances in neural information processing systems, 30, 2017.\\n\\nK. Lee, K. Lee, H. Lee, and J. Shin. A simple unified framework for detecting out-of-distribution samples and adversarial attacks. Advances in neural information processing systems, 31, 2018.\\n\\nS. Lee, S. Purushwalkam, M. Cogswell, D. Crandall, and D. Batra. Why m heads are better than one: Training a diverse ensemble of deep networks. arXiv preprint arXiv:1511.06314, 2015.\\n\\nJ. Liu, Z. Lin, S. Padhy, D. Tran, T. Bedrax Weiss, and B. Lakshminarayanan. Simple and principled uncertainty estimation with deterministic deep learning via distance awareness. Advances in Neural Information Processing Systems, 33:7498\u20137512, 2020.\\n\\nI. Loshchilov and F. Hutter. SGDR: Stochastic gradient descent with warm restarts. In International Conference on Learning Representations, 2017. URL https://openreview.net/forum?id=Skq89Scxx.\\n\\nW. J. Maddox, P. Izmailov, T. Garipov, D. P. Vetrov, and A. G. Wilson. A simple baseline for Bayesian uncertainty in deep learning. Advances in neural information processing systems, 32, 2019.\\n\\nS. Mindermann, J. M. Brauner, M. T. Razzak, M. Sharma, A. Kirsch, W. Xu, B. H\u00f6ltgen, A. N. Gomez, A. Morisot, S. Farquhar, et al. Prioritized training on points that are learnable, worth learning, and not yet learnt. In International Conference on Machine Learning, pages 15630\u201315649. PMLR, 2022.\\n\\nB. Mucs\u00e1nyi, M. Kirchhof, E. Nguyen, A. Rubinstein, and S. J. Oh. Trustworthy machine learning. arXiv preprint arXiv:2310.08215, 2023.\\n\\nJ. Mukhoti, A. Kirsch, J. van Amersfoort, P. H. Torr, and Y. Gal. Deep deterministic uncertainty: A new simple baseline. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 24384\u201324394, 2023.\\n\\nZ. Nado, N. Band, M. Collier, J. Djolonga, M. Dusenberry, S. Farquhar, A. Filos, M. Havasi, R. Jenatton, G. Jerfel, J. Liu, Z. Mariet, J. Nixon, S. Padhy, J. Ren, T. Rudner, Y. Wen, F. Wenzel, K. Murphy, D. Sculley, B. Lakshminarayanan, J. Snoek, Y. Gal, and D. Tran. Uncertainty Baselines: Benchmarks for uncertainty & robustness in deep learning. arXiv preprint arXiv:2106.04015, 2021.\\n\\nJ. Nixon, M. W. Dusenberry, L. Zhang, G. Jerfel, and D. Tran. Measuring calibration in deep learning. In CVPR workshops, volume 2, 2019.\"}"}
{"id": "x8RgF2xQTj", "page_num": 25, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure B.3: On ImageNet, we find a positive rank correlation between the (ground-truth) aleatoric and epistemic components of the Bregman decomposition, implying that some level of correlation is inevitable when using this decomposition formula. However, this correlation is considerably lower than that between the aleatoric and epistemic estimates in Fig. 2a. This holds even if we increase the epistemic uncertainty in the dataset via ImageNet-C corruptions. We only show severity levels one and two here, as the GT aleatoric uncertainty values from the soft ImageNet-ReaL labels are only valid for these corruption levels \u2013 higher corruption would possibly change the soft label votes.\\n\\nB.4.1 ImageNet\\n\\nImageNet results on the correlation of the ground-truth aleatoric uncertainty and epistemic uncertainties of methods are shown in Fig. B.3. There is a positive rank correlation of up to 0.45 between these quantities, implying that some level of correlation is inevitable (but not such extreme values displayed in Fig. 2a). The shallow ensemble, which already had the lowest actual correlation, also has the lowest feasible decorrelation. Since in the feasible decorrelation experiment, we replace the estimated AU with the GT AU and keep the epistemic component, this indicates that the epistemic estimate of the shallow ensemble is already quite disentangled. It is also high-performing, as seen in Fig. 3a. One way to improve this further was discussed in Section 3.3 of the main paper. We find that the Mahalanobis epistemic estimates and the CE baseline aleatoric estimates lead to reasonably well-performing yet decorrelated uncertainties. We hypothesize that the main reason is the explicit measurement of aleatoric and epistemic uncertainty at different parts of the computation graph. This, e.g., is lacking for the BMA decomposition: the aleatoric and epistemic estimates are generated from the same set of logits, which limits diverse behaviors across estimators.\\n\\nB.4.2 CIFAR-10\\n\\nCIFAR-10 results on the correlation of the ground-truth aleatoric uncertainty and epistemic uncertainties of methods are shown in Fig. B.4a. Similar to ImageNet, there is a positive rank correlation between these quantities, implying a (low) inevitable level of correlation between the uncertainty sources. However, even for the most correlated second-order distribution of SW AG, with 0.39 this...\"}"}
{"id": "x8RgF2xQTj", "page_num": 26, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure B.4: On CIFAR-10, we find a positive rank correlation between the (ground-truth) aleatoric and epistemic components of the Bregman decomposition, implying that some level of correlation is inevitable when using this decomposition formula. However, this correlation is considerably lower than that between the aleatoric and epistemic estimates in Fig. 2b. This holds even if we increase the epistemic uncertainty in the dataset via CIFAR-10C corruptions. We only show severity levels one and two here, as the GT aleatoric uncertainty values from the soft CIFAR-10H labels are only valid for these corruption levels \u2013 higher corruption would possibly change the human annotators\u2019 CIFAR-10H soft label votes.\\n\\nB.5 Alignment of Methods with the Bregman Bias\\n\\nB.5.1 ImageNet\\nThe rank correlation of benchmarked methods with the bias component of the Bregman decomposition is shown in Fig. B.5 for ID and OOD with severity two. Most methods exhibit a high rank correlation ($\\\\geq 0.8$). This suggests that uncertainty estimators, to some extent, capture the model bias in terms of the Bregman formulation. All methods become less correlated with bias with increasing severity.\\n\\nB.5.2 CIFAR-10\\nThe rank correlation of benchmarked methods with the bias component of the Bregman decomposition is shown in Fig. B.6. EDL is strongly correlated with the Bregman bias component, indicating that its uncertainty captures a notion of model bias. All methods become more highly correlated with bias with increasing OOD perturbation severity.\\n\\nC Further Results of the Information-Theoretical Decomposition\\n\\nC.1 Special Form on the Information-Theoretical Decomposition for Discrete Posteriors\\n\\nBelow, we show that the information-theoretical (IT) decomposition [11] separates the entropy of the BMA into an expected entropy term and a Jensen-Shannon divergence term when considering discrete uniform distributions $q(\\\\pi|x) = \\\\frac{1}{M}$ $\\\\sum_{m=1}^{M} \\\\delta(\\\\pi - \\\\pi^{(m)})$ with $\\\\pi^{(m)} \\\\sim q(\\\\pi|x)$. Note that our formulation uses sampling $M$ probability vectors from $q(\\\\pi|x)$ for each input $x \\\\in X$, but the results also hold in the case of having a set of $M$ predictors $\\\\{\\\\pi^{(m)}(\\\\cdot)\\\\}_{m=1}^{M}$.\"}"}
{"id": "x8RgF2xQTj", "page_num": 27, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":true,\"natural_text\":\"| Rank Corr. | EDL | PostNet | HetClassNN | MC Dropout | Deep Ens. | DDU | SNGP | Temperature | GP | CE Baseline | Laplace | HET | HET-XL | Corr. Pred. | Shallow Ens. | Loss Pred. | Mahalanobis | Distributional Deterministic |\\n|-----------|-----|---------|------------|------------|-----------|-----|------|-------------|----|-------------|---------|-----|--------|-------------|------------|------------|--------------|---------------------------------|\\n|           |     |         |            |            |           |     |      |             |    |             |         |     |        |             |            |            |              | 0.0\\n|           |     |         |            |            |           |     |      |             |    |             |         |     |        |             |            |            |              | 0.2\\n|           |     |         |            |            |           |     |      |             |    |             |         |     |        |             |            |            |              | 0.4\\n|           |     |         |            |            |           |     |      |             |    |             |         |     |        |             |            |            |              | 0.6\\n|           |     |         |            |            |           |     |      |             |    |             |         |     |        |             |            |            |              | 0.8\\n|           |     |         |            |            |           |     |      |             |    |             |         |     |        |             |            |            |              | 1.0\\n\\n(a) ID rank correlation of methods with the Bregman decomposition's bias component.\\n\\n(b) Mixed ID and OOD rank correlation of methods with the Bregman bias using severity-one perturbations.\\n\\n(c) OOD rank correlation of methods with the Bregman bias using severity-one perturbations.\\n\\n(d) Mixed ID and OOD rank correlation of methods with the Bregman bias using severity-two perturbations.\\n\\n(e) OOD rank correlation of methods with the Bregman bias using severity-two perturbations.\\n\\nFigure B.5: Rank correlation with the Bregman bias component on the ImageNet validation dataset. Most methods exhibit a high rank correlation ($\\\\geq 0.8$). When going more OOD, all methods become less correlated with bias. Only severity levels one and two are shown, as the GT bias values from the soft ImageNet-ReaL labels are only valid for these corruption levels \u2013 higher corruption would possibly lead to a shift in labeler votes.\\n\\nThe IT decomposition treats the entropy of the predictive distribution $p(y|x) = \\\\int p(y|\\\\pi, x) \\\\, d\\\\pi$ as the predictive uncertainty metric and decomposes it into\\n\\n\\\\[ H_p(y|x) = E_{\\\\pi|x} \\\\left[ H_p(y|\\\\pi, x) \\\\right] + I_p(y, \\\\pi|x) \\\\right] \\\\]\\n\\nwhere $H$ is the entropy and $I$ is the mutual information. Under a discrete uniform approximate distribution $q(\\\\pi|x)$, the predictive uncertainty is still the entropy of the BMA, and the aleatoric uncertainty also stays the expected entropy of the probability vectors of non-zero measure. We only have to show that the mutual information takes the convenient form of the Jensen-Shannon divergence under such an approximate posterior. Using $p(y, \\\\pi|x) = 27$\"}"}
{"id": "x8RgF2xQTj", "page_num": 28, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure B.6: Rank correlations of the methods with the GT Bregman bias on CIFAR-10. EDL has a strong correlation, indicating that it estimates something close to the bias. When going more OOD, all methods become more highly correlated with the bias. Only severity levels one and two are shown, as the GT bias values from the soft CIFAR-10H labels are only valid for these corruption levels \u2013 higher corruption would possibly lead to a shift in labeler votes.\\n\\n\\\\[ p(y|\\\\pi, x) q(\\\\pi|x) \\\\]\\n\\nwhich is the Jensen-shannon divergence of the distributions \\\\( p(\\\\pi|\\\\pi(m)) \\\\) and \\\\( \\\\pi(m) \\\\sim q(\\\\pi|x), m \\\\in \\\\{1, \\\\ldots, M\\\\} \\\\).\\n\\n\\\\[ \\\\log p(y|\\\\pi(x)) p(y|\\\\pi) q(\\\\pi|x) d\\\\pi = -\\\\frac{1}{M} \\\\sum_{m=1}^{M} H(\\\\pi(m)) \\\\]\\n\\n\\\\[ \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\log p(y|\\\\pi(m)) - \\\\frac{1}{M} \\\\sum_{m=1}^{M} H(\\\\pi(m)) \\\\]\"}"}
{"id": "x8RgF2xQTj", "page_num": 13, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Y. Ovadia, E. Fertig, J. Ren, Z. Nado, D. Sculley, S. Nowozin, J. Dillon, B. Lakshminarayanan, and J. Snoek. Can you trust your model\u2019s uncertainty? Evaluating predictive uncertainty under dataset shift. Advances in Neural Information Processing Systems (NeurIPS), 32, 2019.\\n\\nJ. C. Peterson, R. M. Battleday, T. L. Griffiths, and O. Russakovsky. Human uncertainty makes classification more robust. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 9617\u20139626, 2019.\\n\\nD. Pfau. A generalized bias-variance decomposition for bregman divergences. Unpublished Manuscript, 2013.\\n\\nJ. Postels, M. Seg\u00f9, T. Sun, L. D. Sieber, L. Van Gool, F. Yu, and F. Tombari. On the practicality of deterministic epistemic uncertainty. In International Conference on Machine Learning (ICML), 2022.\\n\\nL. Schmarje, V. Grossmann, C. Zelenka, S. Dippel, R. Kiko, M. Oszust, M. Pastell, J. Stracke, A. Valros, N. Volkmann, et al. Is one annotation enough?\u2014a data-centric image classification benchmark for noisy and ambiguous label estimation. Advances in Neural Information Processing Systems, 35:33215\u201333232, 2022.\\n\\nM. Sensoy, L. Kaplan, and M. Kandemir. Evidential deep learning to quantify classification uncertainty. In S. Bengio, H. Wallach, H. Larochelle, K. Grauman, N. Cesa-Bianchi, and R. Garnett, editors, Advances in Neural Information Processing Systems, volume 31. Curran Associates, Inc., 2018. URL https://proceedings.neurips.cc/paper_files/paper/2018/file/a981f2b708044d6fb4a71a1463242520-Paper.pdf.\\n\\nM. Sensoy, L. Kaplan, and M. Kandemir. Evidential deep learning to quantify classification uncertainty. Advances in neural information processing systems, 31, 2018.\\n\\nM. H. Shaker and E. H\u00fcllermeier. Ensemble-based uncertainty quantification: Bayesian versus credal inference. In Proceedings of the 31. Workshop on Computational Intelligence, volume 25, page 63, 2021.\\n\\nN. Srivastava, G. Hinton, A. Krizhevsky, I. Sutskever, and R. Salakhutdinov. Dropout: a simple way to prevent neural networks from overfitting. The journal of machine learning research, 15(1):1929\u20131958, 2014.\\n\\nD. Tran, J. Z. Liu, M. W. Dusenberry, D. Phan, M. Collier, J. Ren, K. Han, Z. Wang, Z. E. Mariet, H. Hu, N. Band, T. G. J. Rudner, Z. Nado, J. van Amersfoort, A. Kirsch, R. Jenatton, N. Thain, E. K. Buchanan, K. P. Murphy, D. Sculley, Y. Gal, Z. Ghahramani, J. Snoek, and B. Lakshminarayanan. Plex: Towards reliability using pretrained large model extensions. In First Workshop on Pre-training: Perspectives, Pitfalls, and Paths Forward at ICML 2022. URL https://openreview.net/forum?id=6x0gB9gOHFg.\\n\\nD. Ulmer, C. Hardmeier, and J. Frellsen. Prior and posterior networks: A survey on evidential deep learning methods for uncertainty estimation. Trans. Mach. Learn. Res., 2023, 2023. URL https://openreview.net/forum?id=xqS8k9E75c.\\n\\nU. Upadhyay, J. M. Kim, C. Schmidt, B. Sch\u00f6lkopf, and Z. Akata. Likelihood annealing: Fast calibrated uncertainty for regression. arXiv preprint arXiv:2302.11012, 2023.\\n\\nM. Valdenegro-Toro and D. S. Mori. A deeper look into aleatoric and epistemic uncertainty disentanglement. In Computer Vision and Pattern Recognition Workshops (CVPRW), 2022.\\n\\nJ. Van Amersfoort, L. Smith, Y. W. Teh, and Y. Gal. Uncertainty estimation using a single deep deterministic neural network. In International conference on machine learning, pages 9690\u20139700. PMLR, 2020.\\n\\nU. Von Luxburg and B. Sch\u00f6lkopf. Statistical learning theory: Models, concepts, and results. In Handbook of the History of Logic, volume 10, pages 651\u2013706. Elsevier, 2011.\\n\\nJ. Wei, Z. Zhu, H. Cheng, T. Liu, G. Niu, and Y. Liu. Learning with noisy labels revisited: A study using real-world human annotations. In International Conference on Learning Representations (ICLR), 2022.\"}"}
{"id": "x8RgF2xQTj", "page_num": 14, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"[56] R. Wightman. Pytorch image models. https://github.com/rwightman/pytorch-image-models, 2019.\\n\\n[57] L. Wimmer, Y. Sale, P. Hofman, B. Bischl, and E. H\u00fcllermeier. Quantifying aleatoric and epistemic uncertainty in machine learning: Are conditional entropy and mutual information appropriate measures? In Uncertainty in Artificial Intelligence, pages 2282\u20132292. PMLR, 2023.\\n\\n[58] Y. Yang, S. Mandt, L. Theis, et al. An introduction to neural data compression. Foundations and Trends\u00ae in Computer Graphics and Vision, 15(2):113\u2013200, 2023.\\n\\n[59] D. Yoo and I. S. Kweon. Learning loss for active learning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), 2019.\\n\\n[60] Y. You, J. Li, S. Reddi, J. Hseu, S. Kumar, S. Bhojanapalli, X. Song, J. Demmel, K. Keutzer, and C.-J. Hsieh. Large batch optimization for deep learning: Training bert in 76 minutes. In International Conference on Learning Representations, 2020. URL https://openreview.net/forum?id=Syx4wnEtvH.\\n\\n[61] S. Zagoruyko and N. Komodakis. Wide residual networks. In Proceedings of the British Machine Vision Conference 2016. British Machine Vision Association, 2016.\"}"}
{"id": "x8RgF2xQTj", "page_num": 15, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A Details of Benchmarked Methods\\n\\nA.1 Deterministic Methods\\n\\nA.2 Distributional Methods\\n\\nB Definition and Further Results of the Bregman Decomposition\\n\\nB.1 Special Form of the Bregman Decomposition for the Kullback-Leibler Divergence\\n\\nB.2 DEUP is a Special Case of Bregman\\n\\nB.3 Correlation of Components and Limitations\\n\\nB.4 Disentangling Epistemic and Aleatoric Uncertainty via Decomposition Formulas Is Feasible\\n\\nB.5 Alignment of Methods with the Bregman Bias\\n\\nC Further Results of the Information-Theoretical Decomposition\\n\\nC.1 Special Form on the Information-Theoretical Decomposition for Discrete Posteriors\\n\\nC.2 Entanglement on Datasets with Increased Epistemic Uncertainty\\n\\nC.3 Performance of Decorrelated Methods using the Information-Theoretical Components\\n\\nC.4 Pearson Correlation Results on ImageNet\\n\\nC.5 Cross-Evaluation of the IT Decomposition's Components on ImageNet\\n\\nD Definitions and Results of the Benchmarked Aggregators\\n\\nD.1 Entropy-Based Aggregators\\n\\nD.2 Maximum-Probability-Based Aggregators\\n\\nD.3 Disagreement-Based Aggregators\\n\\nD.4 Dempster-Shafer Value\\n\\nD.5 The Behavior of the Aggregators Does Not Align With What the Literature Suggests\\n\\nE Goals of Disentanglement\\n\\nF Design Choices\\n\\nF.1 Disentanglement Experiments\\n\\nF.2 Epistemic Uncertainty Experiments\\n\\nF.3 Aleatoric Uncertainty Experiments\\n\\nG Main CIFAR-10 Experiments\\n\\nG.1 Epistemic Uncertainty: Specialized Uncertainty Estimators detect OOD Inputs the Best\\n\\nG.2 Aleatoric Uncertainty: No Method With Outstanding Performance\\n\\nG.3 Predictive Uncertainty: Close to Saturation on CIFAR-10\\n\\nG.4 Different Tasks Require Different Estimators\\n\\nH Further Practical Results\\n\\nH.1 Correctness Prediction\\n\\nH.2 Performance Tendency for Increasing Severity\\n\\nH.3 OOD Detection\"}"}
{"id": "x8RgF2xQTj", "page_num": 16, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":null}"}
{"id": "x8RgF2xQTj", "page_num": 29, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure C.1: Rank correlation of the aleatoric and epistemic components of the IT decomposition when increasing the epistemic uncertainty by going OOD on ImageNet-ReaL. Increasing the epistemic uncertainty of the datasets only slightly decreases the internal correlation of the estimates.\\n\\nC.2 Entanglement on Datasets with Increased Epistemic Uncertainty\\n\\nThe main paper showed in Section 3.1 that the IT decomposition's aleatoric and epistemic components are highly correlated across all distributional methods. In this section, we introduce epistemic uncertainty by going OOD via ImageNet-C distribution to find if this decorrelates the components.\\n\\nC.2.1 ImageNet\\n\\nFig. C.1 shows the results at severity levels one and two. The estimates generally become slightly less correlated as we go more OOD, but the correlations do not lower considerably.\\n\\nC.2.2 CIFAR-10\\n\\nResults for severity levels one and two are shown in Fig. C.2. The increased epistemic uncertainty does not help decorrelate the components. Quite the opposite; the previously most uncorrelated estimates on the Shallow Ensemble become more highly correlated.\\n\\nC.3 Performance of Decorrelated Methods using the Information-Theoretical Components\\n\\nIn Sections 3.2 and 3.3, we use the best-performing aggregator for predicting aleatoric and epistemic uncertainty to ensure each second-order method has the best possible chances. In this section, we solely use the aggregators dictated by the IT decomposition.\\n\\nC.3.1 ImageNet\\n\\nIn Fig. C.3, we replace the aggregators of the previously best-performing distributional method, Shallow Ensemble, with the aggregators dictated by the IT decomposition. This reduces its performance to the CE baseline level. This shows that the choice of the aggregator counts and that it is not always the intuitively expected aggregator that performs best.\\n\\nC.3.2 CIFAR-10\\n\\nAs on ImageNet, replacing the aggregators of Shallow Ensemble with the IT decomposed ones on CIFAR-10 also lowers its performance on both the aleatoric and epistemic task to or below the CE baseline level in Fig. C.4.\"}"}
{"id": "x8RgF2xQTj", "page_num": 30, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure C.2: Rank correlation of the aleatoric and epistemic components of the IT decomposition when increasing the epistemic uncertainty by going OOD on CIFAR-10H. The increased epistemic uncertainty does not decorrelate the components. Quite the opposite, it leads to even more highly correlated components.\\n\\n(a) Mixed ID and OOD with severity level one.\\n(b) OOD severity level one.\\n(c) Mixed ID and OOD with severity level two.\\n(d) OOD severity level two.\\n\\nFigure C.3: On ImageNet, replacing the aggregators of the least-correlated distributional method, Shallow Ensemble, with the ones that the IT decomposition proposes drastically lowers its performance. All other methods are equipped with their best-performing estimator for the respective tasks, showing that specialized estimators work better.\\n\\nC.4 Pearson Correlation Results on ImageNet\\n\\nFig. C.5 shows Pearson correlation results between the IT decomposition's AU and EU term. In addition to the estimates having a strong monotonic relationship, they are also often linearly correlated.\\n\\nC.5 Cross-Evaluation of the IT Decomposition's Components on ImageNet\\n\\nIn Appendix C.5, we cross-evaluate the epistemic and aleatoric terms of the information-theoretical decomposition on the opposite task, which leads to two conclusions. (i) The epistemic estimates perform notably well on aleatoric uncertainty evaluation, which contradicts the common claim that epistemic estimates are not useful for ID. (ii) The aleatoric estimates are almost always better than the epistemic ones on OOD detection, going against the wide belief that aleatoric estimates are not to be trusted for OOD. This is another consequence of the entanglement that we uncover in our paper.\"}"}
{"id": "x8RgF2xQTj", "page_num": 31, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure C.4: Shallow ensemble underperforms the cross-entropy baseline on CIFAR-10 when using the estimators of the IT decomposition for the OOD detection and human uncertainty alignment tasks. All other methods are equipped with their best-performing estimator for the respective tasks, showing that the IT decomposition is not practically beneficial.\\n\\nFigure C.5: Pearson correlation results of the IT decomposition's aleatoric and epistemic terms on ImageNet. The relationship is often not only monotonic but also linear, with PostNets being a notable exception.\\n\\nD Definitions and Results of the Benchmarked Aggregators\\n\\nIn practical applications, distributional methods output a discrete set of probability vectors \\\\( \\\\{ \\\\pi(m) \\\\}_{m=1}^{M} \\\\) per input \\\\( x \\\\in X \\\\). This set can be aggregated in several ways to construct an uncertainty estimate \\\\( u(x) \\\\). Commonly used aggregators are the Bayesian Model Average (BMA):\\n\\n\\\\[\\n\\\\bar{\\\\pi}(x) = \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\pi(m),\\n\\\\]\\n\\nand the Bregman decomposition's central prediction term (Appendix B):\\n\\n\\\\[\\n\\\\tilde{\\\\pi}(x) = \\\\text{softmax} \\\\left( \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\log \\\\pi(m) \\\\right),\\n\\\\]\\n\\nfollowed by taking their maximum probability, entropy, mutual information, or expected divergence [37, 11, 57, 19, 17]. Similarly, one can take the expected maximum probability and expected entropy over the set of probability vectors [37]. These possible choices are detailed below with pointers to their use in the literature.\\n\\nD.1 Entropy-Based Aggregators\\n\\nAccording to the Source Coding Theorem, the entropy of the code is a fundamental and tight lower bound on the expected code word length for prefix-free symbol codes [58]. The entropy is an expectation over the length of per-symbol codewords. For general distributions \\\\( p(x) \\\\), it intuitively measures the spread or the \\\"amount of surprise\\\" in \\\\( p(x) \\\\): a higher entropy indicates more stochasticity in the distribution. We consider three entropy-based aggregators of \\\\( \\\\{ \\\\pi(m) \\\\}_{m=1}^{M} \\\\) per input:\\n\\n\\\\[\\n\\\\text{Entropy} = \\\\sum_{x} p(x) \\\\log p(x).\\n\\\\]\\n\\nNote that our formulation uses sampling probability vectors from \\\\( q(\\\\pi|x) \\\\) for each input \\\\( x \\\\in X \\\\), but the results also hold in the case of having a set of \\\\( M \\\\) predictors \\\\( \\\\{ \\\\pi(m)(\\\\cdot) \\\\}_{m=1}^{M} \\\\).\"}"}
{"id": "x8RgF2xQTj", "page_num": 32, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"The entropy appears both in the IT and Bregman decompositions (Eq. (1), Eq. (22)). Eq. (38) is often cited to capture predictive (or total) uncertainty, whereas Eq. (40) is known to capture aleatoric uncertainty [37, 11, 57]. As \\\\( \\\\tilde{\\\\pi}(x) \\\\) is a central predictor similar to \\\\( \\\\bar{\\\\pi}(x) \\\\), its entropy aligns well with a notion of predictive uncertainty.\\n\\nD.2 Maximum-Probability-Based Aggregators\\n\\nMaximum-probability-based aggregators are similar to entropy-based ones: a small maximum probability value in the prediction vector necessarily means that all entries are small, leading to a high spread and entropy. As uncertainty estimates are higher when the model is more uncertain by convention, one usually takes one minus the maximum probability as a notion of uncertainty. We consider three maximum-probability-based aggregators of \\\\( \\\\{\\\\pi(m)\\\\} \\\\) per input \\\\( x \\\\in X \\\\):\\n\\n\\\\[\\nu(x) = 1 - \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} \\\\bar{\\\\pi}_c(x) \\\\quad (41)\\\\]\\n\\n\\\\[\\nu(x) = 1 - \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} \\\\tilde{\\\\pi}_c(x) \\\\quad (42)\\\\]\\n\\n\\\\[\\nu(x) = 1 - \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} \\\\pi_c(m) \\\\quad (43)\\\\]\\n\\nThe maximum-probability-based aggregators are restricted to the \\\\([0, 1]\\\\) range. This is particularly important for (strictly) proper scoring rules for the correctness of prediction [36] and the notion of calibration, including the ECE and the reliability diagram [39]. Similarly to the entropy-based aggregators, Eq. (41) and Eq. (42) align with a notion of predictive uncertainty, whereas Eq. (43) is more aligned with a notion of aleatoric uncertainty.\\n\\nD.3 Disagreement-Based Aggregators\\n\\nOne can directly use the epistemic components of the Bregman and IT decompositions as they do not require a ground truth. In particular, one can use\\n\\n\\\\[\\nu(x) = H(\\\\bar{\\\\pi}(x)) - \\\\frac{1}{M} \\\\sum_{m=1}^{M} H(\\\\pi(m)) \\\\quad (44)\\\\]\\n\\n\\\\[u(x) = 1 - \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} \\\\pi_c(m) \\\\quad (43)\\\\]\"}"}
{"id": "x8RgF2xQTj", "page_num": 17, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A Details of Benchmarked Methods\\n\\nWe consider a classification setting with discrete label space \\\\{1, \\\\ldots, C\\\\} of \\\\(C\\\\) classes.\\n\\nWe evaluate two classes of methods: deterministic methods and distributional methods. Distributional methods output a second-order predictive distribution \\\\(q(\\\\pi|x)\\\\) for input \\\\(x \\\\in X\\\\). Deterministic methods output a single probability vector \\\\(\\\\pi(x) \\\\in \\\\Delta_{C-1}\\\\) and additional uncertainty estimates detailed below. The (pre-softmax) logits of the models are denoted by \\\\(f(x) \\\\in \\\\mathbb{R}^C\\\\). Therefore, it holds that \\\\(\\\\pi(x) = \\\\text{softmax}(f(x))\\\\). The activations of layer \\\\(\\\\ell \\\\in \\\\{1, \\\\ldots, L\\\\}\\\\) in the model is denoted by \\\\(f_{\\\\ell}(x) \\\\in \\\\mathbb{R}^{D_{\\\\ell}}\\\\) with \\\\(f_L(x) = f(x),\\\\ D_{\\\\ell} = C\\\\).\\n\\nA.1 Deterministic Methods\\n\\nDeterministic methods output an uncertainty estimate \\\\(u(x)\\\\) for input \\\\(x \\\\in X\\\\), such as the estimated probability of the model's prediction to be correct.\\n\\nA.1.1 Loss Prediction\\n\\nLoss prediction [51, 28, 25] employs an additional output head \\\\(u_{lp}\\\\) connected to the pre-logit layer that predicts the loss of the network's prediction on input \\\\(x \\\\in X\\\\). The loss predictor head is trained in a supervised fashion by making \\\\(u_{lp}(x)\\\\), the predicted loss, closer to the actual loss \\\\(\\\\ell(\\\\pi(x), y) = -\\\\log \\\\pi_y(x)\\\\).\\n\\nPrecisely, we use the objective \\\\(L_{lp} = -\\\\frac{1}{n} \\\\sum_{i=1}^{n} \\\\log \\\\pi_y(x_i) + \\\\lambda u_{lp}(x_i) + \\\\log \\\\pi_y(x_i)^2\\\\), (2)\\n\\nwhere the risk predictor loss (squared Euclidean distance) is traded off with the label predictor loss (cross-entropy) with a hyperparameter \\\\(\\\\lambda \\\\in \\\\mathbb{R}^+\\\\).\\n\\nNote that \\\\(Y|X=x\\\\) is a random variable in the presence of aleatoric uncertainty. In expectation, Eq. (2) encourages \\\\(u_{lp}(x)\\\\) to approximate the true pointwise risk \\\\(R(\\\\pi, x) = \\\\mathbb{E}_{y \\\\mid x} [\\\\ell(\\\\pi(x), y)]\\\\) at each input \\\\(x \\\\in X\\\\).\\n\\nA.1.2 Correctness Prediction\\n\\nCorrectness prediction is a variant of risk prediction that, instead of aiming to predict the risk of the network on input \\\\(x \\\\in X\\\\), estimates the true probability of correctness \\\\(p_{\\\\text{data}}\\\\arg\\\\max_c{f_c(x)} = y\\\\) on input \\\\(x \\\\in X\\\\). This is achieved by using a sigmoid correctness predictor head \\\\(h\\\\) and using the objective \\\\(L_{cp} = -\\\\frac{1}{n} \\\\sum_{i=1}^{n} \\\\log \\\\pi_y(x_i) - \\\\lambda l_i \\\\log h(x_i) + (1 - l_i) \\\\log (1 - h(x_i))\\\\), (3)\\n\\nwhere \\\\(l = h\\\\arg\\\\max_c{f_c(x)} = y\\\\) \\\\(\\\\forall i \\\\in \\\\{1, \\\\ldots, n\\\\}\\\\), and the correctness predictor loss (binary cross-entropy) is traded off with the label predictor loss (cross-entropy) with a hyperparameter \\\\(\\\\lambda \\\\in \\\\mathbb{R}^+\\\\). The uncertainty estimate is \\\\(u_{cp}(x) = 1 - h(x)\\\\) (i.e., the probability of making an error).\\n\\nA.1.3 Deterministic Uncertainty Quantification\\n\\nThe deterministic uncertainty quantification (DUQ) method of Van Amersfoort et al. [53] learns a latent mixture-of-RBF density on the training set with a strictly proper scoring rule to capture the uncertainty in the prediction based on the Euclidean distance of the input's embedding to the mixture means. The training objective is \\\\(L_{duq} = \\\\frac{1}{n} \\\\sum_{i=1}^{n} \\\\sum_{c=1}^{C} \\\\sum_{c'=1}^{C} \\\\text{one}_\\\\text{hot}(y_i) \\\\text{one}_\\\\text{hot}(c) \\\\log K_{c'}(x_i) + \\\\text{one}_\\\\text{hot}(y_i) \\\\text{one}_\\\\text{hot}(c) \\\\log 1 - K_{c'}(x_i)\\\\), (4)\"}"}
{"id": "x8RgF2xQTj", "page_num": 18, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"where \\\\( K_c(x) = \\\\exp\\\\left(-\\\\frac{1}{2}\\\\gamma \\\\|f(x) - m_c\\\\|^2\\\\right) \\\\) is the RBF value corresponding to class \\\\( c \\\\in \\\\{1, \\\\ldots, C\\\\} \\\\) identified by its mean vector \\\\( m_c \\\\) in the latent space. To facilitate minibatch training, Van Amersfoort et al. \\\\[53\\\\] employ an exponential moving average (EMA) to learn the mean vector using the following update rules:\\n\\n\\\\[\\n\\\\begin{align*}\\n    n_c &\\\\leftarrow \\\\gamma \\\\cdot n_c + (1 - \\\\gamma) |B_c| \\\\\\\\\\n    M_c &\\\\leftarrow \\\\gamma \\\\cdot M_c + (1 - \\\\gamma) X(x, y) \\\\in B_c W_c f(x)\\n\\\\end{align*}\\n\\\\]\\n\\n(5)\\n\\n\\\\[\\n    m_c \\\\leftarrow M_c n_c,\\n\\\\]\\n\\n(7)\\n\\nwhere \\\\( B \\\\) is a minibatch of samples and \\\\( B_c = \\\\{(x, y) \\\\in B | y = c\\\\} \\\\) for all \\\\( c \\\\in \\\\{1, \\\\ldots, C\\\\} \\\\). \\\\( \\\\gamma \\\\) is the EMA parameter, and \\\\( W_c \\\\) characterizes a linear mapping of the logits for each class.\\n\\nTo regularize the latent density and prevent feature collapse, Van Amersfoort et al. \\\\[53\\\\] use the following gradient penalty added to \\\\( \\\\nabla \\\\theta L \\\\):\\n\\n\\\\[\\n    \\\\lambda \\\\cdot \\\\left(\\\\n        \\\\n        \\\\begin{array}{c}\\n        \\\\n        \\\\end{array}\\\\right^2 - \\\\n        \\\\n        \\\\begin{array}{c}\\n        \\\\n        \\\\end{array}\\\\right)^2\\n    \\\\right)\\n\\\\]\\n\\n(8)\\n\\nEach RBF component in the latent space corresponds to one class. The confidence output of the method is the maximal RBF value of the input over all classes. Therefore, the uncertainty estimate can be calculated as \\\\( u_{\\\\text{duq}}(x) = 1 - \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} K_c(x) \\\\).\\n\\nThe predicted class of the trained network is \\\\( \\\\arg \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} K_c(x) \\\\).\\n\\n**A.1.4 Mahalanobis**\\n\\nThe Mahalanobis method \\\\[30\\\\] builds a post-hoc latent density for the training set in the latent space by calculating per-class means and covariances, and using the induced mixture-of-Gaussians as the latent density estimate. Such latent densities are estimated in multiple layers of the network. One layer's confidence estimate is the maximal Mahalanobis score (Gaussian log-likelihood) \\\\( K_\\\\ell(x) \\\\) over all classes:\\n\\n\\\\[\\n    K_\\\\ell,c(x) = -f_\\\\ell(x) - \\\\mu_{\\\\ell,c}^\\\\top \\\\Sigma_{\\\\ell}^{-1} (f_\\\\ell(x) - \\\\mu_{\\\\ell,c})\\n\\\\]\\n\\n(9)\\n\\n\\\\[\\n    K_\\\\ell(x) = \\\\max_{c \\\\in \\\\{1, \\\\ldots, C\\\\}} K_\\\\ell,c(x).\\n\\\\]\\n\\n(10)\\n\\nThe centroid of the Gaussian for class \\\\( c \\\\in \\\\{1, \\\\ldots, C\\\\} \\\\) in layer \\\\( \\\\ell \\\\in \\\\{1, \\\\ldots, L\\\\} \\\\) is\\n\\n\\\\[\\n    \\\\mu_{\\\\ell,c} = \\\\frac{1}{n_c} \\\\sum_{i=1}^{n} h_{y(i)} = c f_\\\\ell(x(i)),\\n\\\\]\\n\\n(11)\\n\\nwhere \\\\( n_c \\\\) is the number of samples with label \\\\( c \\\\), and \\\\( \\\\Sigma_\\\\ell = \\\\frac{1}{n} \\\\sum_{c=1}^{C} X_{c=1}^{n} h_{y(i)} = c (f_\\\\ell(x(i)) - \\\\mu_{\\\\ell,c})^\\\\top\\n\\\\]\\n\\n(12)\\n\\nis the tied covariance matrix used for all classes in layer \\\\( \\\\ell \\\\in \\\\{1, \\\\ldots, L\\\\} \\\\).\\n\\nTo make the differences of latent embeddings of ID and OOD samples more pronounced, all samples are adversarially perturbed w.r.t. the maximal Mahalanobis score for each layer's confidence score:\\n\\n\\\\[\\n    \\\\hat{x}_\\\\ell = x + \\\\epsilon \\\\text{sgn} \\\\nabla_x K_\\\\ell(x).\\n\\\\]\\n\\n(13)\\n\\nThis perturbed sample is used to compute \\\\( K_\\\\ell(\\\\hat{x}_\\\\ell) \\\\). Finally, a logistic regression OOD detector is learned on a held-out validation set of a balanced mix of ID and OOD samples to learn weights \\\\( w_\\\\ell \\\\) for each layer \\\\( \\\\ell \\\\in \\\\{1, \\\\ldots, L\\\\} \\\\) using the \\\\( L \\\\)-dimensional inputs \\\\( K_1(\\\\hat{x}_1), \\\\ldots, K_L(\\\\hat{x}_L) \\\\). The final uncertainty estimate becomes \\\\( u_{\\\\text{Mah}}(x) = P_{\\\\ell=1}^L w_\\\\ell K_\\\\ell \\\\).\\n\\nThis is the only method in our benchmark that requires a mixed ID-OOD validation set for training the logistic regression OOD detector.\"}"}
{"id": "x8RgF2xQTj", "page_num": 19, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A.1.5 Temperature Scaling\\n\\nTemperature scaling [18] post-hoc calibrates the predictive softmax distribution \\\\( \\\\pi(x) \\\\) by learning a temperature parameter \\\\( \\\\tau \\\\in \\\\mathbb{R}^+ \\\\) on a held-out ID validation set after training and setting \\\\( \\\\pi(x) := \\\\text{softmax}(f(x)/\\\\tau) \\\\). Guo et al. [18] show that temperature scaling leads to improvements on both the ECE score and strictly proper scoring rules. To determine the optimal \\\\( \\\\tau \\\\), we perform a grid search over \\\\( \\\\tau \\\\in \\\\{0.1, 0.2, 0.3, \\\\ldots, 10.1\\\\} \\\\) and choose the one that leads to the lowest NLL loss, following [37].\\n\\nA.1.6 Deep Deterministic Uncertainty\\n\\nThe Deep Deterministic Uncertainty (DDU) method [37] applies the spectral normalization of SNGPs (Appendix A.2.1) to the hidden weights to establish a distance-aware latent space. It then fits a mixture of Gaussians to this latent space based on (ID) training set statistics. Unlike the Mahalanobis method, it\\n\\n1. does not use adversarial perturbations;\\n2. only builds a latent density in the pre-logit layer;\\n3. does not tie the covariance matrix across classes:\\n\\n\\\\[\\n\\\\pi_c = \\\\frac{n_c}{n}, \\\\quad (14)\\n\\\\]\\n\\n\\\\[\\n\\\\mu_c = \\\\frac{1}{n_c} \\\\sum_{i=1}^{n_c} h_y(i) = c; \\\\quad (15)\\n\\\\]\\n\\n\\\\[\\n\\\\Sigma_c = \\\\frac{1}{n_c - 1} \\\\sum_{i=1}^{n_c} (h_y(i) = c - \\\\mu_c)^T(16)\\n\\\\]\\n\\nfor \\\\( c \\\\in \\\\{1, \\\\ldots, C\\\\} \\\\) where \\\\( f_{L-1}(x) \\\\) denotes the output of the pre-logit layer on input \\\\( x \\\\in X \\\\). Finally, it uses a held-out ID validation set to apply temperature scaling to the logits. Unlike the other methods we evaluate, the DDU method uses two uncertainty estimators, one for epistemic uncertainty and one for aleatoric uncertainty. The epistemic estimator is the negative log probability of the pre-logit on sample \\\\( x \\\\in X \\\\) under the MoG:\\n\\n\\\\[\\nu_{ddu}^{eu}(x) = -\\\\log p_{f_{L-1}(x)}^{\\\\{\\\\pi_c\\\\}_{c=1}^C, \\\\{\\\\mu_c\\\\}_{c=1}^C, \\\\{\\\\Sigma_c\\\\}_{c=1}^C}.\\n\\\\]\\n\\nThe aleatoric estimator is the entropy of the softmax predictive distribution:\\n\\n\\\\[\\nu_{ddu}^{au}(x) = H(\\\\pi(x)).\\n\\\\]\\n\\nMukhoti et al. [37] do not provide a predictive uncertainty estimator, and the sum of the aleatoric and epistemic estimator is not a performant choice for this task, as the magnitude of the epistemic part is usually much larger than that of the aleatoric part in practice.\\n\\nDuring training, we employ the cross-entropy loss to match the network's predicted probabilities to the (one-hot) ground-truth labels. For a fair comparison of DDU with the other methods, we use the epistemic estimator for the OOD detection task following Mukhoti et al. [37] and the best-performing one from Appendix D otherwise.\\n\\nA.1.7 Cross-Entropy Baseline\\n\\nAs a baseline, we also benchmark a deterministic single-point network trained with the cross-entropy loss. While this is a deterministic method, one can also equate it to a degenerate Dirac delta distribution in parameter space: \\\\( q(\\\\theta') = \\\\delta(\\\\theta - \\\\theta') \\\\), making it the simplest possible distributional method.\\n\\nA.2 Distributional Methods\\n\\nDistributional methods output a second-order input-conditional probability distribution over probability vectors \\\\( q(\\\\pi|x) \\\\).\"}"}
{"id": "x8RgF2xQTj", "page_num": 20, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A.2.1 Spectral Normalized Gaussian Process\\n\\nSpectral normalized Gaussian processes (SNGP) [32] give an approximate Bayesian treatment to obtain uncertainty estimates using spectral normalization of the parameter tensors and a last-layer Gaussian process approximated by Fourier features. For an input $x \\\\in X$, it predicts a multivariate Gaussian distribution $\\\\mathcal{N}(B\\\\phi(x), \\\\Phi^\\\\top \\\\Phi + I - 1 \\\\phi(x)I)$, where $B$ is a learned parameter matrix that maps from the pre-logits to the logits, and $\\\\phi(x) = \\\\cos(Wf_{L-1}(x) + b)$ is a random feature embedding of the input $x \\\\in X$ with $f_{L-1}(x)$ being a pre-logit embedding, $W$ a fixed semi-orthogonal random matrix, and $b$ a fixed random vector sampled from Uniform $(0, 2\\\\pi)$. $\\\\Phi^\\\\top \\\\Phi$ is the (unnormalized) empirical covariance matrix of the pre-logits of the training set. This is calculated during the last epoch. The multivariate Gaussian presented above can be Monte-Carlo sampled to obtain $M$ logit vectors. We use $M = 1000$ Monte-Carlo samples and did not notice differences between using $M \\\\in \\\\{10, 100, 1000, 10000\\\\}$ samples. Unless noted otherwise, we use $M = 1000$ for all other method that require Monte-Carlo sampling as well. During training, we calculate the BMA from the set of logits and use the cross-entropy loss to fit the BMA to the (one-hot) labels.\\n\\nThe method also applies spectral normalization to the hidden weights in each layer to satisfy input distance awareness. We treat whether to apply spectral normalization to the batch normalization modules and whether to use layer normalization in the GP layer as hyperparameters. We benchmark both SNGPs and their non-spectral-normalized variants (denoted by GP).\\n\\nA.2.2 Latent Heteroscedastic Classifier\\n\\nLatent heteroscedastic classifiers (HET-XL) [6] construct a heteroscedastic Gaussian distribution in the pre-logit layer to model per-input uncertainties: $\\\\mathcal{N}(\\\\phi(x), \\\\Sigma(x))$, where $\\\\phi(x)$ is the learned input-conditional pre-logit mean and $\\\\Sigma(x) = V(x)^\\\\top V(x) + \\\\text{diag}(d(x))$ is an input-conditional full-rank covariance matrix. Both the low-rank term's $V(x)$ and the diagonal term's $d(x)$ are calculated as a linear function of the layer's output before the pre-logit layer. One can Monte-Carlo sample the pre-logits from the above Gaussian distribution and obtain a set of logits by transforming each using the last linear layer of the network. During training, this set is used to calculate the Bayesian Model Average (BMA), the argmax of which is the final prediction. HET-XL uses a temperature parameter to scale the logits before calculating the BMA. This is chosen using a validation set. During training, we sample a set of logits, calculate the BMA, and use the cross-entropy loss to fit the BMA to the (one-hot) labels.\\n\\nA.2.3 Laplace Approximation\\n\\nThe Laplace approximation [8] approximates a Gaussian posterior $q(\\\\theta|D)$ over the network parameters for a Gaussian prior $p(\\\\theta)$ and likelihood defined by the network architecture. It uses the maximum a posteriori (MAP) estimate as the mean and the inverse Hessian of the loss evaluated at the MAP as the covariance matrix:\\n\\n$$\\\\mathcal{N}(\\\\theta_{\\\\text{MAP}}, \\\\partial^2 L(D; \\\\theta)_{\\\\partial \\\\theta_i \\\\partial \\\\theta_j}^{-1})$$\\n\\nThis is a post-hoc method applied to a point estimate network. Following the recommendation of Daxberger et al. [8], we employ a last-layer KFAC Laplace approximation and find the prior variance using cross-validation. We draw network outputs using the GLM predictive on CIFAR-10, and the NN predictive on ImageNet because of the infeasibility of calculating the network Jacobian for the GLM due to extreme memory requirements ($\\\\approx 450$ GB VRAM).\\n\\nA.2.4 SW AG\\n\\nThe Stochastic Weight Averaging\u2013Dropout [34] method takes a model that has either converged or is close to converging and fine-tunes it for a certain number of epochs while taking checkpoints.\"}"}
{"id": "x8RgF2xQTj", "page_num": 49, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.2: On CIFAR-10, the performance of the methods consistently drops on the correctness prediction task, both on completely OOD datasets (right column) and on balanced mixtures of ID and OOD datasets (left column).\"}"}
{"id": "x8RgF2xQTj", "page_num": 50, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.3: On CIFAR-10, all methods' performance deteriorates at the same rate as the model's accuracy on the correctness and abstinence tasks. The only exception is Mahalanobis, which is a specialized OOD detector.\"}"}
{"id": "x8RgF2xQTj", "page_num": 51, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.4: On ImageNet, the estimate for predictive correctness is much more robust to OOD perturbations than the model\u2019s accuracy for all methods except Mahalanobis (a specialized OOD detector). The AUC abstinence score deteriorates at the same rate as the model\u2019s accuracy, which is an inherent property of the metric as the accuracy lower bounds the abstinence AUC metric.\"}"}
{"id": "x8RgF2xQTj", "page_num": 52, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.5: The OOD detection performance of all methods increases steadily as we increase the severity of the perturbed half of the mixed dataset on the ImageNet validation dataset. However, the specialized OOD detector, Mahalanobis, generalizes worse than the other methods.\"}"}
{"id": "x8RgF2xQTj", "page_num": 21, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"of it at evenly spaced points. It keeps track of the averaged checkpoint weights and their low-rank covariance matrix. Once the fine-tuning is over, the method fits a Gaussian over the parameter space with mean and covariance matrix from the collected checkpoints. During inference, it samples the parameter-space posterior and uses these samples to make multiple predictions per input. Following \\\\[34\\\\], we sample \\\\(M = 30\\\\) parameters from the Gaussian posterior before evaluation and re-calculate the batch normalization statistics for each of them on a \\\\(0.1\\\\) fraction of the training dataset.\\n\\nA.2.5 MC Dropout\\n\\nMC Dropout \\\\[48\\\\] has been shown to be a variational approximation to a deep Gaussian process \\\\[12\\\\]. During training, only one logit vector per input is sampled, and the cross-entropy loss is used. MC Dropout in the realm of uncertainty quantification remains active during inference and is used to sample \\\\(M\\\\) logits by performing \\\\(M\\\\) forward passes. Therefore, it directly samples from \\\\(q(\\\\pi | x)\\\\) without characterizing it.\\n\\nA.2.6 HetClassNN\\n\\nThe Heteroscedastic Classification Neural Network (HetClassNN) \\\\[23\\\\] employs an output head that predicts input-conditional heteroscedastic logit variance vectors. During training, the method MC approximates the integral of the softmax probabilities with respect to the logit-space Gaussian and trains this Bayesian Model Average (BMA) with the cross-entropy loss. We call the logit samples from the Gaussian 'internal logits.' During inference, there is another meta MC sampling step of \\\\(M = 30\\\\) samples w.r.t. random dropout masks. This results in \\\\(M\\\\) outputs from the method, each of which is a Bayesian Model average of the logit-space Gaussian w.r.t a different dropout mask. We refer to the logarithms of these outputs as the 'external logits' or just 'logits.'\\n\\nA.2.7 Deep Ensemble\\n\\nDeep ensembles \\\\[29\\\\] are approximate model distributions that give rise to a mixture of Dirac deltas in parameter space:\\n\\n\\\\[\\nq(\\\\theta) = \\\\frac{1}{M} \\\\sum_{i=1}^{M} \\\\delta(\\\\theta - \\\\theta(i))\\n\\\\]\\n\\nPredominantly used to reduce the variance in the predictions and improve model accuracy, deep ensembles can also be used as approximators to the true distribution \\\\(p(\\\\theta)\\\\) induced by the randomness over datasets \\\\(D = \\\\{x(i), y(i)\\\\}_{i=1}^{n}, x(i) \\\\in X, y(i) \\\\in \\\\{1, \\\\ldots, C\\\\}\\\\) in the generative process \\\\(p_{\\\\text{data}}(x, y)\\\\).\\n\\nWe obtain a set of logits by performing a forward pass over all models. Similarly to MC Dropout, deep ensembles do not explicitly parameterize the distribution over the predictions \u2013 they only sample from it. We ensemble five independently trained cross-entropy models.\\n\\nA.2.8 Shallow Ensemble\\n\\nShallow ensembles \\\\[31\\\\] are lightweight approximations of deep ensembles. They use a shared backbone and \\\\(M\\\\) output heads (often referred to as \u201cexperts\u201d). With a single forward pass, one obtains \\\\(M\\\\) logit vectors per input. During training, the BMA of the \\\\(M\\\\) predictions is calculated and matched to the ground-truth labels.\\n\\nA.2.9 Evidential Deep Learning\\n\\nThe seminal evidential deep learning method of Sensoy et al. \\\\[46\\\\] (denoted by EDL following Ulmer et al. \\\\[50\\\\]) directly learns a second-order predictive distribution \\\\(q(\\\\pi | x)\\\\) using closed-form Bayesian inference. In particular, it learns an input-conditional Dirichlet posterior \\\\(q(\\\\pi | x) = \\\\text{Dir}(\\\\pi; \\\\beta(x))\\\\) with a fixed Dirichlet (conjugate) prior \\\\(\\\\text{Dir}(1)\\\\) representing a total lack of information and a categorical distribution over the classes as the likelihood. The logits of the network, \\\\(f(x)\\\\), are turned into pseudo-counts \\\\(\\\\alpha(x) \\\\in \\\\mathbb{R}^{C}_{+}\\\\) using either the exp or the softplus activation function. The posterior distribution is obtained in closed form by setting \\\\(\\\\beta(x) = \\\\alpha(x) + 1\\\\). The components of the IT decomposition can also be derived in closed form; see Ulmer et al. \\\\[50\\\\] for details.\"}"}
{"id": "x8RgF2xQTj", "page_num": 22, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"The loss of the EDL method has three components:\\n\\n\\\\[\\n\\\\text{Ledl} = \\\\sum_{i=1}^{n} \\\\left[ \\\\text{one}_\\\\text{hot}(y(i)) \\\\left( \\\\beta(x(i)) - \\\\sum_{c=1}^{C} \\\\beta(x(i)) S(x(i)) \\\\right) + \\\\lambda_t \\\\text{D}_{KL}(\\\\bar{\\\\beta}(x(i), y(i)), \\\\text{Dir}(1)) \\\\right]\\n\\\\]\\n\\nwhere \\\\( S(x) = \\\\sum_{c=1}^{C} \\\\beta(x) \\\\) and \\\\( \\\\bar{\\\\beta}(x, y) = \\\\text{one}_\\\\text{hot}(y) + (1 - \\\\text{one}_\\\\text{hot}(y)) \\\\cdot \\\\beta \\\\) is the Dirichlet parameter vector after removing the prediction corresponding to the label's index. The first term matches the mean of the Dirichlet posterior to the (one-hot) GT labels. The second term reduces the summed variance of each index \\\\( c \\\\in \\\\{1, \\\\ldots, C\\\\} \\\\) of the random variable distributed as the Dirichlet posterior. These two terms concentrate the Dirichlet density onto the one-hot label. The third term is a regularizer that drives all dimensions of the Dirichlet parameter vector toward a complete lack of knowledge except the one corresponding to the GT label.\\n\\n\\\\( \\\\lambda_t \\\\) is the scheduled trade-off factor at step \\\\( t \\\\). We use a linear up-scaling of \\\\( \\\\lambda_t \\\\) from 0 to \\\\( \\\\lambda_{\\\\text{max}} \\\\leq 1 \\\\). On CIFAR-10, \\\\( \\\\lambda_{\\\\text{max}} = 1 \\\\) is used following Sensoy et al. [46]. On ImageNet, this led to an overly strong regularizer that prohibited learning (as the regularizer's magnitude depends on the number of classes). We found \\\\( \\\\lambda_{\\\\text{max}} = 0.001 \\\\) to be a performant maximum trade-off factor for ImageNet.\\n\\nA.2.10 PostNet\\n\\nThe PostNet method of Charpentier et al. [4] builds upon the EDL method. PostNet also keeps the prior parameters fixed to 1, but instead of directly predicting pseudo-counts \\\\( \\\\alpha(x) \\\\), they are calculated as\\n\\n\\\\[\\n\\\\alpha(x)_c = n_c \\\\cdot p(\\\\phi(z(x)|c))\\n\\\\]\\n\\nwhere \\\\( z(x) \\\\) is the latent embedding of input \\\\( x \\\\in X \\\\), \\\\( n_c \\\\) is the number of training samples of class \\\\( c \\\\in \\\\{1, \\\\ldots, C\\\\} \\\\) and \\\\( p(\\\\phi(z(x)|c)) \\\\) is a class-conditional normalizing flow with parameters \\\\( \\\\phi \\\\). Intuitively, the class-conditional normalizing flows give soft class membership indicators to each input, and their indicators are weighted by the class size.\\n\\nThe PostNet method is trained with a regularized Uncertain Cross-Entropy (UCE) loss:\\n\\n\\\\[\\n\\\\text{Lpostnet} = \\\\sum_{i=1}^{n} E_{\\\\text{Dir}(\\\\pi|\\\\beta(x(i)))} \\\\left[ \\\\text{CE}(\\\\pi, \\\\text{one}_\\\\text{hot}(y(i))) - \\\\lambda \\\\text{H}_{\\\\text{Dir}}(\\\\beta(x(i))) \\\\right]\\n\\\\]\\n\\nWhile the first term drives \\\\( \\\\text{Dir}(\\\\beta(x)) \\\\) toward a Dirac distribution concentrated at the one-hot label, the second term maximizes the entropy of the Dirichlet posterior. The effect of each is determined by the trade-off factor \\\\( \\\\lambda \\\\).\\n\\nB Definition and Further Results of the Bregman Decomposition\\n\\nBregman decompositions [42, 19, 28, 17] use not only the second-order predictive distribution \\\\( q(\\\\pi|x) \\\\) but also take the ground-truth (GT) generative process \\\\( p_{\\\\text{data}}(x, y) \\\\) into account. Bregman decompositions break up the expected loss of a model over all possible training datasets. This variability is approximated by \\\\( q(\\\\pi|x) \\\\):\\n\\n\\\\[\\nE_{q(\\\\pi|x),p_{\\\\text{data}}}(y|x) = E_{p_{\\\\text{data}}}(y|x) \\\\left[ \\\\text{D}_{F}(\\\\text{one}_\\\\text{hot}(y) || \\\\pi) \\\\right] + E_{q(\\\\pi|x)} \\\\left[ \\\\text{D}_{F}(\\\\tilde{\\\\pi}(x) || \\\\pi) \\\\right] + \\\\text{D}_{F}(\\\\pi^*(x) || \\\\tilde{\\\\pi}(x))\\n\\\\]\\n\\nThe loss \\\\( \\\\text{D}_{F} \\\\) is a Bregman divergence induced by the strictly convex function \\\\( F \\\\), like the Euclidean distance or the KL divergence. Since \\\\( \\\\pi^*(x) = E_{p_{\\\\text{data}}}(y|x) \\\\left[ \\\\text{one}_\\\\text{hot}(y) \\\\right] \\\\) is the Bayes predictor, the aleatoric uncertainty is the Bayes risk of the generative process, which is irreducible and independent of the \\\\( q(\\\\pi|x) \\\\) distribution. As this process is unknown in practice, we estimate the aleatoric term by \\\\( E_{q(\\\\pi|x)} \\\\left[ H(\\\\pi) \\\\right] \\\\) to create estimators \u2013 but not for evaluation. Similarly to the IT decomposition, the epistemic uncertainty is the average distance of predictions \\\\( \\\\pi \\\\sim q(\\\\pi|x) \\\\) from their centroid, the \\\\( 22 \\\\) bias.\"}"}
{"id": "x8RgF2xQTj", "page_num": 23, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"dual BMA\\n\\n\\\\[ \\\\tilde{\\\\pi}(x) = \\\\arg \\\\min_{z \\\\in \\\\Delta C} -1 \\\\mathbb{E}_{q(\\\\pi| x)} [D_{\\\\mathcal{F}}[z \\\\parallel \\\\pi]] \\\\]  \\n\\nThis average is calculated in a dual space, but in certain cases, it is equal to the BMA [19]. The Bregman decomposition has an additional term, the bias \u2013 an uncertainty source that subsumes the uncertainty about the function class [54].\\n\\n**B.1 Special Form of the Bregman Decomposition for the Kullback-Leibler Divergence**\\n\\nWhen choosing \\\\( F(\\\\cdot) = -H(\\\\cdot) \\\\), we obtain \\\\( D_{\\\\mathcal{F}}[\\\\cdot \\\\parallel \\\\cdot] = D_{KL}(\\\\cdot \\\\parallel \\\\cdot) \\\\). Consider the predictive uncertainty term. A one-hot vector's entropy is zero; therefore, the predictive uncertainty becomes \\\\( \\\\mathbb{E}_{q(\\\\pi| x), p_{data}(y|x)} [CE(\\\\text{one-hot}(y), \\\\pi)] \\\\). The aleatoric term takes a convenient form:\\n\\n\\\\[ \\\\mathbb{E}_{p_{data}(y|x)} [D_{KL}(\\\\text{one-hot}(y) \\\\parallel \\\\pi^* (x))] = \\\\mathbb{E}_{p_{data}(y|x)} \\\\left( \\\\sum_{c=1}^{C} \\\\text{one-hot}(y) c \\\\log \\\\pi^* c (x) \\\\right) \\\\]\\n\\n(23)\\n\\nOn datasets with multiple labels per input, this quantity is precisely the entropy of the (normalized) label distribution corresponding to the labeler votes.\\n\\nTo calculate \\\\( \\\\tilde{\\\\pi}(x) \\\\), we can proceed as follows.\\n\\n\\\\[ \\\\tilde{\\\\pi}(x) = \\\\arg \\\\min_{z \\\\in \\\\Delta C} -1 \\\\mathbb{E}_{q(\\\\pi| x)} \\\\left[ D_{KL}(z \\\\parallel \\\\pi(x)) \\\\right] \\\\]\\n\\n(24)\\n\\n\\\\[ = \\\\arg \\\\min_{z \\\\in \\\\Delta C} -1 \\\\sum_{c=1}^{C} z c \\\\log z c - \\\\sum_{c=1}^{C} z c \\\\log \\\\exp \\\\mathbb{E}_{q(\\\\pi| x)} [\\\\log \\\\pi c] \\\\]\\n\\n(25)\\n\\n\\\\[ = \\\\arg \\\\min_{z \\\\in \\\\Delta C} -1 \\\\sum_{c=1}^{C} z c \\\\log z c - \\\\sum_{c=1}^{C} z c \\\\log \\\\exp \\\\mathbb{E}_{q(\\\\pi| x)} [\\\\log \\\\pi c] + \\\\left| \\\\sum_{c=1}^{C} \\\\exp \\\\mathbb{E}_{q(\\\\pi| x)} [\\\\log \\\\pi c] \\\\right| \\\\]\\n\\n(26)\\n\\n\\\\[ = \\\\arg \\\\min_{z \\\\in \\\\Delta C} -1 \\\\sum_{c=1}^{C} z c \\\\log z c - \\\\sum_{c=1}^{C} z c \\\\log \\\\exp \\\\mathbb{E}_{q(\\\\pi| x)} [\\\\log \\\\pi c] \\\\]\\n\\n(27)\\n\\n\\\\[ = \\\\arg \\\\min_{z \\\\in \\\\Delta C} -1 \\\\sum_{c=1}^{C} z c \\\\log z c - \\\\sum_{c=1}^{C} z c \\\\log \\\\exp \\\\mathbb{E}_{q(\\\\pi| x)} [\\\\log \\\\pi c] \\\\]\\n\\n(28)\\n\\n\\\\[ = p \\\\]  \\n\\n(29)\\n\\nTherefore, \\\\( \\\\tilde{\\\\pi}(x) = \\\\text{softmax} \\\\mathbb{E}_{q(\\\\pi| x)} [\\\\log \\\\pi] \\\\), where \\\\( \\\\log \\\\) is applied elementwise.\\n\\n**B.2 DEUP is a Special Case of Bregman**\\n\\nAs mentioned in Appendix B, a closely related formula to Bregman is the risk decomposition of Lahlou et al. [28] where the predictive uncertainty is directly equated to the risk of a deterministic predictor \\\\( \\\\pi : X \\\\rightarrow \\\\Delta C - 1 \\\\), not an expectation of risks over datasets or hypothesis distributions:\\n\\n\\\\[ R(\\\\pi, x) \\\\big|_{\\\\text{predictive}} = R(\\\\pi^* , x) \\\\big|_{\\\\text{aleatoric}} + R(\\\\pi, x) - R(\\\\pi^* , x) \\\\big|_{\\\\text{bias}} \\\\]\\n\\n(30)\\n\\nwhere \\\\( R(\\\\pi, x) = \\\\mathbb{E}_{p_{data}(y|x)} [L(\\\\pi(x), y)] \\\\) is the pointwise risk of \\\\( \\\\pi \\\\) at \\\\( x \\\\in X \\\\). When choosing \\\\( L \\\\) to be the squared Euclidean distance or the Kullback-Leibler divergence, Equation 30 becomes a special case of Equation 22 for a Dirac distribution \\\\( q(\\\\pi'| x) = \\\\delta(\\\\pi' - \\\\pi(x)) \\\\) at the deterministic prediction \\\\( \\\\pi(x) \\\\). This formulation is desired when one wants the predictive uncertainty to be aligned with the risk of one particular predictor and not the expected risk over a hypothesis distribution.\\n\\n**B.3 Correlation of Components and Limitations**\\n\\nLet us carry out the same experiments for Bregman as we did for the IT decomposition in Section 3.1 of the main paper. As the Bregman and DEUP decompositions (Equations 22 and 30) consider the\"}"}
{"id": "x8RgF2xQTj", "page_num": 24, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure B.1: Left. On ImageNet-ReaL, the rank correlation of the Bregman aleatoric and bias terms is between 0.45 and 0.52 for all distributional methods we benchmark. Note that the maximal rank correlation is less than one due to ties in the GT aleatoric uncertainties. Right. The Bregman decomposition shows similar rank correlation results to the IT decomposition between the estimated aleatoric uncertainty and the epistemic component on the ImageNet validation dataset (Fig. 2a).\\n\\nFigure B.2: Left. The rank correlation of the Bregman aleatoric and bias GT terms is above 0.59 for all methods we benchmark on CIFAR-10. Note that the maximal rank correlation is less than one due to ties in the GT aleatoric uncertainties. Right. On CIFAR-10, the Bregman decomposition shows similarly strong rank correlation results between the estimated aleatoric uncertainty and the epistemic component as the IT decomposition does in Fig. 2b.\\n\\nB.3.1 ImageNet\\nOn the right of Fig. B.1, we can see that the correlation between the aleatoric and epistemic components of the Bregman decomposition is similarly high as for the IT decomposition in the main paper. The Bregman decomposition also has a bias term. On the left of Fig. B.1, we show that there is a considerable rank correlation between the Bregman ground-truth aleatoric and bias components. However, this is not severe enough to prevent the theoretical possibility of disentangling them via estimators.\\n\\nB.3.2 CIFAR-10\\nWe see in Fig. B.2 (right) that the results using Bregman are virtually the same as those of the IT decomposition: most distributional methods exhibit very high rank correlations. As for the aleatoric and bias components, Fig. B.2 (left) shows that they have a high correlation on CIFAR-10 even when we use the GT values. Hence, there seems to be a fundamental limitation in disentangling them, no matter which estimators are used to approximate the GT values.\\n\\nB.4 Disentangling Epistemic and Aleatoric Uncertainty via Decomposition Formulas Is Feasible\\nIn this section, we present the rank correlation between the ground-truth aleatoric uncertainty and the models' epistemic uncertainties. This serves to capture an inevitable level of correlation between these uncertainty sources, as measured (and defined) by the Bregman decomposition.\"}"}
{"id": "x8RgF2xQTj", "page_num": 53, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.6: On CIFAR-10, the OOD detection performance of all methods increases steadily as we increase the severity of the perturbed half of the mixed dataset. The relative distance between Mahalanobis and the other methods decreases with increasing severity level.\\n\\nFigure H.7: ImageNet ambiguous input detection results. The ranking is considerably different from the ranking with the continuous ground truths in Fig. 3b.\\n\\nFigure H.8: CIFAR-10 ambiguous input detection results. The Correctness Prediction method is most aligned with human uncertainties. The methods are ranked the same as when using the rank correlation in Fig. G.2, except for MC Dropout.\"}"}
{"id": "x8RgF2xQTj", "page_num": 54, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure H.9: ImageNet abstained prediction evaluation on the E-AURC (left) and the rAULC (right) metric. Even though both metrics are normalized by the underlying model's accuracy, this normalization is done in different ways, and the rankings of methods are quite different, e.g., for PostNet and SNGP.\\n\\nFigure H.10: CIFAR-10 abstained prediction evaluation on the E-AURC (left) and the rAULC (right) metric. While deep ensembles are best according to both metrics, the rankings of methods are quite different.\"}"}
{"id": "x8RgF2xQTj", "page_num": 55, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.11: On ImageNet, most methods consistently outperform the cross-entropy baseline on average, both ID and OOD for all severity levels when evaluating on the log probability proper scoring rule for correctness prediction. The EDL method performs best across all settings.\"}"}
{"id": "x8RgF2xQTj", "page_num": 56, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure H.12: On CIFAR-10, the deep ensemble is a consistently robust method both ID and OOD for all but one severity level when evaluating on the log probability proper scoring rule for correctness prediction.\"}"}
{"id": "x8RgF2xQTj", "page_num": 33, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"the (discretized) epistemic part of the IT decomposition, which is the Jensen-Shannon Divergence (see Appendix C.1), or\\n\\n\\\\[ u(x) = 1 \\\\begin{array}{c} \\\\sum_{m=1}^{M} h_{D_{KL}}(\\\\tilde{\\\\pi}(x)|\\\\pi(m)) \\\\end{array}, \\\\] (45)\\n\\nthe (discretized) epistemic part of the Bregman decomposition, which is the expected divergence from the central predictor (see Appendix B.1). As both aggregators are divergences, they capture disagreement among a set of models. Thus, they are usually cited to be aligned with epistemic uncertainty [37, 11, 57, 19, 17].\\n\\nKendall and Gal [23] propose the expected variance of the logit or probability vectors as a measure of epistemic uncertainty:\\n\\n\\\\[ u(x) = 1 \\\\begin{array}{c} \\\\sum_{c=1}^{C} \\\\left( \\\\frac{1}{M} \\\\sum_{m=1}^{M} f(m)c(x) \\\\right) - \\\\left( \\\\frac{1}{M} \\\\sum_{m=1}^{M} f(m)c(x) \\\\right)^{2} \\\\end{array}, \\\\] (46)\\n\\n\\\\[ u(x) = 1 \\\\begin{array}{c} \\\\sum_{c=1}^{C} \\\\left( \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\pi(m)c(x) \\\\right) - \\\\left( \\\\frac{1}{M} \\\\sum_{m=1}^{M} \\\\pi(m)c(x) \\\\right)^{2} \\\\end{array}. \\\\] (47)\\n\\nFor the HetClassNN method, we also calculate these estimates using the internal logits.\\n\\nUnless stated otherwise, we use the best-performing alternative for each distributional method in the benchmarks. For these methods, the model's prediction is always the most confident class of the BMA. For deterministic methods, we use their \\\"canonical\\\" uncertainty estimator introduced in Appendix A.1.\\n\\nD.4 Dempster-Shafer Value\\n\\nThe Dempster-Shafer (D-S) value Sensoy et al. [46] is an outlier: it does not fit into any of the aforementioned aggregator categories. In the framework of Evidential Deep Learning (see Appendix A.2.9), the D-S value is inversely proportional to the Dirichlet strength\\n\\n\\\\[ S(x) = P_{c=1}^{C} \\\\beta_{c}(x) \\\\]\\n\\nfor input \\\\( x \\\\in X \\\\):\\n\\n\\\\[ u(x) = 1 \\\\sum_{c=1}^{C} S(x)^{c}. \\\\] (48)\\n\\nInformally, the more evidence the predictor has, the less uncertain it is about the input \\\\( x \\\\in X \\\\).\\n\\nThe D-S value can be extended to non-evidential methods by treating the exponentiated logits as pseudo-counts for the individual classes and setting\\n\\n\\\\[ \\\\beta(x) = \\\\exp (f(x)) + 1. \\\\] (49)\\n\\nwhere the exponentiation is applied elementwise, and the \\\\( + \\\\) operator denotes vector addition.\\n\\nD.5 The Behavior of the Aggregators Does Not Align With What the Literature Suggests\\n\\nIn this section, we collect per-aggregator results of specific methods to highlight that the best-performing aggregator often goes against what these aggregators intuitively aim to capture as described in Appendix D. Below, we provide a list of abbreviations used in the figures and connect them to the formulas in Appendix D. The \\\"it\\\" and \\\"b\\\" superscripts refer to the IT and Bregman decompositions, respectively. \\\"AU\\\", \\\"PU\\\", \\\"EU\\\", and \\\"B\\\" are shorthands for aleatoric, predictive, etc.\"}"}
{"id": "x8RgF2xQTj", "page_num": 34, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"where $\\\\pi(m) \\\\sim q(\\\\pi|x)$, $\\\\pi(m) = \\\\text{softmax}(f) \\\\forall m \\\\in \\\\{1, \\\\ldots, M\\\\}$.\\n\\nD.5.1 Aleatoric and predictive aggregators are often best for OOD detection\\n\\nLet us consider the binary prediction task of distinguishing ID and OOD samples. Fig. D.1 and Fig. D.2 show the per-aggregator results on the OOD detection task for the GP and MC Dropout methods, respectively. These figures highlight two important observations:\\n\\n1. the best aggregator for the task varies among different methods and\\n2. the disagreement-based epistemic uncertainty aggregators are often not the best for detecting OOD samples, against their original intuition.\\n\\nBoth results show that the choice of the estimator should be treated pragmatically based on per-performance because there are no intuitions that would consistently give the best estimator in each scenario.\\n\\nD.5.2 Methods are not equally sensitive to the choice of aggregator on correctness prediction\\n\\nLet us turn to the binary correctness prediction task. Fig. D.3 and Fig. D.4 show the per-aggregator results on the correctness prediction detection task for the HET-XL and Deep Ensemble methods, respectively. These figures show that HET-XL is considerably less sensitive to the choice of the\"}"}
{"id": "x8RgF2xQTj", "page_num": 35, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure D.1: OOD detection results of the GP method on the ImageNet validation dataset measured by the AUROC metric. The OOD detection performance of all aggregators increases steadily as we increase the severity of the perturbed half of the mixed dataset. However, the disagreement-based epistemic aggregators, EU\\\\textsuperscript{it} and EU\\\\textsuperscript{b}, notably underperform the AU\\\\textsuperscript{it} aggregator, even though the epistemic aggregators are deemed more suitable for OOD detection in the literature.\\n\\nThe epistemic aggregators are among the worst-performing estimates for deep ensembles. One might say that this is in line with their intuitions, as they are being used ID, but on HET-XL, they perform as strongly as predictive estimators. This reinforces that intuitions should not be used to guide the aggregator choice and to rather treat it as a hyperparameter for optimal performance.\\n\\n**E Goals of Disentanglement**\\n\\nWhat does it mean to have disentangled uncertainty estimators? Consider two estimators \\\\( u(a)(x) \\\\), \\\\( u(e)(x) \\\\) and ground-truth aleatoric and epistemic uncertainties \\\\( U(a)(x) \\\\), \\\\( U(e)(x) \\\\) for each input \\\\( x_i \\\\). The estimators \\\\( u(a) \\\\) and \\\\( u(e) \\\\) are decorrelated if\\n\\n1. \\\\( u(a) \\\\) has low rank correlation with \\\\( U(e) \\\\) and\\n2. \\\\( u(e) \\\\) has low rank correlation with \\\\( U(a) \\\\).\\n\\nImportantly, \\\\( u(a) \\\\) and \\\\( u(e) \\\\) having a severely high rank correlation prohibits disentanglement. Further, they are well-performing if\\n\\n3. \\\\( u(a) \\\\) has high rank correlation with \\\\( U(a) \\\\) and\\n4. \\\\( u(e) \\\\) has high rank correlation with \\\\( U(e) \\\\).\"}"}
{"id": "x8RgF2xQTj", "page_num": 36, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure D.2: OOD detection results of the MC Dropout method on the ImageNet validation dataset measured by the AUROC metric. Contrarily to the GP method in Fig. D.1, the disagreement-based epistemic aggregators are on par with the predictive and aleatoric aggregators but lose their edge as the severity level increases.\\n\\nWe call uncertainty estimators disentangled when they are simultaneously decorrelated and well-performing. Inspired by generalized bias-variance decompositions [42, 17], one may treat the training dataset $D$ as a random variable sampled from the generative process $p(x, y)$ and record the variability of the trained predictor under dataset change. Following the Bregman decomposition, one may then define $U(e)(x) := E_{p(D)}[DF[\\\\tilde{\\\\pi}(x) \\\\parallel \\\\pi_D(x)]]$ (64) with the corresponding central predictor $\\\\tilde{\\\\pi}(x) = \\\\arg \\\\min_{z \\\\in \\\\Delta_C - 1} E_{p(D)}[DF[z \\\\parallel \\\\pi_D(x)]]$. As this is impossible to obtain in practical setups (or is too noisy to MC-approximate), we instead consider the proxy task of OOD detection for evaluating the disentanglement of aleatoric and epistemic uncertainties. The above definition generalizes to any pair of different uncertainty sources, e.g., the Bregman bias and aleatoric uncertainties. The workaround of choosing a proxy task is not needed to evaluate the Bregman bias and aleatoric components' disentanglement.\\n\\nF Design Choices\\nIn this section, we provide the rationale behind which metrics we report for each section.\"}"}
{"id": "x8RgF2xQTj", "page_num": 57, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"| Method  | Correctness AUROC | -ECE | Correctness Brier | Correctness Log Prob. | Aleatoric AUROC | Accuracy | Aleatoric Log Prob. | Aleatoric Brier | AUAC | OOD AUROC |\\n|---------|-------------------|------|-------------------|-----------------------|-------------------|---------|-------------------|----------------|------|-----------|\\n| Method 1 | 1.0               | 0.15 | 0.76              | 0.6                   | 0.8               | 0.37    | 0.03              | -0.09          | 0.15 | 1.0       |\\n| Method 2 | 0.59              | 0.22 | 0.76              | 0.22                  | 0.13              | 0.4     | 0.15              | 0.13           | 0.4  | 0.16      |\\n| Method 3 | 0.93              | 0.72 | 0.49              | 0.22                  | 0.22              | 0.35    | 0.16              | 0.38           | 0.26 | 0.4       |\\n| Method 4 | 0.69              | 0.6  | 0.35              | 0.16                  | 0.02              | 0.91    | 1.0               | 0.08           | 0.27 | 0.1        |\\n| Method 5 | 0.29              | 0.49 | 1.0               | 0.91                  | -0.03             | 0.08    | 1.0               | 0.08           | 0.27 | 0.1        |\\n| Method 6 | -0.03             | 0.03 | 0.13              | 0.22                  | -0.09             | 0.4     | 0.22              | 0.38           | 0.26 | 0.4       |\\n\\nFigure H.13: Spearman correlation of metric pairs across all methods and aggregators on the ImageNet validation set. The correlations are similar to those of the linear correlation in Fig. 6. Only some of the considered metrics have a very high rank correlation among methods on the ImageNet validation dataset: most capture different aspects of uncertainty methods.\\n\\nFigure H.14: Pearson correlation of metric pairs across all methods and aggregators on the ImageNet validation set. Extended version of Fig. 6.\"}"}
{"id": "x8RgF2xQTj", "page_num": 58, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure H.15: Spearman correlation variant of Fig. H.14.\\n\\n(a) Trained on 10% of CIFAR-10.\\n\\n(b) Trained on 50% of CIFAR-10.\\n\\n(c) Trained on 100% of CIFAR-10.\\n\\nFigure H.16: Gaussian kernel density estimates of the EDL method's aleatoric and epistemic uncertainties of the IT decomposition when trained on different CIFAR-10 portions.\\n\\nFigure H.17: Kendall and Gal Rank Correlation scores for different methods on ImageNet. This formulation uses the expected variance of the probability vectors as epistemic and the expected entropy as aleatoric uncertainty. We report the mean rank correlation across five seeds.\"}"}
{"id": "x8RgF2xQTj", "page_num": 59, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure J.1: Easy ImageNet-ReaL cases with no human disagreement on the labels. OOD samples are of severity two.\"}"}
{"id": "x8RgF2xQTj", "page_num": 60, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure J.2: Hard ImageNet-ReaL cases with high human uncertainty (i.e., high disagreement among annotators on the correct label). OOD samples are of severity two.\\n\\nFigure J.3: Histograms of the label distributions of the ImageNet-ReaL validation set.\"}"}
{"id": "x8RgF2xQTj", "page_num": 37, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"F.1 Disentanglement Experiments\\nIn Appendix E, we motivate that disentangled uncertainty estimators for epistemic and aleatoric uncertainty should be decorrelated. To quantify this, we measure the Spearman rank correlation. The Spearman rank correlation can detect any monotonic dependency between two continuous variables. Hence, in this case it will allow us to detect whether the aleatoric uncertainties are always high when the epistemic uncertainties are high. We choose this over the Pearson correlation, as the Pearson correlation can only detect linear dependencies. Although we have seen in Fig. 1 that the dependencies are, in fact, often linear, we chose the Spearman correlation because it still works even if two estimators are beyond linear correlation.\\n\\nF.2 Epistemic Uncertainty Experiments\\nWe use OOD detection as a prominent proxy task for epistemic uncertainty. In OOD detection, some samples are from the ID dataset, and some are OOD. In other words, the true uncertainty here surfaces in two classes, and we want the estimated uncertainty to be higher for OOD samples than for ID samples. Such cases of a binary outcome variable predicted with a continuous estimator in a given direction can be handled by the AUROC. It measures the probability that an OOD sample will have a higher estimated uncertainty than an ID sample.\\n\\nF.3 Aleatoric Uncertainty Experiments\\nIn the aleatoric uncertainty experiments, we check whether the estimated uncertainty is predictive of the true aleatoric uncertainty. The estimated uncertainty is a continuous variable, as are the true aleatoric uncertainty values. Hence, we again need a correlation metric. We again decide on the Spearman rank correlation because it can detect non-linear, monotonic relationships, and there is no prior reason to believe that, e.g., the disagreement aggregator of ensembles as an uncertainty estimator should behave linearly the same as the aleatoric uncertainty ground-truths.\\n\\nThe aleatoric ground truths are, however, often equal to zero (when all annotators agree), and one can argue that the exact amount of disagreement between humans when it is non-zero is quite noisy. This is why we also report a binarized version of the aleatoric GT uncertainty in Appendix H.4. Now, the estimated uncertainty is continuous while the GT is binary (with a direction, i.e., that GT uncertain samples should have higher predicted uncertainties). So, like above, we measure the AUROC.\\n\\nG Main CIFAR-10 Experiments\\nThis section mirrors Section 3 of the main paper on the CIFAR-10 dataset whenever they were not already studied in the main paper.\\n\\nG.1 Epistemic Uncertainty: Specialized Uncertainty Estimators detect OOD Inputs the Best\\nWe use balanced mixtures of ID and OOD datasets to evaluate OOD detection performance as a proxy for epistemic uncertainty. OOD samples are perturbed ID samples with severity level two. The uncertainty estimators are tasked to predict which sample is OOD, i.e., OOD inputs should have higher uncertainty estimates. As for ImageNet in Section 3.2, the Mahalanobis method is by far the most performant in telling apart clean CIFAR-10 samples from perturbed ones. However, the ranking of the remaining methods is different from that of ImageNet.\\n\\nG.2 Aleatoric Uncertainty: No Method With Outstanding Performance\\nLet us now benchmark how much the estimators predict aleatoric uncertainties on CIFAR-10. Since we use the entropy of human annotator label distributions as ground truths, this could also be considered the alignment with human uncertainties. Fig. G.2 shows drastically different results from the ImageNet results in Section 3.3. Correctness prediction is most aligned on average with a notably small min-max error bar. This is reasonable since ID, the aleatoric uncertainty of the sample determines the network's correctness the most.\\n\\n5 SWAG and Loss Prediction, methods that\\n\\nNote that we train with only one label per input.\\n\\n37\"}"}
{"id": "x8RgF2xQTj", "page_num": 38, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"performed worse than the CE baseline on ImageNet, now perform among the best. This again shows that rankings from CIFAR-10 are not very informative of ImageNet rankings, especially because the ground-truth soft-label distributions on CIFAR-10H and ImageNet-ReaL-H were collected with slightly different protocols.\\n\\nG.3 Predictive Uncertainty: Close to Saturation on CIFAR-10\\n\\nFig. G.3 shows that most uncertainty estimators perform within \u00b10.02 of the cross-entropy baseline when predicting correctness ID, and modern methods like HET-XL do not outperform older methods like deep ensembles. The best methods are saturated at very high AUROCs of 0.95. The methods are also close to the CE baseline (but with a different ranking) when slightly altering the correctness metric to account for soft labels in Appendix H.1.\\n\\nThe saturation is even more pronounced on the abstained prediction task. All uncertainty methods apart from Mahalanobis obtain an AUC score greater than 0.99 in Fig. G.4. Practically, this means that one can obtain a close-to-perfect classification accuracy by abstaining from prediction on a tiny set of samples. This is largely because the classification accuracy on CIFAR-10 is very high, so the AUAC, even of methods with worse ID uncertainty estimation like Mahalanobis, is close to perfect.\\n\\nG.4 Different Tasks Require Different Estimators\\n\\nIn the previous sections, we have hinted at the fact that the performance across methods is very similar on some tasks and dissimilar on others. In this section, we investigate the correlation among the previous practical tasks using a correlation matrix. To construct the matrix, we consider all benchmarked methods with all uncertainty aggregators (see Appendix D) and calculate the Pearson (Fig. G.5) and Spearman correlations (Fig. G.6) of performances on different metrics. Similar to ImageNet, we find consistent clusters between the Pearson and Spearman correlations. One similarity to ImageNet is also that the OOD cluster repels the other clusters. However, the aleatoric cluster on CIFAR-10H forms a unique cluster, whereas it was correlated with the Accuracy cluster on ImageNet. We believe this is due to the different ways the soft labels were obtained on ImageNet-ReaL and CIFAR-10H.\\n\\nH Further Practical Results\\n\\nH.1 Correctness Prediction\\n\\nH.1.1 ImageNet\\n\\nWe show the correctness prediction performance of methods on OOD and mixed ID + OOD datasets in Fig. H.1. Like in the main paper, evidential deep learning methods, EDL and PostNet, dominate on the correctness prediction task across all severity levels and mixtures. The performance of Mahalanobis increases on mixed datasets as it can detect OOD samples well, which happen to also be incorrect more often.\\n\\nH.1.2 CIFAR-10\\n\\nWe show the correctness prediction performance of methods on OOD and mixed ID + OOD datasets in Fig. H.2. We observe a consistent degradation of performance across methods on both dataset types.\\n\\nH.2 Performance Tendency for Increasing Severity\\n\\nIn Section 3.6 of the main paper, we show the performance of MC Dropout when going OOD, claiming that it is prototypical for other methods. Figs. H.3 and H.4 show for CIFAR-10 and ImageNet, respectively, that MC Dropout is not an outlier and other methods show very similar generalization capabilities. The only outlier is Mahalanobis, which has a bad correctness AUROC regardless of whether it is ID or OOD. In Figs. 7a, H.3 and H.4, we normalize the metrics using the formula \\\\( \\\\frac{\\\\text{metric} - \\\\text{rnd}}{1 - \\\\text{rnd}} \\\\) for direct comparability, where rnd is the base value that a random predictor achieves on that metric (0.5 for AUROC, \\\\( \\\\frac{1}{C} \\\\) for classification accuracy).\"}"}
{"id": "x8RgF2xQTj", "page_num": 39, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"H.3 OOD Detection\\n\\nH.3.1 ImageNet\\n\\nIn Appendix G.1, we hint at the fact that nearly all methods show a steady increase in OOD detection performance as we increase the severity of the perturbed half of the dataset. Fig. H.5 shows how the performance of each method changes as we increase the severity level. We can see a steady increase in OOD detection performance for all methods. However, the specialized OOD detector, Mahalanobis, benefits less than the other methods. In particular, at severity level three, shallow and deep ensembles overtake Mahalanobis and remain the best estimators from then on. At severity levels four and five, Mahalanobis falls below the CE baseline. This may be because Mahalanobis was trained to detect samples at severity level two and cannot generalize as well to higher severity levels as the other methods.\\n\\nH.3.2 CIFAR-10\\n\\nFig. H.6 shows the OOD detection performance of the benchmarked methods as we increase the severity level. We can see a steady increase in the performance for all methods. However, the relative distance of the specialized OOD detector, Mahalanobis, to the other methods shrinks. This could, however, be because it is the first to arrive at a higher, possibly saturated, performance.\\n\\nH.4 Ambiguous Input Detection\\n\\nIn this section, we consider an alternative task to evaluate the alignment of methods with aleatoric uncertainty. It is a binary prediction problem where the positive samples are ones with a non-deterministic GT soft label distribution, i.e., where annotators do not unanimously agree on the class of the sample. We evaluate the AUROC of uncertainty estimators on this binary task.\\n\\nH.4.1 ImageNet\\n\\nImageNet ambiguous input detection results are shown in Fig. H.7. Method rankings are different from the continuous rankings in Fig. 3b. This indicates that, on ImageNet, the uncertainty estimators also differ in their performance on ranking within the ambiguous images.\\n\\nH.4.2 CIFAR-10\\n\\nAmbiguous input detection results on CIFAR-10 are shown in Fig. H.8. Interestingly, the ranking of methods is the same as when using rank correlations in Fig. G.2, except for MC Dropout. This could indicate that, on CIFAR-10, most of the rankings in the rank correlations come from the methods telling apart samples with and without uncertainty, and that the ranking within the uncertain images does not make too much of a difference, or that none of the benchmarked methods (except possibly MC Dropout) is much better than the others in this.\\n\\nH.5 Abstained Prediction Results on the rAULC and E-AURC Metrics\\n\\nIn this section, we evaluate the benchmarked methods on the rAULC and E-AURC abstained prediction metrics that normalize the AUAC by the accuracy of the underlying model [43, 14].\\n\\nH.5.1 ImageNet\\n\\nImageNet rAULC and E-AURC results are shown in Fig. H.9. Even though both metrics are normalized by the underlying model's accuracy, this normalization is done in different ways, and the rankings of methods are quite different.\\n\\nH.5.2 CIFAR-10\\n\\nFig. H.10 shows CIFAR-10 rAULC and E-AURC results for abstained prediction. The ranking is similar to that of AUROC and non-normalized AUAC, as foreshadowed by the correlation matrix in Fig. G.5.\"}"}
{"id": "x8RgF2xQTj", "page_num": 40, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"H.6 Log Probability Proper Scoring Rule for Correctness Prediction\\n\\nH.6.1 ImageNet\\n\\nResults on the log probability proper scoring rule are shown in Fig. H.11. The EDL method consistently outperforms all other methods across all severity levels. The performance of all methods stays roughly constant as we increase the severity.\\n\\nH.6.2 CIFAR-10\\n\\nIn Fig. H.12, we present the methods' results on the log probability proper scoring rule considering the CIFAR-10 dataset. We find that the Deep Ensemble consistently outperforms the others ID and OOD in all but one scenario.\\n\\nH.7 Correlation Matrices of Metrics on ImageNet\\n\\nAll correlation matrices in this paper are constructed using the following procedure. First, the results of all methods on all metrics are collected. We consider three aggregators for all methods: \\\\( \\\\max \\\\bar{\\\\pi} \\\\), \\\\( \\\\max \\\\tilde{\\\\pi} \\\\), and \\\\( \\\\mathbb{E}[\\\\max \\\\pi] \\\\), using the notation introduced in Appendix D.5. These are the only aggregators that are restricted to the \\\\([0, 1]\\\\) interval, which is needed for the ECE metric and the proper scoring rules for correctness prediction. On a particular metric, each (method, aggregator) pair gives rise to one score. For each metric pair, we calculate the Pearson and Spearman correlations between the corresponding rankings of (method, aggregator) pairs.\\n\\nFig. 6 of the main paper shows Pearson correlation results on ImageNet among eight metrics, showcasing two clusters of metrics. Fig. H.13 shows the Spearman correlation results. The results are stable across these different metrics.\\n\\nTo give a more comprehensive overview of metric correlations, Fig. H.14 shows an extended correlation matrix. This matrix contains further abstinence and aleatoric uncertainty metrics, coupled with proper scoring rules for the models' predictions. Most of the added metrics fall into the bottom-right cluster. Interestingly, even though the \\\\( r\\\\text{AULC} \\\\) and \\\\( E\\\\text{-AURC} \\\\) metrics both evaluate abstained prediction performance, only the latter is highly correlated with the \\\\( \\\\text{AUAC} \\\\) metric. The \\\\( r\\\\text{AULC} \\\\) metric is more aligned with correctness prediction (corr. = 0.98). The rank correlation results are, again, similar but more pronounced; see Fig. H.15.\\n\\nH.8 Correlations of Rankings Between Datasets\\n\\nTable H.1 shows the correlation of rankings on CIFAR-10 and ImageNet. Nine of thirteen metrics have substantially different rankings (rank. corr < 0.5). On nine of the thirteen metrics, the best-performing method also differs between the two datasets, indicating that performance on CIFAR-10 should not be taken as an estimate for ImageNet performance.\\n\\nH.9 Training on Different Training Dataset Fractions of CIFAR-10\\n\\nThis subsection shows how the uncertainties reported by different distributional methods change as we vary the training dataset size. In particular, we train on \\\\{10\\\\%, 50\\\\%, 100\\\\%\\\\} of CIFAR-10 from scratch and evaluate the trained models on the CIFAR-10 test set.\\n\\nTable H.2 shows that for the majority of the benchmarked methods, both the mean epistemic and aleatoric uncertainties of the IT decomposition decrease monotonically with an increasing training dataset size. Table H.3 shows the results using the estimators of Kendall and Gal [23], and Table H.4 shows the results of the Bregman decomposition. Fig. H.16 visualizes this tendency for the EDL method but also highlights the extreme correlation (0.9993) between the aleatoric and epistemic estimates.\\n\\nFig. H.17 shows that the severe rank correlations between the aleatoric and epistemic estimates remain when using the formulation of Kendall and Gal [23].\"}"}
{"id": "x8RgF2xQTj", "page_num": 61, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure J.4: Histograms of the label distributions of the CIFAR-10H validation set.\"}"}
{"id": "x8RgF2xQTj", "page_num": 62, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"1. Claims\\n\\nQuestion: Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope?\\n\\nAnswer: Yes\\n\\nJustification: Each section title summarizes the findings and we clearly highlight which methods we test on which datasets.\\n\\nGuidelines:\\n- The answer NA means that the abstract and introduction do not include the claims made in the paper.\\n- The abstract and/or introduction should clearly state the claims made, including the contributions made in the paper and important assumptions and limitations. A No or NA answer to this question will not be perceived well by the reviewers.\\n- The claims made should match theoretical and experimental results, and reflect how much the results can be expected to generalize to other settings.\\n- It is fine to include aspirational goals as motivation as long as it is clear that these goals are not attained by the paper.\\n\\n2. Limitations\\n\\nQuestion: Does the paper discuss the limitations of the work performed by the authors?\\n\\nAnswer: Yes\\n\\nJustification: In Section 5.\\n\\nGuidelines:\\n- The answer NA means that the paper has no limitation while the answer No means that the paper has limitations, but those are not discussed in the paper.\\n- The authors are encouraged to create a separate \u201cLimitations\u201d section in their paper.\\n- The paper should point out any strong assumptions and how robust the results are to violations of these assumptions (e.g., independence assumptions, noiseless settings, model well-specification, asymptotic approximations only holding locally). The authors should reflect on how these assumptions might be violated in practice and what the implications would be.\\n- The authors should reflect on the scope of the claims made, e.g., if the approach was only tested on a few datasets or with a few runs. In general, empirical results often depend on implicit assumptions, which should be articulated.\\n- The authors should reflect on the factors that influence the performance of the approach. For example, a facial recognition algorithm may perform poorly when image resolution is low or images are taken in low lighting. Or a speech-to-text system might not be used reliably to provide closed captions for online lectures because it fails to handle technical jargon.\\n- The authors should discuss the computational efficiency of the proposed algorithms and how they scale with dataset size.\\n- If applicable, the authors should discuss possible limitations of their approach to address problems of privacy and fairness.\\n- While the authors might fear that complete honesty about limitations might be used by reviewers as grounds for rejection, a worse outcome might be that reviewers discover limitations that aren\u2019t acknowledged in the paper. The authors should use their best judgment and recognize that individual actions in favor of transparency play an important role in developing norms that preserve the integrity of the community. Reviewers will be specifically instructed to not penalize honesty concerning limitations.\\n\\n3. Theory Assumptions and Proofs\\n\\nQuestion: For each theoretical result, does the paper provide the full set of assumptions and a complete (and correct) proof?\\n\\nAnswer: N/A\"}"}
{"id": "x8RgF2xQTj", "page_num": 63, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"4. Experimental Result Reproducibility\\n\\nQuestion: Does the paper fully disclose all the information needed to reproduce the main experimental results of the paper to the extent that it affects the main claims and/or conclusions of the paper (regardless of whether the code and data are provided or not)?\\n\\nAnswer: [Yes]\\n\\nJustification: We provide open-source code, all weights and biases logs, and describe each method in detail in the appendix.\\n\\nGuidelines:\\n\u2022 The answer NA means that the paper does not include experiments.\\n\u2022 If the paper includes experiments, a No answer to this question will not be perceived well by the reviewers: Making the paper reproducible is important, regardless of whether the code and data are provided or not.\\n\u2022 If the contribution is a dataset and/or model, the authors should describe the steps taken to make their results reproducible or verifiable.\\n\u2022 Depending on the contribution, reproducibility can be accomplished in various ways. For example, if the contribution is a novel architecture, describing the architecture fully might suffice, or if the contribution is a specific model and empirical evaluation, it may be necessary to either make it possible for others to replicate the model with the same dataset, or provide access to the model. In general, releasing code and data is often one good way to accomplish this, but reproducibility can also be provided via detailed instructions for how to replicate the results, access to a hosted model (e.g., in the case of a large language model), releasing of a model checkpoint, or other means that are appropriate to the research performed.\\n\u2022 While NeurIPS does not require releasing code, the conference does require all submissions to provide some reasonable avenue for reproducibility, which may depend on the nature of the contribution. For example\\n  (a) If the contribution is primarily a new algorithm, the paper should make it clear how to reproduce that algorithm.\\n  (b) If the contribution is primarily a new model architecture, the paper should describe the architecture clearly and fully.\\n  (c) If the contribution is a new model (e.g., a large language model), then there should either be a way to access this model for reproducing the results or a way to reproduce the model (e.g., with an open-source dataset or instructions for how to construct the dataset).\\n  (d) We recognize that reproducibility may be tricky in some cases, in which case authors are welcome to describe the particular way they provide for reproducibility. In the case of closed-source models, it may be that access to the model is limited in some way (e.g., to registered users), but it should be possible for other researchers to have some path to reproducing or verifying the results.\\n\\n5. Open access to data and code\\n\\nQuestion: Does the paper provide open access to the data and code, with sufficient instructions to faithfully reproduce the main experimental results, as described in supplemental material?\"}"}
{"id": "x8RgF2xQTj", "page_num": 64, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"6. Experimental Setting/Details\\n\\nQuestion: Does the paper specify all the training and test details (e.g., data splits, hyperparameters, how they were chosen, type of optimizer, etc.) necessary to understand the results?\\n\\nAnswer: [Yes]\\n\\nJustification: The main training and implementation details are discussed in Appendix I and exact hyperparameters are available on the published code repository.\\n\\nGuidelines:\\n- The answer NA means that the paper does not include experiments.\\n- The experimental setting should be presented in the core of the paper to a level of detail that is necessary to appreciate the results and make sense of them.\\n- The full details can be provided either with the code, in appendix, or as supplemental material.\\n\\n7. Experiment Statistical Significance\\n\\nQuestion: Does the paper report error bars suitably and correctly defined or other appropriate information about the statistical significance of the experiments?\\n\\nAnswer: [Yes]\\n\\nJustification: We run each experiment on five different seeds and report the min, mean, and max metric values.\\n\\nGuidelines:\\n- The answer NA means that the paper does not include experiments.\\n- The authors should answer \u201cYes\u201d if the results are accompanied by error bars, confidence intervals, or statistical significance tests, at least for the experiments that support the main claims of the paper.\\n- The factors of variability that the error bars are capturing should be clearly stated (for example, train/test split, initialization, random drawing of some parameter, or overall run with given experimental conditions).\\n- The method for calculating the error bars should be explained (closed form formula, call to a library function, bootstrap, etc.)\\n- The assumptions made should be given (e.g., Normally distributed errors).\"}"}
{"id": "x8RgF2xQTj", "page_num": 65, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"It should be clear whether the error bar is the standard deviation or the standard error of the mean. It is OK to report 1-sigma error bars, but one should state it. The authors should preferably report a 2-sigma error bar than state that they have a 96% CI, if the hypothesis of Normality of errors is not verified. For asymmetric distributions, the authors should be careful not to show in tables or figures symmetric error bars that would yield results that are out of range (e.g. negative error rates). If error bars are reported in tables or plots, the authors should explain in the text how they were calculated and reference the corresponding figures or tables in the text.\\n\\n8. Experiments Compute Resources\\nQuestion: For each experiment, does the paper provide sufficient information on the computer resources (type of compute workers, memory, time of execution) needed to reproduce the experiments?\\nAnswer: [Yes]\\nJustification: In Section 3.\\nGuidelines:\\n\u2022 The answer NA means that the paper does not include experiments.\\n\u2022 The paper should indicate the type of compute workers CPU or GPU, internal cluster, or cloud provider, including relevant memory and storage.\\n\u2022 The paper should provide the amount of compute required for each of the individual experimental runs as well as estimate the total compute.\\n\u2022 The paper should disclose whether the full research project required more compute than the experiments reported in the paper (e.g., preliminary or failed experiments that didn't make it into the paper).\\n\\n9. Code Of Ethics\\nQuestion: Does the research conducted in the paper conform, in every respect, with the NeurIPS Code of Ethics https://neurips.cc/public/EthicsGuidelines?\\nAnswer: [Yes]\\nJustification: We fulfill all requirements.\\nGuidelines:\\n\u2022 The answer NA means that the authors have not reviewed the NeurIPS Code of Ethics.\\n\u2022 If the authors answer No, they should explain the special circumstances that require a deviation from the Code of Ethics.\\n\u2022 The authors should make sure to preserve anonymity (e.g., if there is a special consideration due to laws or regulations in their jurisdiction).\\n\\n10. Broader Impacts\\nQuestion: Does the paper discuss both potential positive societal impacts and negative societal impacts of the work performed?\\nAnswer: [N/A]\\nJustification: Our paper conducts no societally harmful research.\\nGuidelines:\\n\u2022 The answer NA means that there is no societal impact of the work performed.\\n\u2022 If the authors answer NA or No, they should explain why their work has no societal impact or why the paper does not address societal impact.\\n\u2022 Examples of negative societal impacts include potential malicious or unintended uses (e.g., disinformation, generating fake profiles, surveillance), fairness considerations (e.g., deployment of technologies that could make decisions that unfairly impact specific groups), privacy considerations, and security considerations.\"}"}
{"id": "x8RgF2xQTj", "page_num": 66, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"The conference expects that many papers will be foundational research and not tied to particular applications, let alone deployments. However, if there is a direct path to any negative applications, the authors should point it out. For example, it is legitimate to point out that an improvement in the quality of generative models could be used to generate deepfakes for disinformation. On the other hand, it is not needed to point out that a generic algorithm for optimizing neural networks could enable people to train models that generate Deepfakes faster.\\n\\nThe authors should consider possible harms that could arise when the technology is being used as intended and functioning correctly, harms that could arise when the technology is being used as intended but gives incorrect results, and harms following from (intentional or unintentional) misuse of the technology.\\n\\nIf there are negative societal impacts, the authors could also discuss possible mitigation strategies (e.g., gated release of models, providing defenses in addition to attacks, mechanisms for monitoring misuse, mechanisms to monitor how a system learns from feedback over time, improving the efficiency and accessibility of ML).\\n\\n11. Safeguards\\n\\nQuestion: Does the paper describe safeguards that have been put in place for responsible release of data or models that have a high risk for misuse (e.g., pretrained language models, image generators, or scraped datasets)?\\n\\nAnswer: [N/A]\\n\\nJustification: There is no risk in abusing ImageNet or CIFAR-10 classifiers.\\n\\nGuidelines:\\n\u2022 The answer NA means that the paper poses no such risks.\\n\u2022 Released models that have a high risk for misuse or dual-use should be released with necessary safeguards to allow for controlled use of the model, for example by requiring that users adhere to usage guidelines or restrictions to access the model or implementing safety filters.\\n\u2022 Datasets that have been scraped from the Internet could pose safety risks. The authors should describe how they avoided releasing unsafe images.\\n\u2022 We recognize that providing effective safeguards is challenging, and many papers do not require this, but we encourage authors to take this into account and make a best faith effort.\\n\\n12. Licenses for existing assets\\n\\nQuestion: Are the creators or original owners of assets (e.g., code, data, models), used in the paper, properly credited and are the license and terms of use explicitly mentioned and properly respected?\\n\\nAnswer: [Yes]\\n\\nJustification: We cite the ImageNet, ImageNet-ReaL, CIFAR-10, and CIFAR-10H datasets and the timm library for the code and the pretrained ResNet-50s.\\n\\nGuidelines:\\n\u2022 The answer NA means that the paper does not use existing assets.\\n\u2022 The authors should cite the original paper that produced the code package or dataset.\\n\u2022 The authors should state which version of the asset is used and, if possible, include a URL.\\n\u2022 The name of the license (e.g., CC-BY 4.0) should be included for each asset.\\n\u2022 For scraped data from a particular source (e.g., website), the copyright and terms of service of that source should be provided.\\n\u2022 If assets are released, the license, copyright information, and terms of use in the package should be provided. For popular datasets, paperswithcode.com/datasets has curated licenses for some datasets. Their licensing guide can help determine the license of a dataset.\\n\u2022 For existing datasets that are re-packaged, both the original license and the license of the derived asset (if it has changed) should be provided.\"}"}
{"id": "x8RgF2xQTj", "page_num": 67, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"If this information is not available online, the authors are encouraged to reach out to the asset's creators.\\n\\nNew Assets\\n\\nQuestion: Are new assets introduced in the paper well documented and is the documentation provided alongside the assets?\\n\\nAnswer: [N/A]\\n\\nJustification: We do not release new assets, we only record metrics.\\n\\nGuidelines:\\n\\n\u2022 The answer NA means that the paper does not release new assets.\\n\\n\u2022 Researchers should communicate the details of the dataset/code/model as part of their submissions via structured templates. This includes details about training, license, limitations, etc.\\n\\n\u2022 The paper should discuss whether and how consent was obtained from people whose asset is used.\\n\\n\u2022 At submission time, remember to anonymize your assets (if applicable). You can either create an anonymized URL or include an anonymized zip file.\\n\\nCrowdsourcing and Research with Human Subjects\\n\\nQuestion: For crowdsourcing experiments and research with human subjects, does the paper include the full text of instructions given to participants and screenshots, if applicable, as well as details about compensation (if any)?\\n\\nAnswer: [N/A]\\n\\nJustification: We do not use crowdsourcing.\\n\\nGuidelines:\\n\\n\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.\\n\\n\u2022 Including this information in the supplemental material is fine, but if the main contribution of the paper involves human subjects, then as much detail as possible should be included in the main paper.\\n\\n\u2022 According to the NeurIPS Code of Ethics, workers involved in data collection, curation, or other labor should be paid at least the minimum wage in the country of the data collector.\\n\\nInstitutional Review Board (IRB) Approvals or Equivalent for Research with Human Subjects\\n\\nQuestion: Does the paper describe potential risks incurred by study participants, whether such risks were disclosed to the subjects, and whether Institutional Review Board (IRB) approvals (or an equivalent approval/review based on the requirements of your country or institution) were obtained?\\n\\nAnswer: [N/A]\\n\\nJustification: We do not conduct experiments with humans.\\n\\nGuidelines:\\n\\n\u2022 The answer NA means that the paper does not involve crowdsourcing nor research with human subjects.\\n\\n\u2022 Depending on the country in which research is conducted, IRB approval (or equivalent) may be required for any human subjects research. If you obtained IRB approval, you should clearly state this in the paper.\\n\\n\u2022 We recognize that the procedures for this may vary significantly between institutions and locations, and we expect authors to adhere to the NeurIPS Code of Ethics and the guidelines for their institution.\\n\\n\u2022 For initial submissions, do not include any information that would break anonymity (if applicable), such as the institution conducting the review.\"}"}
{"id": "x8RgF2xQTj", "page_num": 41, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table H.1: Rank correlations of method rankings on different metrics for all combinations of methods and aggregators between CIFAR-10 and ImageNet. The rankings of approaches are considerably different between these two datasets.\\n\\n| Metric          | Rank Corr. CIFAR-10 vs. ImageNet |\\n|-----------------|-----------------------------------|\\n| Correctness AUROC | 0.503                             |\\n| ECE             | 0.659                             |\\n| Correctness Brier | 0.193                             |\\n| Correctness Log Prob. | 0.445                             |\\n| rAULC           | 0.554                             |\\n| E-AURC          | 0.482                             |\\n| AUAC            | 0.581                             |\\n| Accuracy        | 0.263                             |\\n| Aleatoric Log Prob. | 0.484                             |\\n| Aleatoric Brier | 0.426                             |\\n| Aleatoric Rank Corr. | 0.013                             |\\n| Aleatoric AUROC | 0.290                             |\\n| OOD AUROC       | 0.368                             |\\n\\nTable H.2: Aleatoric and epistemic uncertainty estimates of the IT decomposition for different methods and reduced training dataset fractions of CIFAR-10. We report the mean estimates over the test dataset.\\n\\nI Training and Implementation Details\\n\\nFor both datasets, we train and evaluate on an NVIDIA GeForce RTX 2080 Ti GPU. We only use an NVIDIA A100 Tensor Core GPU for the construction of the Laplace approximation on ImageNet, owing to the VRAM requirements of this method. Our code is based on the timm library [56], extended with a wide range of uncertainty quantification methods, evaluation metrics, ImageNet-C and CIFAR-10C corruptions, and general soft label support. The exact hyperparameter settings for each method are available in the README.md file of our published GitHub repository.\\n\\nI.1 CIFAR-10\\n\\nFor CIFAR-10, we follow the augmentations and training schedules of the uncertainty_baselines GitHub repository [38]. In particular, for non-post-hoc methods, we train a Wide ResNet 28-10 [61] for 200 epochs with a step decay schedule at [60, 120, 160] epochs with decay rate 0.2 and one learning rate warmup epoch. The only exceptions are the SNGP-variants and the DDU method (250 epochs with a step decay schedule at [75, 150, 200] epochs) [32, 37]. We use stochastic gradient descent with momentum 0.9 and a batch size of 128. Our training augmentation comprises a random crop using padding 2 and a random flip on the vertical axis with probability 0.5. We use 2/5th of the CIFAR-10 test dataset as the validation split and the rest as the test split. The learning rate and weight decay hyperparameters are chosen by ten iterations of the Bayesian optimization scheme of Weights & Biases [3] based on the correctness prediction AUROC metric on the validation split. The additional hyperparameters of benchmarked methods are determined by either using values suggested by the original authors or including these in the hyperparameter sweep.\\n\\nI.2 ImageNet\\n\\nOn ImageNet, we fine-tune a pretrained ResNet 50 [20] using the resnet50.a1_in1k parameters from the timm library as initialization. We fine-tune for 50 epochs following a cosine learning rate schedule [33] using the LAMB optimizer [60] and a learning rate warmup period of 5 epochs. We use a batch size of 128 with 16 accumulation steps, resulting in an effective batch size of 2048.\"}"}
{"id": "x8RgF2xQTj", "page_num": 42, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"Table H.3: Aleatoric and epistemic uncertainty estimates of the formulation of Kendall and Gal for different methods and reduced training dataset fractions of CIFAR-10. This formulation uses the expected variance of the probability vectors as epistemic and the expected entropy as aleatoric uncertainty. We report the mean estimates over the test dataset.\\n\\n|                  | Deep EDL | GP | HET | HetClassNN | HET-XL | Laplace | MC | Dropout | PostNet | Shallow | SNGP | SW | AG |\\n|------------------|----------|----|-----|------------|--------|---------|-----|---------|---------|---------|------|----|----|\\n| 10%              | 0.235    | 1.701 | 0.208 | 0.200      | 0.184  | 0.214   | 0.272 | 0.209   | 0.480   | 0.228   | 0.201 | 0.418 | 1.064e-2 | 6.156e-3 | 8.322e-4 | 1.635e-4 | 6.030e-3 |\\n\\nTable H.4: Aleatoric and epistemic uncertainty estimates of the Bregman decomposition for different methods and reduced training dataset fractions of CIFAR-10. We report the mean estimates over the test dataset.\\n\\n|                  | Deep EDL | GP | HET | HetClassNN | HET-XL | Laplace | MC | Dropout | PostNet | Shallow | SNGP | SW | AG |\\n|------------------|----------|----|-----|------------|--------|---------|-----|---------|---------|---------|------|----|----|\\n| 10%              | 0.258    | 0.403 | 1.589e-2 | 4.016e-3 | 0.146   | 1.408e-2 | 0.211 | 0.131   | 8.497e-3 | 7.965e-4 | 1.642e-2 | 0.379 | 0.235 | 1.701 | 0.208 | 0.200 | 0.184 | 0.214 | 0.272 | 0.209 | 0.480 | 0.228 | 0.201 | 0.418 | 1.064e-2 | 6.156e-3 | 8.322e-4 | 1.635e-4 | 6.030e-3 |\\n\\nThe hyperparameters are chosen identically to those on CIFAR-10 (see Appendix I.1).\\n\\nTable I.1 and Table I.2 show statistics of the per-epoch runtime for each method on ImageNet and CIFAR-10, respectively. As Laplace, Mahalanobis, temperature scaling, and deep ensemble are post-hoc methods, their reported time comprises the construction of the method and its evaluation on various ID and OOD test datasets.\\n\\nJ Visualization of Images and Label Distributions\\n\\nThis section displays both easy (low human uncertainty) ImageNet samples in Fig. J.1 and hard (high human uncertainty) ones in Fig. J.2 using the ImageNet-ReaL labels and ImageNet-C perturbations. Figs. J.3 and J.4 give summary statistics of the label distributions of ImageNet-ReaL and CIFAR-10H, respectively.\"}"}
{"id": "x8RgF2xQTj", "page_num": 43, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"Table I.1: Summary of average per-batch forward times for the benchmarked methods on CIFAR-10.\\n\\nNote that the rankings for methods with similar forward times are subject to many external factors, such as the cluster node\u2019s state or the uptime of the allocated GPU. However, computationally costly methods consistently require more time. Methods are sorted by increasing mean per-batch forward time.\\n\\n| Method          | Mean (s) | Min (s) | Max (s) |\\n|-----------------|----------|---------|---------|\\n| Temperature     | 0.0614   | 0.0605  | 0.0629  |\\n| EDL             | 0.0626   | 0.0616  | 0.0634  |\\n| DUQ             | 0.0627   | 0.0619  | 0.0635  |\\n| CE Baseline     | 0.0628   | 0.0622  | 0.0635  |\\n| Corr. Pred.     | 0.0631   | 0.0625  | 0.0639  |\\n| HET             | 0.0635   | 0.0625  | 0.0640  |\\n| Shallow Ens.    | 0.0636   | 0.0620  | 0.0668  |\\n| Loss Pred.      | 0.0673   | 0.0619  | 0.0800  |\\n| Laplace         | 0.0668   | 0.0664  | 0.0677  |\\n| SNGP            | 0.0703   | 0.0665  | 0.0842  |\\n| GP              | 0.0698   | 0.0625  | 0.0870  |\\n| HET-XL          | 0.0728   | 0.0727  | 0.0730  |\\n| PostNet         | 0.0838   | 0.0812  | 0.0882  |\\n| Mahalanobis     | 0.7524   | 0.7215  | 0.8132  |\\n| DDU             | 0.2038   | 0.1543  | 0.2685  |\\n| Deep Ens.       | 0.3426   | 0.3426  | 0.3426  |\\n| HetClassNN      | 1.9995   | 1.9938  | 2.0077  |\\n| MC Dropout      | 2.0342   | 1.9832  | 2.1176  |\\n| SW AG           | 3.2236   | 2.8773  | 4.3338  |\\n\\nTable I.2: Summary of average per-batch forward times for the benchmarked methods on ImageNet.\\n\\nNote that the rankings for methods with similar forward times are subject to many external factors, such as the cluster node\u2019s state or the uptime of the allocated GPU. However, computationally costly methods consistently require more time. Methods are sorted by increasing mean per-batch forward time.\\n\\n| Method       | Mean (s) | Min (s) | Max (s) |\\n|--------------|----------|---------|---------|\\n| HET          | 0.0485   | 0.0464  | 0.0538  |\\n| HET-XL       | 0.0576   | 0.0564  | 0.0596  |\\n| Loss Pred.   | 0.0597   | 0.0585  | 0.0622  |\\n| Corr. Pred.  | 0.0598   | 0.0591  | 0.0606  |\\n| CE Baseline  | 0.0610   | 0.0592  | 0.0637  |\\n| Shallow Ens. | 0.0651   | 0.0590  | 0.0882  |\\n| EDL          | 0.0764   | 0.0739  | 0.0790  |\\n| Temperature  | 0.0765   | 0.0671  | 0.1039  |\\n| GP           | 0.0818   | 0.0795  | 0.0836  |\\n| PostNet      | 0.0846   | 0.0816  | 0.0942  |\\n| SNGP         | 0.0924   | 0.0861  | 0.1168  |\\n| Laplace      | 0.3933   | 0.3837  | 0.4005  |\\n| Deep Ens.    | 0.4822   | 0.4822  | 0.4822  |\\n| Mahalanobis  | 1.5409   | 1.4934  | 1.6099  |\\n| DDU          | 2.3874   | 2.2113  | 2.5266  |\\n| MC Dropout   | 2.1183   | 2.0455  | 2.3026  |\\n| HetClassNN   | 2.2859   | 2.0830  | 2.4543  |\\n| SW AG        | 2.9623   | 2.8433  | 3.1278  |\"}"}
{"id": "x8RgF2xQTj", "page_num": 44, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure D.3: For the HET-XL method, the correctness prediction performance is saturated across OOD data of severity level five.\\n\\n(a) HET-XL correctness AUROC on ID data.\\n(b) HET-XL correctness AUROC on OOD data of severity level one.\\n(c) HET-XL correctness AUROC on OOD data of severity level two.\\n(d) HET-XL correctness AUROC on OOD data of severity level three.\\n(e) HET-XL correctness AUROC on OOD data of severity level four.\\n(f) HET-XL correctness AUROC on OOD data of severity level five.\\n\\nFor the HET-XL method, the correctness prediction performance is saturated across OOD data of severity level five. The epistemic aggregators perform poorly ID.\\n\\nEstimate Ground Truth\"}"}
{"id": "x8RgF2xQTj", "page_num": 45, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure D.4: For the Deep Ensemble method, the disagreement-based epistemic aggregators underper-\\nform the other aggregators on the correctness prediction task on the ImageNet validation set, which\\naligns with expectations.\\n\\nEstimate\\n\\nGround Truth\\n\\nAUROC \u2191\\n\\nAUb + Bb\\n\\nPUb\\n\\n1 \u25a1 max \u02dc\u03c0\\n\\n1 \u25a1 max \u00af\u03c0\\n\\nH( \u02dc\u03c0)\\n\\n1 \u25a1 E[ max \u03c0]\\n\\nAUit + EUb\\n\\nPUit\\n\\nAUit\\n\\nEUit\\n\\nEUb\\n\\nD-S\\n\\nE[ var \u03c0]\\n\\nAUb\\n\\nE[ var f]\\n\\n0.5\\n\\n0.6\\n\\n0.7\\n\\n0.8\\n\\n0.9\\n\\n1.0\\n\\n0.5\\n\\n0.6\\n\\n0.7\\n\\n0.8\\n\\n0.9\\n\\n1.0\\n\\n0.5\\n\\n0.6\\n\\n0.7\\n\\n0.8\\n\\n0.9\\n\\n1.0\\n\\n0.5\\n\\n0.6\\n\\n0.7\\n\\n0.8\\n\\n0.9\\n\\n1.0\\n\\n0.5\\n\\n0.6\\n\\n0.7\\n\\n0.8\\n\\n0.9\\n\\n1.0\\n\\n0.5\\n\\n0.6\\n\\n0.7\\n\\n0.8\\n\\n0.9\\n\\n1.0\\n\\n0.5\\n\\n0.6\\n\\n0.7\\n\\n0.8\\n\\n0.9\\n\\n1.0\"}"}
{"id": "x8RgF2xQTj", "page_num": 46, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure G.1: OOD detection results on the CIFAR-10 test set, measured by the AUROC metric. OOD samples are perturbed by CIFAR-10C corruptions of severity level two. Mahalanobis, a method specially trained for this task, has an edge over the remaining methods.\\n\\nFigure G.2: Rank correlation with the soft input-conditional label distributions of CIFAR-10H corresponding to labeler votes.\\n\\nFigure G.3: On ID CIFAR-10 samples, the performance of methods on predicting correctness is close to saturated, although the more expensive distributional methods tend to perform better than the cheaper deterministic methods.\\n\\nFigure G.4: ID abstained prediction results using the AUAC metric on the CIFAR-10 test dataset. On ID CIFAR-10 samples, most methods solve the abstinence task almost perfectly. This even holds for Mahalanobis. This is largely because the accuracy on CIFAR-10 is very high, and AUAC depends on it.\"}"}
{"id": "x8RgF2xQTj", "page_num": 47, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"| Metric Pair | Correlation |\\n|------------|-------------|\\n| Correctness AUROC - ECE | 0.95 |\\n| Correctness AUROC - Brier | 0.9 |\\n| Correctness AUROC - Log Prob. | 0.56 |\\n| Correctness AUROC - rAULC | 0.58 |\\n| Correctness AUROC - -E-AURC | 0.61 |\\n| Correctness AUROC - Aleatoric Brier | 0.63 |\\n| Correctness AUROC - Aleatoric Log Prob. | 0.68 |\\n| Correctness AUROC - AUAC | 0.88 |\\n| Correctness AUROC - OOD AUROC | 0.63 |\\n| Correctness Brier - Correctness AUROC | 0.41 |\\n| Correctness Brier - Brier | 1.0 |\\n| Correctness Log Prob. - Correctness AUROC | 0.64 |\\n| Correctness Log Prob. - Brier | 0.74 |\\n| Correctness Log Prob. - Log Prob. | 0.56 |\\n| Correctness Log Prob. - rAULC | 0.94 |\\n| Correctness Log Prob. - -E-AURC | 0.92 |\\n| Correctness Log Prob. - Aleatoric Brier | 0.58 |\\n| Correctness Log Prob. - Aleatoric Log Prob. | 0.56 |\\n| Correctness Log Prob. - AUAC | 0.9 |\\n| Correctness Log Prob. - OOD AUROC | 0.63 |\\n| Correctness Log Prob. - Brier | 0.64 |\\n| rAULC - Correctness AUROC | 0.92 |\\n| rAULC - Brier | 0.95 |\\n| rAULC - Log Prob. | 0.8 |\\n| rAULC - rAULC | 1.0 |\\n| rAULC - -E-AURC | 0.95 |\\n| rAULC - Aleatoric Brier | 0.56 |\\n| rAULC - Aleatoric Log Prob. | 0.58 |\\n| rAULC - AUAC | 0.92 |\\n| rAULC - OOD AUROC | 0.9 |\\n| -E-AURC - Correctness AUROC | 0.45 |\\n| -E-AURC - Brier | 0.79 |\\n| -E-AURC - Log Prob. | 0.47 |\\n| -E-AURC - rAULC | 0.9 |\\n| -E-AURC - -E-AURC | 1.0 |\\n| -E-AURC - Aleatoric Brier | 0.62 |\\n| -E-AURC - Aleatoric Log Prob. | 0.62 |\\n| -E-AURC - AUAC | 0.9 |\\n| -E-AURC - OOD AUROC | 0.6 |\\n| -E-AURC - Brier | 0.62 |\\n| Aleatoric Rank Corr. - Correctness AUROC | 0.55 |\\n| Aleatoric Rank Corr. - Brier | 0.79 |\\n| Aleatoric Rank Corr. - Log Prob. | 0.5 |\\n| Aleatoric Rank Corr. - rAULC | 0.41 |\\n| Aleatoric Rank Corr. - -E-AURC | 0.45 |\\n| Aleatoric Rank Corr. - Aleatoric Brier | 0.95 |\\n| Aleatoric Rank Corr. - Aleatoric Log Prob. | 0.56 |\\n| Aleatoric Rank Corr. - AUAC | 0.72 |\\n| Aleatoric Rank Corr. - OOD AUROC | 0.5 |\\n| Aleatoric Rank Corr. - Brier | 0.79 |\\n| Aleatoric Rank Corr. - Log Prob. | 0.5 |\\n| Aleatoric AUROC - Correctness AUROC | 0.5 |\\n| Aleatoric AUROC - Brier | 0.83 |\\n| Aleatoric AUROC - Log Prob. | 0.45 |\\n| Aleatoric AUROC - rAULC | 0.95 |\\n| Aleatoric AUROC - -E-AURC | 0.9 |\\n| Aleatoric AUROC - Aleatoric Brier | 0.56 |\\n| Aleatoric AUROC - Aleatoric Log Prob. | 0.58 |\\n| Aleatoric AUROC - AUAC | 0.5 |\\n| Aleatoric AUROC - OOD AUROC | 0.41 |\\n| Aleatoric AUROC - Brier | 0.56 |\\n| Aleatoric AUROC - Log Prob. | 0.5 |\\n| Aleatoric Brier - Correctness AUROC | 0.62 |\\n| Aleatoric Brier - Brier | 0.27 |\\n| Aleatoric Brier - Log Prob. | 0.3 |\\n| Aleatoric Brier - rAULC | 0.9 |\\n| Aleatoric Brier - -E-AURC | 0.9 |\\n| Aleatoric Brier -Aleatoric Brier | 1.0 |\\n| Aleatoric Brier - Aleatoric Log Prob. | 0.58 |\\n| Aleatoric Brier - AUAC | 0.68 |\\n| Aleatoric Brier - OOD AUROC | 0.41 |\\n| Aleatoric Brier - Brier | 0.68 |\\n| Aleatoric Brier - Log Prob. | 0.68 |\\n| Aleatoric Log Prob. - Correctness AUROC | 0.61 |\\n| Aleatoric Log Prob. - Brier | 0.73 |\\n| Aleatoric Log Prob. - Log Prob. | 0.6 |\\n| Aleatoric Log Prob. - rAULC | 0.92 |\\n| Aleatoric Log Prob. - -E-AURC | 0.92 |\\n| Aleatoric Log Prob. - Aleatoric Brier | 0.55 |\\n| Aleatoric Log Prob. - Aleatoric Log Prob. | 1.0 |\\n| Aleatoric Log Prob. - AUAC | 0.83 |\\n| Aleatoric Log Prob. - OOD AUROC | 0.61 |\\n| Aleatoric Log Prob. - Brier | 0.73 |\\n| Aleatoric Log Prob. - Log Prob. | 0.73 |\\n| AUAC - Correctness AUROC | 0.8 |\\n| AUAC - Brier | 0.85 |\\n| AUAC - Log Prob. | 0.62 |\\n| AUAC - rAULC | 0.9 |\\n| AUAC - -E-AURC | 0.9 |\\n| AUAC - Aleatoric Brier | 0.55 |\\n| AUAC - Aleatoric Log Prob. | 0.58 |\\n| AUAC - AUAC | 1.0 |\\n| AUAC - OOD AUROC | 0.8 |\\n| AUAC - Brier | 0.85 |\\n| AUAC - Log Prob. | 0.85 |\\n| OOD AUROC - Correctness AUROC | 0.5 |\\n| OOD AUROC - Brier | 0.67 |\\n| OOD AUROC - Log Prob. | 0.5 |\\n| OOD AUROC - rAULC | 0.41 |\\n| OOD AUROC - -E-AURC | 0.45 |\\n| OOD AUROC - Aleatoric Brier | 0.92 |\\n| OOD AUROC - Aleatoric Log Prob. | 0.95 |\\n| OOD AUROC - AUAC | 0.92 |\\n| OOD AUROC - OOD AUROC | 1.0 |\\n| OOD AUROC - Brier | 0.92 |\\n| OOD AUROC - Log Prob. | 0.92 |\\n| OOD AUROC - Log Prob. | 0.92 |\\n\\nFigure G.5: Pearson correlation of metric pairs calculated over all (method, aggregator) pairs on CIFAR-10.\\n\\nFigure G.6: Spearman rank correlation of metric pairs calculated over all (method, aggregator) pairs on CIFAR-10. The clusters are similar to those of the linear correlation in Fig. G.5, although there are more cases of higher correlations between the clusters. This discrepancy can be attributed to the saturation of methods on various metrics on CIFAR-10.\"}"}
{"id": "x8RgF2xQTj", "page_num": 48, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure H.1: On ImageNet, the evidential deep learning methods, EDL and PostNet, dominate on the correctness prediction task. The performance of Mahalanobis stably increases on mixed datasets, as models perform worse on OOD images than on ID ones, and it can detect OOD samples well.\"}"}
