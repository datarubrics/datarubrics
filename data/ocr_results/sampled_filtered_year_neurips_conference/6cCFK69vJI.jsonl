{"id": "6cCFK69vJI", "page_num": 17, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Checklist\\n\\nThe checklist follows the references. Please read the checklist guidelines carefully for information on how to answer these questions. For each question, change the default [TODO] to [Yes], [No], or [N/A]. You are strongly encouraged to include a justification to your answer, either by referencing the appropriate section of your paper or providing a brief inline description. For example:\\n\\n- Did you include the license to the code and datasets? [Yes] See Section 6.\\n\\nPlease do not modify the questions and only use the provided macros for your answers. Note that the Checklist section does not count towards the page limit. In your paper, please delete this instructions block and only keep the Checklist section heading above along with the questions/answers below.\\n\\n1. For all authors...\\n   (a) Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? [Yes]\\n   (b) Did you describe the limitations of your work? [Yes] In Section 5\\n   (c) Did you discuss any potential negative societal impacts of your work? [Yes] In Section 5\\n   (d) Have you read the ethics review guidelines and ensured that your paper conforms to them? [Yes]\\n\\n2. If you are including theoretical results...\\n   (a) Did you state the full set of assumptions of all theoretical results? [N/A]\\n   (b) Did you include complete proofs of all theoretical results? [N/A]\\n\\n3. If you ran experiments (e.g. for benchmarks)...\\n   (a) Did you include the code, data, and instructions needed to reproduce the main experimental results (either in the supplemental material or as a URL)? [Yes] We included the URL in the abstract.\\n   (b) Did you specify all the training details (e.g., data splits, hyperparameters, how they were chosen)? [Yes] See Appendix C and D\\n   (c) Did you report error bars (e.g., with respect to the random seed after running experiments multiple times)? [Yes] See Appendix C and D\\n   (d) Did you include the total amount of compute and the type of resources used (e.g., type of GPUs, internal cluster, or cloud provider)? [Yes] See Appendix C and D. Not the total amount of compute, but it was not significant.\\n\\n4. If you are using existing assets (e.g., code, data, models) or curating/releasing new assets...\\n   (a) If your work uses existing assets, did you cite the creators? [N/A] No existing assets were used.\\n   (b) Did you mention the license of the assets? [Yes] The data is released under CC BY 4.0 while the code is released under MIT License. These are mentioned in their respective repository.\\n   (c) Did you include any new assets either in the supplemental material or as a URL? [Yes] We included the URL in the abstract.\\n   (d) Did you discuss whether and how consent was obtained from people whose data you're using/curating? [N/A] The dataset does not contain personally identifiable information.\\n   (e) Did you discuss whether the data you are using/curating contains personally identifiable information or offensive content? [Yes] The dataset does not contain personally identifiable information.\\n\\n5. If you used crowdsourcing or conducted research with human subjects...\\n   (a) Did you include the full text of instructions given to participants and screenshots, if applicable? [N/A]\"}"}
{"id": "6cCFK69vJI", "page_num": 18, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"(b) Did you describe any potential participant risks, with links to Institutional Review Board (IRB) approvals, if applicable? [N/A]\\n\\n(c) Did you include the estimated hourly wage paid to participants and the total amount spent on participant compensation? [N/A]\"}"}
{"id": "6cCFK69vJI", "page_num": 19, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Appendices\\n\\nA List of Related Works\\n\\nFor convenience, we summarised the works listed in Section 2.1 in Table 4.\\n\\n| Datasets                      | Description                                                                 |\\n|-------------------------------|-----------------------------------------------------------------------------|\\n| Private                       | HV AC [69, 33, 77, 71, 30, 29, 20], energy use [60, 61], timeseries ontology classification [34, 35, 23, 42, 43, 67], and simulation [76] |\\n| Paid                         | Pecan Street [14]                                                          |\\n| Static                       | Upon discretion of the data provider ecobee [21]. Mortar [22] is intended to be freely available, yet it has limited access due to cloud deployment issues at the time of writing. |\\n| Corase temporal granularity   | CBECS [16], BERTOOL [75], CENED+2 [68], Simulation-based BEM4CBECS [2, 91, 92, 90], ResStock [84], ComStock [58], CityLearn Challenge Series [81, 54, 57, 56], and hardware-in-the-loop laboratory [65, 64]. |\\n| Limited scope                | SLRHOME [5], LCLD [79], and UCI [78], NILM Non-intrusive load monitoring (NILM) is task and many dataset have been made for this task check this recent survey [59] that list publicly available dataset. However, since the datasets are only made for this specific task in mind, the scope is limited to only electricity submetering. Other datasets with focus on submetering: BDG [52] and BDG2 [51]. |\\n| Occupational behaviour        | From AshraeOB [18, 47] website: \u201cThe ASHRAE Global Occupant Behavior Database aims to advance the knowledge and understanding of realistic occupancy patterns and human-building interactions with building systems. This database includes 34 field-measured occupant behavior datasets for both commercial and residential buildings, contributed by researchers from 15 countries and 39 institutions covering 10 different climate zones. It includes occupancy patterns, occupant behaviors, indoor and outdoor environment measurements.\u201d |\\n| Comprehensive                 | Lawrence Berkeley National Laboratory building 59 (LBNL59) [36, 49] and BTS (ours) https://github.com/cruiseresearchgroup/DIEF_BTS. |\\n| Other lists                  | A review paper on NILM [59], a review paper on buildings at urban scale [72], a review paper on energy flexibility datasets [44], a review paper on building and energy dataset [40], and the Building Data Genome Directory [39]. |\\n\\nB Visualisation of Domain Shift and Long-tail Distribution in Our Datasets.\\n\\nWe visualise the domain shift by comparing the different distributions of classes between buildings. We visualised the distributions of classes have long-tails by plotting the histogram. These are shown in Figure 4, 5, 6, and 7. The relevant discussions can be found in Section 2.3 and 3.3.2.\"}"}
{"id": "6cCFK69vJI", "page_num": 20, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"C.1 Data Pre-processing\\n\\nEach timeseries are cut into shorter chunk of either 2/4/8 weeks. The reason is to enable analysis of accuracy against various length of the timeseries. Those with too few datapoint, less than 1 per day, are removed. Due to great ranges of values, they are scaled using symmetric log first, and then standard scaling. The symmetric log function is defined as follows:\\n\\n\\\\[\\n  v' = \\\\begin{cases} \\n  9 + \\\\log_{10}(v) & \\\\text{if } v > 10 \\\\\\\\\\n  -9 - \\\\log_{10}(-v) & \\\\text{if } v < -10 \\\\\\\\\\n  v & \\\\text{otherwise}\\n  \\\\end{cases}\\n\\\\]\\n\\nC.2 Development and Test Partition\\n\\nThe partition is done by time and buildings. The reason for this partition strategy is to evaluate the performance in the future, and in different buildings. The development partition consist of the first four months of BTC_A and the first year of BTC_B. The development partition is randomly split into training and validation with a 80% and 20% ratio respectively. The remaining data are set to the testing partition.\\n\\nC.3 Feature Extraction\\n\\nDepending on whether the models are made generic classification (LR, RF, and XGBoost) or deep learning models specialised for timeseries, a different feature extraction method were used. For generic models, we extract the following global features: mean, standard deviation, skew, kurtosis, root mean square, minimum, maximum, the three quartiles, and average duration between data points. For timeseries algorithm, we aggregate the timeseries into four hour slots and extract the maximum, mean, standard deviation, and number of datapoints within each slot.\\n\\nC.4 Model Training\\n\\nWe used binary cross-entropy (BCE) loss, treating every single label as binary, and applied additional extra weight to the positive samples proportionally. The maximum number of epochs was set to 100.\"}"}
{"id": "6cCFK69vJI", "page_num": 21, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure 5: Histogram of class of timeseries by buildings, continued.\"}"}
{"id": "6cCFK69vJI", "page_num": 22, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 6: Histogram of class of timeseries by buildings, continued.\\n\\nwith a patience of 30 epochs for early stopping. The learning rate was set to 0.01, and we used the ReduceLROnPlateau strategy with a patience of 10 epochs. The optimizer was Rectified Adam (RAdam).\\n\\nFor deep learning methods, we adapted the TSLib code [88] from their official GitHub repository https://github.com/thuml/Time-Series-Library. The batch size for each method was adjusted to fit memory. Our implementations, including our hardware setup, are available on the GitHub repository for this project https://github.com/cruiseresearchgroup/DIEF_BTS.\\n\\nC.5 Baselines\\n\\nWe use four naive baselines that does not take the features into account:\\n\\n\u2022 Zero. The model output negative prediction on all labels.\\n\u2022 Random Uniform. The model based the prediction on a coin flip (50/50)\\n\u2022 Random Proportional. The model based the prediction randomly, but according to the proportion each label appears on the training data.\\n\u2022 Mode. The most common class was Sensor. So the model predict Sensor all the time.\"}"}
{"id": "6cCFK69vJI", "page_num": 23, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":true,\"natural_text\":\"Figure 7: Histogram of class of timeseries by buildings, continued.\"}"}
{"id": "6cCFK69vJI", "page_num": 24, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"C.6 Hyperparameter Tuning\\n\\nD Zero-shot Forecasting Across Buildings\\n\\nThe advent of building digitalization presents significant opportunities for leveraging deep learning methods in building management systems for accurate forecasting. In practical applications, it is crucial for well-trained models to be applicable across diverse building scenarios without retraining costs. However, specific building constraints, operational variances, functionality differences, and data heterogeneity pose significant challenges in real-world settings. As shown in Table 2, models must adapt to dynamic ontology changes when applied to different buildings. Previous studies often rely on identical features and well-processed data, not reflecting the complexity of real-world scenarios. LBNL59, involving only one building, is insufficient for transfer learning studies. This study establishes a baseline for zero-shot forecasting using the BTS multivariate time series.\\n\\nD.1 Problem Formulation\\n\\nSuppose we have dataset $D \\\\in \\\\mathbb{R}^{N \\\\times K}$ with $N$ IoT points and $K$ timesteps. Each data point is denoted as $d_{N,k} = D_{N,k}$, where $S$ is the sequence length of the historical data. Denote the forecasting model as $h(\\\\cdot)$. The multi-step forecasting problem is formalized as follows:\\n\\n$$h(d_{N,k}) = d_{N,k+S+H},$$\\n\\nwhere $H$ is the forecasting horizon. In zero-shot forecasting, the model is trained and tested across different datasets. In this study, $S = 12$, $H = 12$.\\n\\nD.2 Data Pre-processing\\n\\nThis study utilizes a 1-month training dataset spanning from 00:00:00 on 01/07/2022 to 00:00:00 on 01/08/2022, with irregular data resampled to a 10-minute granularity and then standardization. The historical window and forecast horizon are set to 12 time steps, equivalent to 2 hours. A model trained on one dataset is evaluated across all buildings for the same period. For each dataset, a subset of IoT points is selected for training based on the criterion $N_{\\\\text{unique}} / N_{\\\\text{sample}} > \\\\eta$ where $\\\\eta = 0.1$. This feature selection results in 133, 710, and 2025 IoT points for the three respective datasets.\"}"}
{"id": "6cCFK69vJI", "page_num": 25, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"D.3 Baselines\\n\\nDLinear, PatchTST, Informer and iTransformer as backbone models are employed for this benchmark study.\\n\\nD.4 Model Training\\n\\nWhile employing DLinear for training, we treat this task as a multivariate forecasting task. Models are fed by all the IoT points data and expect to forecast the corresponding values of these IoT points. Considering that certain Transformer-based backbone models that involve a conventional embedding layer, such as iTransformer, Informer, and PatchTST, do not support changes in input channels between training and testing sets, we handle the task as an univariate forecasting problem, treating each IoT point equivalently. Similar to the multi-label classification task, the code is modified based on TSLib Github repository. The training process employs the Adam optimizer with a learning rate of 0.01 and Mean Square Error (MSE) loss, and a learning rate scheduler is applied. Training is capped at 20 epochs with an early stopping patience of 3 epochs. All experiments are conducted on the NCI Gadi server utilizing 4 V100 GPUs.\\n\\nD.5 Metrics\\n\\nBaseline performance is evaluated using Mean Absolute Error (MAE) and Symmetric Mean Absolute Percentage Error (SMAPE) averaged by IoT points. Following the above-mentioned notation, the mathematical definitions are as follows:\\n\\n\\\\[\\nMAE = \\\\frac{1}{N} \\\\sum_{n=1}^{N} |\\\\hat{y}_n - y_n|\\n\\\\]\\n\\n\\\\[\\nSMAPE = 100\\\\% \\\\frac{1}{N} \\\\sum_{n=1}^{N} \\\\left| \\\\frac{|\\\\hat{y}_n - y_n|}{|\\\\hat{y}_n| + |y_n|} \\\\right|\\n\\\\]\\n\\n\\\\[\\nR^2 = 1 - \\\\frac{\\\\sum_{n=1}^{N} (y_n - \\\\hat{y}_n)^2}{\\\\sum_{n=1}^{N} (y_n - \\\\bar{y}_n)^2}\\n\\\\]\\n\\nwhere \\\\(\\\\hat{y}_n\\\\), \\\\(y_n\\\\), \\\\(\\\\bar{y}_n\\\\) are the multi-step prediction, ground truth, and mean for the evaluated model.\\n\\nD.6 Main Results\\n\\nTable 5 presents the Symmetric Mean Absolute Percentage Error (SMAPE) and \\\\(R^2\\\\) scores for four baseline models in this task, with diagonal values omitted. PatchTST and DLinear consistently outperform the other models, balancing higher \\\\(R^2\\\\) scores with lower SMAPE values. However, the overall performance highlights the complexity and challenges inherent in zero-shot forecasting, indicating significant scope for further research and improvement.\\n\\nD.7 Detailed Results with Standard Deviations\\n\\nTable 6-8 shows the mean and standard deviation values about MAE, SMAPE, and \\\\(R^2\\\\) for the multi-step zero-shot forecasting.\"}"}
{"id": "6cCFK69vJI", "page_num": 26, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"Table 5: Benchmark results on the zero-shot forecasting task. The columns refer to the training set, whereas the row represents the testing set.\\n\\n| Method     | BTS-A | BTS-B | BTS-C |\\n|------------|-------|-------|-------|\\n| **MAE**    |       |       |       |\\n| Previous Day Persistence | 0.5377 | 0.4976 | 0.5458 |\\n| Previous Week Persistence | 0.6190 | 0.5918 | 0.6499 |\\n| **SMAPE**  |       |       |       |\\n| Previous Day Persistence | 48.1539 | 43.2985 | 45.7014 |\\n| Previous Week Persistence | 57.2713 | 51.3867 | 58.1922 |\\n\\nTable 6: Mean Absolute Error (MAE) on the zero-shot forecasting task. The columns refer to the training set, whereas the row represents the testing set.\\n\\n| Method     | BTS_A | BTS_B | BTS_C |\\n|------------|-------|-------|-------|\\n| DLinear    | N/A   | 0.4324| 0.4262|\\n| PatchTST   | N/A   | 0.3748| 0.3712|\\n| Informer   | N/A   | 0.5968| 0.5920|\\n| iTransformer | N/A | 0.4026| 0.3842|\\n\\nTable 7: Symmetric Mean Absolute Percentage Error (SMAPE) on the zero-shot forecasting task. The columns refer to the training set, whereas the row represents the testing set.\\n\\n| Method     | BTS_A | BTS_B | BTS_C |\\n|------------|-------|-------|-------|\\n| DLinear    | N/A   | 35.9846| 36.2733|\\n| PatchTST   | N/A   | 29.2570| 29.5551|\\n| Informer   | N/A   | 49.2217| 51.9745|\\n| iTransformer | N/A | 31.1924| 30.1102|\"}"}
{"id": "6cCFK69vJI", "page_num": 27, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"### Table 8: \\\\(R^2\\\\) score on the zero-shot forecasting task.\\n\\n| Method       | BTS_A \\\\(R^2\\\\) | BTS_B \\\\(R^2\\\\) | BTS_C \\\\(R^2\\\\) |\\n|--------------|----------------|----------------|----------------|\\n| DLinear      | N/A            | 0.54196 \u00b1 0.12989 | 0.53206 \u00b1 0.09756 |\\n| PatchTST     | N/A            | 0.51219 \u00b1 0.16793 | 0.51258 \u00b1 0.05317 |\\n| Informer     | N/A            | 0.32122 \u00b1 0.18004 | 0.32153 \u00b1 0.05191 |\\n| iTransformer | N/A            | 0.46723 \u00b1 0.17016 | 0.48543 \u00b1 0.05315 |\\n\\nModels trained on BTS_A exhibit poorer cross-building forecasting results. This can be attributed to the greater complexity of BTS_A compared to BTS_B and BTS_C. BTS_A includes more heterogeneous series and entity types (BTS_A has 42 entities, where BTS_B and BTS_C have 16 and 31 entities respectively in the task training data), which introduces additional noise that impacts accuracy.\\n\\nThe evaluation metrics, MAE and SMAPE, indicate that PatchTST outperforms other baselines, while \\\\(R^2\\\\) scores suggest that DLinear is superior. However, DLinear also shows a higher standard deviation. This indicates that DLinear effectively captures linearity in sequential data, leading to accurate predictions for IoT points with strong linear relationships. Conversely, it struggles with complex inherent dependencies, resulting in poorer performance on datasets with such characteristics.\\n\\nThe overall scores indicate significant potential for improvement. Considering the comprehensive metadata scope provided by the BTS dataset, future work can leverage knowledge graphs to enhance data modality. This approach could improve the accuracy and robustness of deep learning models in zero-shot forecasting.\"}"}
{"id": "6cCFK69vJI", "page_num": 1, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"BTS: Building Timeseries Dataset: Empowering Large-Scale Building Analytics\\n\\nArian Prabowo, Xiachong Lin, Imran Razzak, Hao Xue, Emily W. Yap, Matthew Amos, Flora D. Salim\\n\\n1 CSE, UNSW\u2217, Sydney NSW 2052\\n2 SBRC\u2020, UOW, Wollongong NSW 2522\\n3 Energy, CSIRO\u2021, Newcastle NSW 2304\\n\\n{arian.prabowo, imran.razzak, hao.xue1, flora.salim}@unsw.edu.au\\ndawn.lin@student.unsw.edu.au eyap@uow.edu.au matt.amos@csiro.au\\n\\nAbstract\\nBuildings play a crucial role in human well-being, influencing occupant comfort, health, and safety. Additionally, they contribute significantly to global energy consumption, accounting for one-third of total energy usage, and carbon emissions. Optimizing building performance presents a vital opportunity to combat climate change and promote human flourishing. However, research in building analytics has been hampered by the lack of accessible, available, and comprehensive real-world datasets on multiple building operations. In this paper, we introduce the Building TimeSeries (BTS) dataset. Our dataset covers three buildings over a three-year period, comprising more than ten thousand timeseries data points with hundreds of unique classes. Moreover, the metadata is standardized using the Brick schema. To demonstrate the utility of this dataset, we performed benchmarks on the multi-label timeseries classification task. This task represents an essential initial step in addressing challenges related to interoperability in building analytics. Access to the dataset and the code used for benchmarking are available here: https://github.com/cruiseresearchgroup/DIEF_BTS\\n\\nIntroduction\\n\\nImportance of building analytics.\\n\\nBuilding analytics, also known as data-driven smart building [12], involves the automated adjustment of building operations to minimize emissions and costs, optimize energy usage, and enhance indoor environmental quality and occupant experience, including comfort, health, and safety [72]. This is particularly crucial given that buildings account for a third of global energy usage and a quarter of global carbon emissions, comparable to the transport sector [27]. Optimizing building performance has the potential to significantly mitigate climate change and promote human well-being.\\n\\nLiterature gaps.\\n\\nThis paper addresses two critical gaps in building analytics research. Firstly, in Section 2.1, we highlight the scarcity of publicly available and freely accessible datasets on comprehensive real-world building operations, as exemplified in Table 1. While LBNL59 [49, 36] is the only dataset that captures various aspects of building operations comprehensively, it only includes data from a single building.\"}"}
{"id": "6cCFK69vJI", "page_num": 2, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table 1: Comparing the scope of representative datasets for building analytics. Only datasets on real-world building operations that are available, accessible are presented. Note that non-intrusive load monitoring (NILM) is not a single dataset but a task that usually use similar datasets. Similarly, AshraeOB is also a collection of dataset.\\n\\n| Year | Dataset       | Unique Class | Scope                                         |\\n|------|---------------|--------------|-----------------------------------------------|\\n| 2013 | SLRHOME       | 3            | Aggregate energy load and generation          |\\n| 2014 | LCLD          | 2            | Aggregate energy load and tarriff             |\\n| 2015 | UCI           | 1            | Aggregate energy load                         |\\n| 2017 | BGD2          | 18           | Detailed energy load                          |\\n| 2020 | LBNL59        | 35           | Comprehensive                                 |\\n| 2021 | AshraeOB      | 76           | Occupancy and their factors (e.g. lighting, indoor climate) |\\n|      | Varies NILM   | Varies      | Detailed energy load                          |\\n\\nThis limitation underscores the need for datasets covering multiple buildings to address the second gap: interoperability in building analytical models. Interoperability is crucial for scalability, allowing models to be applied across diverse buildings with differing characteristics such as climate, usage, size, regulations, budget, and architecture. This challenge is discussed further in Section 2.2. Additionally, such datasets inherently possess properties of interest to machine learning research, such as domain shift, multimodality, imbalance, and long-tailedness, which are discussed further in Section 2.3.\\n\\nBuilding TimeSeries (BTS): A new dataset. In this paper, we introduce a new anonymized building analytics dataset sourced from three buildings located in undisclosed regions across Australia. Spanning a three-year period, our dataset encompasses over ten thousand timeseries data points, featuring a diverse array of 240 unique classes. Notably, this surpasses the ontological breadth of LBNL59 by more than threefold. These ontologies serve as standardized categorizations of building timeseries data, including parameters like Temperature_Setpoint and Voltage_Sensor. The breadth of ontologies within our dataset enables researchers to explore buildings with more intricate analytics setups, facilitating deeper insights into building dynamics and performance. Furthermore, the metadata are standardized using the popular Brick schema, ensuring consistency and compatibility across analyses.\\n\\nA Benchmark. To demonstrate the utility of this dataset, we conducted benchmarks on a machine learning model interoperability task: multi-label timeseries classification. One of the initial steps in achieving building analytics interoperability is to map thousands of heterogeneous timeseries generated from sensors and actuators to a standardized ontology, such as the Brick schema. This is also known as the timeseries ontology classification task.\\n\\nWe also performed an additional benchmark on a zero-shot forecasting task. This explores scenarios where a building manager deploys a pre-trained model without fine-tuning. This task is more complex than typical setups because the model must generalize to an arbitrary number of timeseries, various permutations of their ontologies, and their relationships. The details can be found in Appendix D.\\n\\nContribution. This paper introduces the Building TimeSeries (BTS) dataset, addressing critical gaps in publicly available building analytics datasets. Existing datasets often lack accessible, available, comprehensive, real-world, building operations data, hindering progress in building analytics research. While some datasets like LBNL59 offer a holistic view, they are limited to single buildings, impeding efforts to achieve interoperability in building analytics models. BTS fills this void by providing data from three diverse buildings, spanning a three-year period and encompassing over ten thousand timeseries data points and 240 unique classes. Moreover, BTS inherently possess properties relevant to machine learning research, including domain shift, multimodality, imbalance, and long-tailedness. Furthermore, we conduct a benchmark on a machine learning model interoperability task \u2014 multi-label timeseries classification \u2014 demonstrating BTS's utility in addressing challenges related to interoperability in building analytics. Overall, BTS dataset advances the pursuit of optimizing building performance, ultimately aiding efforts to mitigate climate change and enhance human flourishing.\"}"}
{"id": "6cCFK69vJI", "page_num": 3, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"2 Related Works\\n\\n2.1 Existing Datasets\\n\\nTo write this section, we reviewed the building datasets utilized in the literature. We found that, in most cases, the datasets are private, static, simulation-based, or limited in ontology. Although our review is not systematic as this is not a review paper, our search was sufficiently extensive to ensure the validity of our findings. The datasets discussed here are primarily derived from five recent review papers [59, 72, 39, 40, 44] along with our own collections. This would have included earlier surveys such as [6]. Table 4 in the appendix list the works mentioned in this section.\\n\\nAvailability and Accessibility\\n\\nMost research on building analytics uses private datasets [82]. This is due to security and privacy concerns of building owners and occupants. This is prevalent across many aspects of building analytics, from HVAC [69, 33, 77, 71, 30, 29, 20], energy use [60, 61], and more holistic systems [34, 35, 23, 42, 43, 67].\\n\\nSome datasets are publicly accessible, but not for free, such as Pecan Street [14], or not freely available, such as ecobee [21]. Notably, the Mortar dataset [22], which comprises data from 90 buildings and over 9.1 billion data points, is currently unavailable due to cloud deployment issues at the time of writing.\\n\\nBuilding Operation\\n\\nMost public datasets such as EUBUCCO [53] only contain static information such as type, height, and construction year. However, these datasets do not contain sufficient information on building operation. Others contain more extensive information, such as PLUTO [17] and GBMI [10] with more than 70 fields and 380 fields respectively, or building polygons [87] and 3D shapes [9].\\n\\nWhile many public datasets include time information, they are often too sparse (yearly) to be useful for building analytics, which require at least daily data. Examples include the popular CBECS [16], and larger ones like BERTOOL [75] and CENED+2 [68], each containing about a million instances.\\n\\nReal-World and Not Simulation\\n\\nSimulations, while valuable, present limitations due to their reliance on assumptions that may not accurately reflect real-world building systems and human behaviors [95, 72]. Results have been shown to diverge from actual telemetry data in multiple studies [74, 1, 76]. These simulations are often calibrated to match existing datasets such as BEM4CBECS [2, 91, 92, 90] which are based on the CBECS dataset [16], while ResStock [84] and ComStock [58] are based on data from 2.3 million meters in the US [85]. Another notable examples are CityLearn Challenge Series [81, 54, 57, 56]. Not all simulations are software-based. There are also hardware-in-the-loop laboratory setup [65, 64].\\n\\nWhole Building Scope\\n\\nThe few remaining datasets are listed on Tab. 1. They have limited scope, and does not fully capture the entire building as a holistic system. For example, most datasets are focused only on aggregated energy load (UCI [78]), or disaggregated (ASHRAE [32, 31, 37], BDG [52, 51], NILM [59]), or when combined with generation [5], or price [79]. Others focuses on occupancy patterns [25, 24, 18, 47] or water [13, 70].\\n\\nTo our knowledge, LBNL59 [49, 36], a medium-sized office building in Berkeley, is the only comprehensive existing dataset. Our dataset complements this dataset by introducing three new buildings, with more diverse ontology. This allows the exploration various transfer learning techniques to ensure that machine learning models are interoperable between buildings. In Section 3.2, we make a detailed comparison of LBNL59 with our dataset.\\n\\n2.2 Relevant Challenges in Building Analytics\\n\\nThe standardization of building timeseries data overcomes the challenge of interoperability and scalability that can give rise to greater widespread adoption of energy flexibility in a systematic manner. Achieving zero-energy buildings has two conflicting optimization goals: to maximise occupant comfort and indoor environmental quality, and to minimise carbon emissions and operating costs [41]. It involves two components: the building model that represents the thermodynamics and energy behavior of a building and its components such as its construction, materials, and HVAC system, and secondly, a control strategy to automate the control operations.\"}"}
{"id": "6cCFK69vJI", "page_num": 4, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Obtaining a building model involves expert knowledge and significant time to develop and validate. This is further amplified by requiring individual models for each building. These models can be white-box (physics-based) [95, 80], black-box (data-driven), or grey-box (hybrid) [50, 46]. Our dataset and benchmark experiment, which automate timeseries data classification, help address this challenge by reducing the time and cost associated with building key components of these models.\\n\\nIn comparison to building models, there has been a significant focus on optimising building control operations and transitioning from conventional rule-based approaches to model predictive control or data-driven methods [50]. The Building Optimization Framework or BOPTEST [11] exists to enable the development and benchmarking of building control strategies. The performance of a control strategy or algorithm is evaluated on a virtual \u201ctest case\u201d. Currently, these test cases are simulation physics-based models of ideal buildings developed on Spawn [83] (a co-simulation of Modelica and EnergyPlus) and act as emulators. In their paper, Blum et al. [11] make the contrasting argument that simulation-based test cases offer advantages over existing challenges when testing in real buildings, such as being time-consuming and subject to stochastic events.\\n\\nHowever, accessing publicly available and anonymized building timeseries data from various non-residential building types acts as a commodity to reduce the time to develop individual hybrid building models. On one hand, using data from real buildings can be used to calibrate and interpolate lesser-known parameters, while maintaining moderate interpretability. And on the other hand, using standardized timeseries data such as the datasets introduced here aids in scalability and deployability to build generalized multi-zone environments and substituting with data from another building system or zone.\\n\\nMore broadly, there are various other applications of this dataset. Generative AI for Privacy-Preserving Data Sharing: Explore the use of generative AI to create synthetic building timeseries data, enabling building owners to contribute data for research while safeguarding sensitive information. LLM Integration for Natural Language Interaction: Investigate methods to integrate LLMs with building timeseries data, allowing various stakeholders such as building operators to interact with and query the data using natural language. Redeployability: By using a standardised ontology to describe the building, and linking timeseries data to the building model, applications (e.g. measurement and verification, chiller scheduling, occupant comfort) can be written to deploy against a fleet of buildings without a deep understanding of the building topology, such as those provided within this dataset.\\n\\n2.3 Relevant Challenges in Machine Learning (ML) Research\\n\\nDomain shift and domain adaptation. In the realm of ML research, one challenge is in domain adaptation, particularly about the diverse characteristics of buildings. These variations encompass factors such as climate, usage, size, regulations, budget, and architecture, resulting in notable distribution shifts. Consequently, traditional ML methodologies fall short in addressing these discrepancies. Therefore, the development and implementation of domain adaptation techniques [4, 3, 73, 26] are crucial to ensure model generalization across different buildings. Additionally, the usual alternative of employing large foundational models [94] is impractical because privacy and security concerns limit the availability of extensive building datasets for training. Moreover, as shown in Section 3.3.2, the unique permutation of ontologies in each building further complicates the scenario, necessitating novel approaches capable of handling arbitrary permutations effectively [45]. This is an issue since many timeseries architecture do not allow the model to input and output an arbitrary number of variate [86].\\n\\nMultimodal Learning with knowledge graphs (KG) and unbalanced multivariate timeseries (MVTS) with long tails. While many studies focus on MVTS data in conjunction with spatial graph [62, 63], video, image, audio, and text data [15, 89], research on MVTS with knowledge graphs is scarce. Our dataset enable such research as it contains the Brick schema which is a KG on building metadata, describing relationship between the timeseries in the MVTS. Our dataset is also challenging because it is unbalanced and featuring distributions long tails. As shown in Section 3.3.2, some classes, like Chilled Water Differential Temperature Sensor, might only have one or two instances in the entire dataset, or, like Alarm, have zero values for most of the time. These challenges could fuel the developments of innovative techniques.\"}"}
{"id": "6cCFK69vJI", "page_num": 5, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"3 Dataset\\n\\n3.1 Collection Process\\n\\nThis dataset is comprised of data collected onto CSIRO's Data Clearing House (DCH) digital platform [38]. Connecting to the Building Management Systems (BMS), timeseries data is collected from sensors, power, water and gas meters, and other devices within the buildings and uploaded using Message Queuing Telemetry Transport Secured (MQTTS). A semantic model of the building was created using DCH platform tooling. This created Brick schema [7] class definitions (version 1.2.1) for points within the model, and linked these points to the timeseries data ingested via MQTTS.\\n\\nAll instrumentation was conducted prior to the study, and as such no equipment installation or hardware setup was required by the authors. The work integrates with DCH platform which provides digital infrastructure to house building data, as well as to generate semantic models to describe the topology and instrumentation installed within the building. Based on a previously conducted systemic evaluation of existing ontologies suitable for our research context, we chose the Brick schema [66]. In terms of effort to map to the Brick schema, once sufficient details about the building are compiled, then typically expert engineers requires at least one to two days of per building to generate a full semantic building model.\\n\\nIdentifiers for both the point within the model, and the timeseries identifier were anonymised by generating Universally Unique Identifiers (UUID), and a three-year-period subset of the timeseries data was extracted from the DCH platform to produce this dataset. The data was not cleaned in effort to allow evaluation of various different cleaning algorithm, and to allow the evaluations of algorithms against data with realistic errors.\\n\\n3.2 Description\\n\\nThe Building TimeSeries (BTS) dataset provides comprehensive, real-world data on building operations from three buildings in undisclosed Australian locations. It includes timeseries data (visualized in Figure 1) and building metadata standardised according to Brick schema [7]. Table 2.\"}"}
{"id": "6cCFK69vJI", "page_num": 6, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"shows the statistics, comparing it to the LBNL59 dataset which is the only comparable dataset currently available. Part of this dataset have been presented in [45].\\n\\nFigure 2: Brick Schema Illustration and Visualization, depicting machine-readable metadata for buildings as a knowledge graph. It reveals the logical and spatial links between distinct entities within a building, including the associated timeseries.\\n\\nOur dataset use the Brick schema, a knowledge graph (KG) that details building components and their logical and spatial relationships. As illustrated in Figure 2, it specifies the equipment present in the buildings, the sensors attached to these equipment, their locations, and other related components within the same vicinity. Moreover, it also standardised the categorisations of the timeseries data into classes. The formal definition of the KG is as follows:\\n\\n3.3 Formal definition of a building semantic model\\n\\nA building contains many different entities, such as equipment in various locations, and these entities are interconnected. A structure that captures this information is called a \u201cbuilding semantic model\u201d and can be interpreted as a KG. The mathematical formalisation of the \u201cbuilding semantic model\u201d is a directed acyclic graph $G = (V, P, E)$ where:\\n\\nVertices ($V$): Each vertex $v \\\\in V$ represents an entity within the building. This could be a physical location (e.g., a room or a zone served by a single HV AC subsystem), a piece of equipment (e.g. an air temperature sensor or a fan coil unit), or a reference to a time series in the form of a unique key. The actual time series data is typically stored in a separate database.\\n\\nEdges ($E$): Each edge $e = (u, p, v) \\\\in E$ represents a predicate $p$ between two vertices $u$ and $v$.\\n\\nPredicate ($P$): Each edge $e$ is associated with a predicate $p \\\\in P$ that specifies the type of relationship it represents (e.g., hasPart, hasLocation, or isPointOf).\\n\\n3.3.1 BTS and LBNL59\\n\\nBTS complements LBNL59 due to differences in time and location, as well as the size and complexity of the buildings. While LBNL59 covers a period ending in 2020 in the USA, our dataset spans from 2021 onwards in Australia, offering insights into longitudinal change and different seasonal patterns. Additionally, our dataset includes larger and more complex buildings compared to those in LBNL59.\\n\\nThe reason for the discrepancy between the number of timeseries and Point is that multiple time series can be associated with the same Point in some instances.\"}"}
{"id": "6cCFK69vJI", "page_num": 7, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table 2: Summary statistics of the three buildings in our Building TimeSeries (BTS) dataset in comparison with LBNL59 [36, 49]. The table details the count and unique count (in parentheses) for the top-level Brick ontology [7] and the Point sub-classes.\\n\\n|                | LBNL59 | BTS_A | BTS_B | BTS_C |\\n|----------------|--------|-------|-------|-------|\\n| **Top Level**  |        |       |       |       |\\n| Collection     | 0 (0)  | 4 (2) | 2 (2) | 8 (1) |\\n| Equipment      | 59 (3) | 547 (24) | 159 (25) | 963 (41) |\\n| Location       | 73 (3) | 481 (9) | 68 (17) | 381 (26) |\\n| **Point**      |        |       |       |       |\\n| 230 (11)       | 8374 (126) | 851 (57) | 10440 (159) |\\n| **Timeseries** | 337    | 8349  | 851   | 5347  |\\n| **Point Subclass** |       |       |       |       |\\n| Alarm          | 0 (0)  | 798 (16) | 5 (2) | 109 (8) |\\n| Command        | 0 (0)  | 363 (6) | 97 (5) | 785 (13) |\\n| Parameter      | 0 (0)  | 79 (6) | 36 (2) | 935 (17) |\\n| Sensor         | 144 (8) | 4396 (56) | 266 (25) | 4062 (68) |\\n| Setpoint       | 86 (3) | 772 (26) | 232 (16) | 1629 (41) |\\n| Status         | 0 (0)  | 1628 (17) | 110 (6) | 2187 (19) |\\n| **Location**   |        |       |       |       |\\n| Berkeley, USA  |        |       |       |       |\\n| Undisclosed locations in Australia |       |       |       |       |\\n| **Start Date** |        |       |       |       |\\n| 01-01-2018     |        |       |       |       |\\n| 01-01-2021     |        |       |       |       |\\n| 01-01-2021     |        |       |       |       |\\n| 23-06-2021     |        |       |       |       |\\n| **End Date**   |        |       |       |       |\\n| 31-12-2020     |        |       |       |       |\\n| 31-12-2023     |        |       |       |       |\\n| 31-12-2023     |        |       |       |       |\\n| 18-01-2024     |        |       |       |       |\\n| **Duration (Days)** |      |       |       |       |\\n| 1094           |       |       |       |       |\\n| 1094           |       |       |       |       |\\n| 1094           |       |       |       |       |\\n| 939            |       |       |       |       |\\n| **Size Zipped (GB)** |   |       |       |       |\\n| 0.26           |       |       |       |       |\\n| 8.48           |       |       |       |       |\\n| 1.31           |       |       |       |       |\\n| 8.98           |       |       |       |       |\\n\\nBTS dataset is larger and more diverse. Each building in BTS includes significantly more timeseries\u2014ranging from double to over twenty times more\u2014resulting in a combined file size approximately 70 times larger when zipped. The BTS dataset also exhibits greater diversity. Although LBNL59 contains 337 different timeseries, they are composed of only 11 different classes, all classified as either Sensor or Setpoint. In contrast, the BTS dataset has hundreds of unique Point classes including additional categories such as Alarm, Command, Parameter, and Status, offering a more comprehensive and varied dataset.\\n\\n3.3.2 Addressing Literature Gaps with BTS Dataset\\n\\nIn Sections 2.2 and 2.3, the importance of scalability and interoperability was underscored, alongside the notable properties exhibited by our datasets, including domain shift, multimodality, imbalance, and long-tailedness. Here, we elaborate on how the BTS dataset effectively addresses these identified gaps in the literature.\\n\\nBrick is machine-readable and multimodal. Consequently, this dataset fuels the research into building-agnostic, interoperable, and scalable software and ML models for building analytics. As a KG, Brick includes text components, facilitating novel research into interactions between KG, LLM and MVTS data.\\n\\nOur dataset is from real-world buildings. This inclusion highlights real-world issues, as illustrated in Figure 1. For instance, the anomalously straight segments in Air Temp Sensor, Outside Air Temp Sensor, and Enable Status during the middle of May might indicate that there are missing values. Additionally, at the end of June, an anomalous data point is observed where the temperature sensors and setpoint limits drop to zero at the same time. It remains unclear if this was intentional, or by accident, or an error. This dataset serves as a test bed to evaluate how ML pipelines can address such issues during inference.\\n\\nDomain Shift. The presence of domain shift complicates transfer learning efforts, as each building exhibits a unique distribution of classes. For instance, in the BTS_A, over half of the timeseries are sensors, whereas in BTS_B, this proportion drops to less than a third. Similarly, approximately a third of timeseries in BTS_B are setpoints, compared to less than a tenth in BTS_A. Moreover, individual timeseries within each building demonstrate distinct distributions. As depicted in Figure 1, Outside Air Temp Sensor exhibit periodic behavior, leading to a more normal distribution, while Electrical Power Sensor display a non-periodic, monotonically increasing\"}"}
{"id": "6cCFK69vJI", "page_num": 8, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"pattern, and Enable Status adheres to a Bernoulli distribution. Moreover, as shown in the figures in Appendix B, there is a significant disjoint of ontological classes between buildings; more than half of the classes only appear in one of the buildings only. Therefore, our dataset serves as an ideal dataset for investigating domain shifts.\\n\\nLong-Tailed Distributions. The class distribution in BTS exhibits a long tail as shown in the figures in Appendix B. This means that certain class appear frequently, such as the 1004 instances of Electrical Power Sensor across all three buildings (Figure 4), while others are rare, with 10 classes appearing only once in the entire dataset, such as the Air Differential Pressure Setpoint location in BTS_C (Figure 7). Similarly, the values in some timeseries also follow a long-tailed distribution. For example, Alarms are expected to remain at zero most of the time.\\n\\n4 Benchmark\\n\\nFigure 3: Visualisation of the multi-label timeseries classification task.\\n\\nTo demonstrate the utility of this dataset, we conducted a benchmark on the multi-label timeseries classification task. We picked this task because it highlights the challenges in implementing machine learning model that is interoperable between buildings. We also performed an additional benchmark on a zero-shot forecasting task. The details can be found in Appendix D.\\n\\nBrick schema [7] was developed to aids in data interoperability across buildings. However, constructing the Brick schema for each building requires expensive and error prone manual expert labor to classifying timeseries data into the correct Brick classes. Past studies [8, 43, 67] have attempted to automate this process with ML relied on private data and did not release their code. This benchmark is the first to address the task using publicly available data. We formulated this task as a multi-label timeseries classification task, where a label will also return true for all super-classes and return as zero for all subclass. More details on this benchmark can be found in Appendix C\\n\\n4.1 Problem Formulation\\n\\nA datapoint $d = (t, v)$ is an ordered pair where $t \\\\in \\\\mathbb{R}$ is time and $v \\\\in \\\\mathbb{R}$ is the value. A timeseries $T = \\\\{d_i | 1 \\\\leq i \\\\leq n\\\\}$ is a vector of datapoint of length $n \\\\in \\\\mathbb{Z}^+$. The length of timeseries can varies.\\n\\nThe class Point in Brick has $m$ sub-classes, including both direct and indirect sub-classes. In the original dataset, each timeseries is only labeled with a single class. However, we reformulated this as\"}"}
{"id": "6cCFK69vJI", "page_num": 9, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"a multi-label classification task, where a label will return true for all super-classes and return as zero for all subclass. More formally, $l_j \\\\in \\\\{-1, 0, 1\\\\}$ for $1 \\\\leq j \\\\leq m$ where $l_j = 1$ if timeseries $T$ belongs to the $j$th subclass of Point and also for all of its super-class, $l_j = 0$ for all of its sub-class, and $l_j = -1$ otherwise. For practical purposes, $m$ is not the number of sub-classes of Point in the definition, but only those found in our dataset.\\n\\nThe task for each timeseries is to predict if timeseries $T$ belongs in the $j$th label $l_j = f(T) \\\\forall j$. This is visualised in Figure 3.\\n\\n### Table 3: Benchmark results on the multi-label timeseries classification task.\\n\\n| Method          | Accuracy | F1  | mAP |\\n|-----------------|----------|-----|-----|\\n| Zero            | 0.8484 \u00b1 | N/A | 0.0000 \u00b1 |\\n| Mode            | 0.8592 \u00b1 | N/A | 0.1296 \u00b1 |\\n| Random Proportional | 0.8147 \u00b1 0.0001 | 0.1487 \u00b1 0.0002 | 0.1520 \u00b1 0.0001 |\\n| Random Uniform  | 0.4999 \u00b1 0.0002 | 0.1813 \u00b1 0.0002 | 0.1520 \u00b1 0.0001 |\\n| One LR          | 0.1516 \u00b1 N/A | 0.2234 \u00b1 N/A | 0.1516 \u00b1 N/A |\\n| XGBoost         | 0.8593 \u00b1 N/A | 0.2697 \u00b1 N/A | 0.2627 \u00b1 N/A |\\n| Transformer (default) | 0.7807 \u00b1 0.0139 | 0.3360 \u00b1 0.0116 | 0.3171 \u00b1 0.0078 |\\n| Transformer (HP tuned) | 0.8052 \u00b1 0.0074 | 0.3615 \u00b1 0.0079 | 0.3489 \u00b1 0.0057 |\\n| Informer        | 0.7627 \u00b1 0.0010 | 0.3162 \u00b1 0.0019 | 0.2849 \u00b1 0.0030 |\\n| DLinear         | 0.7030 \u00b1 0.0042 | 0.2499 \u00b1 0.0020 | 0.2494 \u00b1 0.0010 |\\n| PatchTST        | 0.7534 \u00b1 0.0017 | 0.2981 \u00b1 0.0014 | 0.2721 \u00b1 0.0013 |\\n\\nTable 3 shows the results. Notice how naive methods achieved very high accuracy but very poor F1 and mean Average Precision (mAP) scores, while deep learning methods obtained slightly better F1 and mAP scores but much poor accuracy. We attribute this to the extreme imbalance in our dataset. All models performed only slightly better than the naive methods, indicating that this is an unsolved problem with significant potential for new discoveries.\\n\\nRefer to Appendix C for more details about this experiment, including formal problem formulation, more results and other experimental details.\\n\\n### 5 Limitations\\n\\nFirstly, the dataset is sourced from only three non-residential buildings in Australia, limiting its geographical diversity. Consequently, models trained on this dataset may not generalize well to residential buildings, or buildings in other regions with different climates, regulations, and building practices. This limitation implies that models should primarily be used for research purposes rather than direct deployment.\\n\\nSecondly, the anonymization process, essential for privacy, may have removed valuable context-specific information, such as building layouts, occupancy patterns, and operational schedules. This reduction in detail could limit the dataset's applicability for certain analyses. Moreover, despite thorough anonymization efforts, there is no absolute guarantee that personally identifiable information cannot be recovered, particularly when correlated with external datasets.\\n\\nFinally, as this paper focuses on the dataset rather than benchmarking, the depth of the benchmarks is limited. For example, hyperparameter optimization was not performed.\\n\\n### 6 Conclusion\\n\\nIn this paper, we introduced the Building TimeSeries (BTS) dataset, addressing the critical gaps in building analytics research by providing a comprehensive, publicly available dataset that spans three buildings over three years, encompassing over ten thousand timeseries data points and 240...\"}"}
{"id": "6cCFK69vJI", "page_num": 10, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"unique classes. This dataset is standardized using the Brick schema, ensuring interoperability and consistency across analyses. Additionally, our datasets inherently possess properties of interest to machine learning research, such as domain shift, multimodality, imbalance, and long-tailedness. Our benchmarks on multi-label timeseries classification and zero-shot forecasting tasks demonstrate the dataset's utility in addressing key challenges in building analytics. By making the BTS dataset and our benchmarking code publicly accessible, we aim to facilitate further research in optimizing building performance, ultimately contributing to efforts to mitigate climate change and enhance human well-being.\\n\\nAcknowledgments and Disclosure of Funding\\nThis research is supported by the NSW Government through the CSIRO's NSW Digital Infrastructure Energy Flexibility (DIEF) project, funded under the Net Zero Plan Stage 1: 2020-2030. This project is also funded by the Reliable Affordable Clean Energy for 2030 (RACE for 2030) Cooperative Research Centre. This research was undertaken with the assistance of resources from the National Computational Infrastructure (NCI Australia), an NCRIS enabled capability supported by the Australian Government.\\n\\nReferences\\n[1] U. Ali, M. H. Shamsi, M. Bohacek, K. Purcell, C. Hoare, E. Mangina, and J. O'Donnell. A data-driven approach for multi-scale gis-based building energy modeling for analysis, planning and support decision making. Applied Energy, 279:115834, 2020.\\n[2] American Society of Heating, Refrigerating and Air-Conditioning Engineers (ASHRAE). Building energy models (bem) for commercial buildings based on cbecs data. https://www.colorado.edu/lab/sbs/BEM, 2021.\\n[3] I. B. Arief-Ang, M. Hamilton, and F. D. Salim. A scalable room occupancy prediction with transferable time series decomposition of co2 sensor data. ACM Transactions on Sensor Networks (TOSN), 14(3-4):1\u201328, 2018.\\n[4] I. B. Arief-Ang, F. D. Salim, and M. Hamilton. Da-hoc: semi-supervised domain adaptation for room occupancy prediction using co2 sensor data. In Proceedings of the 4th ACM International Conference on Systems for Energy-Efficient Built Environments, pages 1\u201310, 2017.\\n[5] Ausgrid. Solar home electricity data. https://www.ausgrid.com.au/Industry/Our-Research/Data-to-share/Solar-home-electricity-data, 2013.\\n[6] T. Babaei, H. Abdi, C. P. Lim, and S. Nahavandi. A study and a directory of energy consumption data sets of buildings. Energy and Buildings, 94:91\u201399, 2015.\\n[7] B. Balaji, A. Bhattacharya, G. Fierro, J. Gao, J. Gluck, D. Hong, A. Johansen, J. Ploen-ngs, Y. Agarwal, et al. Brick: Metadata schema for portable smart building applications. Applied energy, 226:1273\u20131292, 2018.\\n[8] B. Balaji, C. Verma, B. Narayanaswamy, and Y. Agarwal. Zodiac: Organizing large deployment of sensors to create reusable applications for buildings. In Proceedings of the 2nd ACM International Conference on Embedded Systems for Energy-Efficient Built Environments, BuildSys \u201915, page 13\u201322, New York, NY, USA, 2015. Association for Computing Machinery.\\n[9] F. Biljecki. Exploration of open data in southeast asia to generate 3d building models. ISPRS Annals of Photogrammetry, Remote Sensing and Spatial Information Sciences, VI-4/W1-2020:37\u201344, 2020.\\n[10] F. Biljecki and Y. S. Chow. Global building morphology indicators. Computers, Environment and Urban Systems, 95:101809, 2022.\"}"}
{"id": "6cCFK69vJI", "page_num": 11, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":null}"}
{"id": "6cCFK69vJI", "page_num": 12, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"H. B. Gunay, M. Ouf, G. Newsham, and W. O'Brien. Sensitivity analysis and optimization of building operations. *Energy and Buildings*, 199:164\u2013175, 2019.\\n\\nH. B. Gunay, W. Shen, G. Newsham, and A. Ashouri. Modelling and analysis of unsolicited temperature setpoint change requests in office buildings. *Building and Environment*, 133:203\u2013212, 2018.\\n\\nJ. Haberl and J. Kreider. Instructions for the great energy predictor shootout ii: Measuring retrofit energy savings, 1994.\\n\\nJ. Haberl and J. Kreider. Predicting building energy usage: The great energy predictor shootout: Overview and discussion of results, 1994.\\n\\nF. Haldi and D. Robinson. Adaptive actions on shading devices in response to local visual stimuli. *Journal of Building Performance Simulation*, 3(2):135\u2013153, 2010.\\n\\nD. Hong, J. Ortiz, K. Whitehouse, and D. Culler. Towards automatic spatial verification of sensor placement in buildings. In *Proceedings of the 5th ACM Workshop on Embedded Systems For Energy-Efficient Buildings*, pages 1\u20138, 2013.\\n\\nD. Hong, H. Wang, J. Ortiz, and K. Whitehouse. The building adapter: Towards quickly applying building analytics at scale. In *Proceedings of the 2nd ACM International Conference on Embedded Systems for Energy-Efficient Built Environments*, BuildSys '15, page 123\u2013132, New York, NY , USA, 2015. Association for Computing Machinery.\\n\\nT. Hong, N. Luo, D. Blum, and Z. Wang. A three-year building operational performance dataset for informing energy efficiency. [https://datadryad.org/stash/dataset/doi:10.7941/D1N33Q](https://datadryad.org/stash/dataset/doi:10.7941/D1N33Q), 2022.\\n\\nA. Howard, C. Balbach, C. Miller, J. Haberl, K. Gowri, and S. Dane. Ashrae - great energy predictor iii, 2019.\\n\\nD. Hugo, J. McCulloch, A. Hameed, W. Borghei, M. Grimeland, V . Felstead, and M. Goldsworthy. A smart building semantic platform to enable data re-use in energy analytics applications: the data clearing house, 2023.\\n\\nX. Jin, C. Fu, H. Kazmi, A. Balint, A. Canaydin, M. Quintana, F. Biljecki, F. Xiao, and C. Miller. The building data genome directory \u2013 an open, comprehensive data sharing platform for building performance research. *Journal of Physics: Conference Series*, 2600(3):032003, nov 2023.\\n\\nX. Jin, C. Zhang, F. Xiao, A. Li, and C. Miller. A review and reflection on open datasets of city-level building energy use and their applications. *Energy and Buildings*, 285:112911, 2023.\\n\\nM. Killian and M. Kozek. Ten questions concerning model predictive control for energy efficient buildings. *Building and Environment*, 105:403\u2013412, 2016.\\n\\nJ. Koh, B. Balaji, D. Sengupta, J. McAuley, R. Gupta, and Y . Agarwal. Scrabble: transferrable semi-automated semantic metadata normalization using intermediate representation. In *Proceedings of the 5th Conference on Systems for Built Environments*, pages 11\u201320, 2018.\\n\\nJ. Koh, D. Hong, R. Gupta, K. Whitehouse, H. Wang, and Y . Agarwal. Plaster: an integration, benchmark, and development framework for metadata normalization methods. In *Proceedings of the 5th Conference on Systems for Built Environments*, BuildSys '18, page 1\u201310, New York, NY , USA, 2018. Association for Computing Machinery.\\n\\nH. Li, H. Johra, F. de Andrade Pereira, T. Hong, J. Le Dr\u00e9au, A. Maturo, M. Wei, Y . Liu, A. Saberi-Derakhtenjani, Z. Nagy, A. Marszal-Pomianowska, D. Finn, S. Miyata, K. Kaspar, K. Nweye, Z. O'Neill, F. Pallonetto, and B. Dong. Data-driven key performance indicators and datasets for building energy flexibility: A review and perspectives. *Applied Energy*, 343:121217, 2023.\"}"}
{"id": "6cCFK69vJI", "page_num": 13, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"X. Lin, A. Prabowo, I. Razzak, H. Xue, M. Amos, S. Behrens, S. White, and F. D. Salim. A gap in time: The challenge of processing heterogeneous IoT point data in buildings. arXiv preprint arXiv:2405.14267, 2024.\\n\\nY. W. Lin, T. L. E. Tang, and C. J. Spanos. Hybrid approach for digital twins in the built environment. In Proceedings of the Twelfth ACM International Conference on Future Energy Systems, pages 450\u2013457, 2021.\\n\\nY. Liu, B. Dong, T. Hong, B. Olesen, T. Lawrence, and Z. O\u2019Neill. ASHRAE URP-1883: Development and analysis of the ASHRAE global occupant behavior database. Science and Technology for the Built Environment, 29(8):749\u2013781, 2023.\\n\\nY. Liu, T. Hu, H. Zhang, H. Wu, S. Wang, L. Ma, and M. Long. itransformer: Inverted transformers are effective for time series forecasting. arXiv preprint arXiv:2310.06625, 2023.\\n\\nN. Luo, Z. Wang, D. Blum, C. Weyandt, N. Bourassa, M. A. Piette, and T. Hong. A three-year dataset supporting research on building energy management and occupancy analytics. Scientific Data, 9(1):156, 2022.\\n\\nT. Marzullo, S. Dey, N. Long, J. Leiva Vilaplana, and G. Henze. A high-fidelity building performance simulation test bed for the development and evaluation of advanced controls. Journal of Building Performance Simulation, 15(3):379\u2013397, 2022.\\n\\nC. Miller, A. Kathirgamanathan, B. Picchetti, P. Arjunan, J. Y. Park, Z. Nagy, P. Raftery, B. W. Hobson, Z. Shi, and F. Meggers. The building data genome project 2, energy meter data from the ASHRAE great energy predictor III competition. Scientific Data, 7:368, Oct. 2020.\\n\\nC. Miller and F. Meggers. The building data genome project: An open, public data set from non-residential building electrical meters. Energy Procedia, 122:439 \u2013 444, 2017.\\n\\nMilojevic-Dupont, Nikola and Wagner, Felix, F. Nachtigall, J. Hu, G. B. Br\u00fcser, M. Zumwald, F. Biljecki, N. Heeren, L. H. Kaack, P.-P. Pichler, and F. Creutzig. Eubucco v0.1: European building stock characteristics in a common and open database for 200+ million individual buildings. Scientific Data, 10(1):147, 2023.\\n\\nG. Z. Nagy. The CityLearn Challenge 2021. https://doi.org/10.18738/T8/Q2EIQC, 2021.\\n\\nY. Nie, N. H. Nguyen, P. Sinthong, and J. Kalagnanam. A time series is worth 64 words: Long-term forecasting with transformers. In International Conference on Learning Representations, 2023.\\n\\nK. Nweye, M. Langtry, R. Choudhary, and G. Z. Nagy. The CityLearn Challenge 2023 Dataset. https://doi.org/10.18738/T8/SXFWTI, 2024.\\n\\nK. Nweye, S. Siva, and G. Z. Nagy. The CityLearn Challenge 2022. https://doi.org/10.18738/T8/0YLJ6Q, 2023.\\n\\nA. Parker, H. Horsey, M. Dahlhausen, M. Praprost, C. CaraDonna, A. LeBar, and L. Klun. Comstock reference documentation: Version 1. Technical report, National Renewable Energy Lab. (NREL), Golden, CO (United States), 2023.\\n\\nL. Pereira and N. Nunes. Performance evaluation in non-intrusive load monitoring: datasets, metrics, and tools\u2014a review. Wiley Interdisciplinary Reviews: Data Mining and Knowledge Discovery, 8(6):e1265, 2018.\\n\\nA. Prabowo, K. Chen, H. Xue, S. Sethuvenkatraman, and F. D. Salim. Continually learning out-of-distribution spatiotemporal data for robust energy forecasting. In G. De Francisci Morales, C. Perlich, N. Ruchansky, N. Kourtellis, E. Baralis, and F. Bonchi, editors, Machine Learning and Knowledge Discovery in Databases: Applied Data Science and Demo Track, pages 3\u201319, Cham, 2023. Springer Nature Switzerland.\"}"}
{"id": "6cCFK69vJI", "page_num": 14, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A. Prabowo, K. Chen, H. Xue, S. Sethuvenkatraman, and F. D. Salim. Navigating out-of-distribution electricity load forecasting during covid-19: A continual learning approach leveraging human mobility. In Proceedings of the 10th ACM International Conference on Systems for Energy-Efficient Buildings, Cities, and Transportation, 2023.\\n\\nA. Prabowo, W. Shao, H. Xue, P. Koniusz, and F. D. Salim. Because every sensor is unique, so is every pair: Handling dynamicity in traffic forecasting. In 9th ACM/IEEE Conference on Internet of Things Design and Implementation (IoTDI), IoTDI '23, page 93\u2013104, New York, NY, USA, 2023. Association for Computing Machinery.\\n\\nA. Prabowo, H. Xue, W. Shao, P. Koniusz, and F. D. Salim. Traffic forecasting on new roads unseen in the training data using spatial contrastive pre-training. Data Mining and Knowledge Discovery, 2023.\\n\\nT. P\u00e9an, R. Costa-Castell\u00f3, E. Fuentes, and J. Salom. Experimental testing of variable speed heat pump control strategies for enhancing energy flexibility in buildings. IEEE Access, 7:37071\u201337087, 2019.\\n\\nT. P\u00e9an and J. Salom. Experimental HIL datasets of a heat pump controlled by MPC or rule-based controllers for energy flexibility. https://doi.org/10.5281/zenodo.7006826, Aug. 2022.\\n\\nZ. Qiang, S. Hands, K. Taylor, S. Sethuvenkatraman, D. Hugo, P. Ghiasnezhad Omran, M. Perera, and A. Haller. A systematic comparison and evaluation of building ontologies for deploying data-driven analytics in smart buildings. Energy and Buildings, 292:113054, 2023.\\n\\nM. Rana, A. Rahman, M. Almashor, J. McCulloch, and S. Sethuvenkatraman. Automatic classification of sensors in buildings: Learning from time series data. In T. Liu, G. Webb, L. Yue, and D. Wang, editors, AI 2023: Advances in Artificial Intelligence, pages 367\u2013378, Singapore, 2024. Springer Nature Singapore.\\n\\nRegione Lombardia, Azienda Regionale per l\u2019Innovazione e gli Acquisti (ARIA). Cened+2. https://www.dati.lombardia.it/Energia/Database-CENED-2-Certificazione-ENergetica-degli-E/bbky-sde/about_data, 2024.\\n\\nH. B. Rijal, P. Tuohy, F. Nicol, M. A. Humphreys, A. Samuel, and J. Clarke. Development of an adaptive window-opening algorithm to predict the thermal comfort, energy use and overheating in buildings. Journal of building performance simulation, 1(1):17\u201330, 2008.\\n\\nM. Ritchie, J. Engelbrecht, and M. Booysen. A probabilistic hot water usage model and simulator for use in residential energy management. Energy and Buildings, 235:110727, 2021.\\n\\nJ. Rubio-Herrero, V. Chandan, C. Siegel, A. Vishnu, and D. Vrabie. A learning framework for control-oriented modeling of buildings. In 2017 16th IEEE International Conference on Machine Learning and Applications (ICMLA), pages 473\u2013478. IEEE, 2017.\\n\\nF. D. Salim, B. Dong, M. Ouf, Q. Wang, I. Pigliautile, X. Kang, T. Hong, W. Wu, Y. Liu, S. K. Rumi, et al. Modelling urban-scale occupant behaviour, mobility, and energy in buildings: A survey. Building and Environment, 183:106964, 2020.\\n\\nW. Shao, S. Zhao, Z. Zhang, S. Wang, M. S. Rahaman, A. Song, and F. D. Salim. Fadacs: A few-shot adversarial domain adaptation architecture for context-aware parking availability sensing. In 2021 IEEE International Conference on Pervasive Computing and Communications (PerCom), pages 1\u201310. IEEE, 2021.\\n\\nX. Shi, B. Si, J. Zhao, Z. Tian, C. Wang, X. Jin, and X. Zhou. Magnitude, causes, and solutions of the performance gap of buildings: A review. Sustainability, 11(3):937, 2019.\\n\\nSustainable Energy Authority of Ireland. Ber tool. https://ndber.seai.ie/BERResearchTool/ber/search.aspx.\"}"}
{"id": "6cCFK69vJI", "page_num": 15, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"H. Syse and H. Nikpey. Building performance simulation of mybox energy lab in Norway: Investigating the human dimension in energy use analysis. EasyChair Preprint no. 13521, EasyChair, 2024.\\n\\nJ. Taneja, A. Krioukov, S. Dawson-Haggerty, and D. Culler. Enabling advanced environmental conditioning with a building application stack. In 2013 International Green Computing Conference Proceedings, pages 1\u201310, 2013.\\n\\nA. Trindade. ElectricityLoadDiagrams20112014. UCI Machine Learning Repository, 2015. DOI: https://doi.org/10.24432/C58C86.\\n\\nUK Power Networks. Smartmeter energy consumption data in London households. https://data.london.gov.uk/dataset/smartmeter-energy-use-data-in-london-households, 2015.\\n\\nO. O. S. U.S. Department of Energy and T. I. (OSTI). EnergyPlus\u2122, version 00, 2017.\\n\\nJ. Vazquez Canteli and Z. Nagy. The CityLearn Challenge 2020. https://doi.org/10.18738/T8/ZQKK6E, 2020.\\n\\nP. Wei and X. Jiang. Data-driven energy and population estimation for real-time city-wide energy footprinting. In Proceedings of the 6th ACM International Conference on Systems for Energy-Efficient Buildings, Cities, and Transportation, BuildSys '19, page 267\u2013276, New York, NY, USA, 2019. Association for Computing Machinery.\\n\\nM. Wetter, K. Benne, H. Tummescheit, and C. Winther. Spawn: coupling Modelica buildings library and EnergyPlus to enable new energy system and control applications. Journal of Building Performance Simulation, 17(2):274\u2013292, 2024.\\n\\nWilson, Eric, Parker, Andrew, Fontanini, Anthony, Present, Elaina, Reyna, Janet, Adhikari, Rajendra, Bianchi, Carlo, CaraDonna, Christopher, Dahlhausen, Matthew, Kim, Janghyun, LeBar, Amy, Liu, Lixi, Praprost, Marlena, White, Philip, Zhang, Liang, DeWitt, Peter, Merket, Noel, Speake, Andrew, Hong, Tianzhen, Li, Han, M. Frick, Natalie, Wang, Zhe, Blair, Aileen, Horsey, Henry, Roberts, David, Trenbath, Kim, Adekanye, Oluwatobi, Bonnema, Eric, E. Kontar, Rawad, Gonzalez, Jonathan, Horowitz, Scott, Jones, Dalton, Muehleisen, Ralph, Platthotam, Siby, Reynolds, Matthew, Robertson, Joseph, Sayers, Kevin, and Q. Li. End-use load profiles for the U.S. building stock. Technical report, National Renewable Energy Lab. (NREL), Golden, CO (United States), 2021.\\n\\nE. J. Wilson, A. Parker, A. Fontanini, E. Present, J. L. Reyna, R. Adhikari, C. Bianchi, C. CaraDonna, M. Dahlhausen, J. Kim, et al. End-use load profiles for the U.S. building stock: Methodology and results of model calibration, validation, and uncertainty quantification. Technical report, National Renewable Energy Lab. (NREL), Golden, CO (United States), 2022.\\n\\nG. Woo, C. Liu, A. Kumar, C. Xiong, S. Savarese, and D. Sahoo. Unified training of universal time series forecasting transformers. In International Conference on Machine Learning. PMLR, 2024.\\n\\nA. N. Wu and F. Biljecki. Roofpedia: Automatic mapping of green and solar roofs for an open roofscape registry and evaluation of urban sustainability. Landscape and Urban Planning, 214:104167, 2021.\\n\\nH. Wu, T. Hu, Y. Liu, H. Zhou, J. Wang, and M. Long. TimesNet: Temporal 2D-variation modeling for general time series analysis. In International Conference on Learning Representations, 2023.\\n\\nH. Xue and F. D. Salim. Utilizing language models for energy load forecasting. In Proceedings of the 10th ACM International Conference on Systems for Energy-Efficient Buildings, Cities, and Transportation, BuildSys '23, page 224\u2013227, New York, NY, USA, 2023. Association for Computing Machinery.\"}"}
{"id": "6cCFK69vJI", "page_num": 16, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Y. Ye, K. Hinkelman, J. Zhang, W. Zuo, and G. Wang. A methodology to create prototypical building energy models for existing buildings: A case study on US religious worship buildings. *Energy and Buildings*, 194:351\u2013365, 2019.\\n\\nY. Ye, G. Wang, and W. Zuo. Creation of a prototype building model of college and university building. In *Proceedings of the 4th International Conference on Building Energy and Environment (COBEE2018)*, Melbourne, Australia, 2018.\\n\\nY. Ye, G. Wang, W. Zuo, P. Yang, and K. Joshi. Development of a baseline building model of auto service and repair shop. In *Proceedings of 2018 ASHRAE Building Performance Analysis Conference and SimBuild (BPACS2018)*, Chicago, IL, USA, 2018.\\n\\nA. Zeng, M. Chen, L. Zhang, and Q. Xu. Are transformers effective for time series forecasting? In *Proceedings of the AAAI conference on artificial intelligence*, volume 37, pages 11121\u201311128, 2023.\\n\\nD. Zhang, Y. Yu, C. Li, J. Dong, D. Su, C. Chu, and D. Yu. Mm-llms: Recent advances in multimodal large language models. *arXiv preprint arXiv:2401.13601*, 2024.\\n\\nH.-x. Zhao and F. Magoul\u00e8s. A review on the prediction of building energy consumption. *Renewable and Sustainable Energy Reviews*, 16(6):3586\u20133592, 2012.\\n\\nH. Zhou, S. Zhang, J. Peng, S. Zhang, J. Li, H. Xiong, and W. Zhang. Informer: Beyond efficient transformer for long sequence time-series forecasting. In *Proceedings of the AAAI conference on artificial intelligence*, volume 35, pages 11106\u201311115, 2021.\"}"}
