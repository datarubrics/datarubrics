{"id": "USUkwg5pW6", "page_num": 1, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Scribbles for All: Benchmarking Scribble Supervised Segmentation Across Datasets\\n\\nWolfgang Boettcher\\nLukas Hoyer\\nOzan Unal\\nJan Eric Lenssen\\nBernt Schiele\\n\\n1 Max Planck Institute for Informatics, Saarland Informatics Campus, Germany\\n2 ETH Z\u00fcrich, Switzerland\\n\\n{wolfgang.boettcher, jlenssen, schiele}@mpi-inf.mpg.de\\n{lhoyer, ouenal}@vision.ee.ethz.ch\\n\\nAbstract\\nIn this work, we introduce Scribbles for All, a label and training data generation algorithm for semantic segmentation trained on scribble labels. Training or fine-tuning semantic segmentation models with weak supervision has become an important topic recently and was subject to significant advances in model quality. In this setting, scribbles are a promising label type to achieve high quality segmentation results while requiring a much lower annotation effort than usual pixel-wise dense semantic segmentation annotations. The main limitation of scribbles as source for weak supervision is the lack of challenging datasets for scribble segmentation, which hinders the development of novel methods and conclusive evaluations. To overcome this limitation, Scribbles for All provides scribble labels for several popular segmentation datasets and provides an algorithm to automatically generate scribble labels for any dataset with dense annotations, paving the way for new insights and model advancements in the field of weakly supervised segmentation. In addition to providing datasets and algorithm, we evaluate state-of-the-art segmentation models on our datasets and show that models trained with our synthetic labels perform competitively with respect to models trained on manual labels. Thus, our datasets enable state-of-the-art research into methods for scribble-labeled semantic segmentation. The datasets, scribble generation algorithm, and baselines are publicly available at https://github.com/wbkit/Scribbles4All.\\n\\n1 Introduction\\nSemantic segmentation is one of the most crucial tasks for computer vision research and a key component to scene understanding in many applications. While substantial advancements have been made in designing highly accurate segmentation architectures [25, 6, 8, 7, 17], those models heavily rely on detailed labels. The crafting of such dense labels constitutes a laborious and resource-intensive process. This limitation impedes the availability of specialized datasets and the practical deployment of vision algorithms in real-world scenarios. It is particularly pronounced in self-driving applications, which demand immense amounts of training data [2, 32, 9] or in domains with fine-grained classes [24, 54]. Those settings necessitate models capable of dealing with complex inter-object relations, varying shapes, and scales. Even in the current era of large pre-trained foundation models [27, 19], fine-tuning these models on custom, labeled data still remains a necessity for many applications [48, 4, 42].\\n\\nOne popular approach to addressing the issue of label cost is weakly supervised semantic segmentation (WSSS) [3, 49, 43] which has made significant progress in recent years. WSSS methods use incomplete labelling in the form of image level labels [51] or bounding boxes [18, 26, 50] to label\"}"}
{"id": "USUkwg5pW6", "page_num": 2, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 1: Visual difference in scribble-supervised performance \u2013 While predictions from scribble supervised models are almost identical to fully supervised models for PascalVOC, the quality of segmentation for scribble supervised Cityscapes models is visibly poorer (see dotted boxes), highlighting the greater complexity of the dataset and the need for further research.\\n\\nObjects. Similarly, Sparsely Annotated Semantic Segmentation (SASS) is defined by labeling a subset of the image pixels through coarse labels [11, 10], labeling every object through points [1] or drawing scribbles [23, 37]. Previous research has shown that especially scribbles are a promising means of attaining cheap yet powerful labels [23, 40]. While they take only slightly longer for the annotator to label than points, they have been shown to enable stronger segmentation results [45, 21]. Annotating full segmentation images takes several minutes for object-centric datasets like Pascal [24] or even hours for more complex driving scenes [9, 30] while labeling ScribbleSup [23] took on average about 25 seconds. Moreover, state-of-the-art methods gain 7\u201310% mIoU on PascalVOC [14] for scribble labels over point labels [31, 45, 21]. This success has lead to a series of promising training methods for SASS with scribbles [13, 39, 44].\\n\\nHowever, currently, there exists only one popular segmentation dataset with scribble labels, namely ScribbleSup, introduced by Lin et al. [23] for the PascalVOC dataset. An example image of it is shown in Fig. 2. Two challenges arise for the research area of scribble-supervised segmentation methods. Firstly, generalization of methods to other datasets cannot be verified. Secondly, PascalVOC is too easy to serve as the sole benchmark for scribble-supervised methods as visualized in Fig. 1. It consists mostly of images with one object class and the background class. By learning precise class boundaries of the dominant background class, a model can already achieve high performance while the challenge of learning object-to-object boundaries is less relevant. In contrast, modern semantic segmentation faces additional challenges such as small object instances (e.g. poles in Cityscapes) or a large number of semantic classes (e.g. 150 classes in ADE20K), which cannot be properly benchmarked with PascalVOC (see Fig. 1).\\n\\nWe present an algorithm that derives scribble labels from fully labeled datasets which are functionally equivalent to hand-drawn scribbles allowing us to bring scribble-supervision to a variety of popular and challenging segmentation datasets. Our datasets enable future research on segmentation methods trained or fine-tuned on scribble labels. Explicitly, we extend the applicability of scribble-based segmentation methods to the broad range of available datasets such as Cityscapes [9], ADE20K [54], KITTI360 [22], and more. Our main contributions can be summarized as follows:\\n\\n- We present an automatic scribble generator for any fully labeled segmentation dataset, enabling future research into state-of-the-art models for scribble-supervised segmentation.\\n- We introduce s4Pascal, s4KITTI360, s4Cityscapes and s4ADE20K, four automatically generated datasets with scribble labels.\\n- We benchmark state-of-the-art segmentation methods on our datasets, showing that models trained with our scribbles perform on-par with models trained on manually created scribbles.\"}"}
{"id": "USUkwg5pW6", "page_num": 3, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Related Work\\n\\nIn this section, we provide a structured overview of the research that is of particular relevance for our work and the current state-of-the-art with respect to scribble labelled datasets.\\n\\nWeakly Annotated Semantic Segmentation (WASS)\\n\\nMethods for WASS have been trained using image-level labels [29, 49, 43] or bounding-box labels [18, 26]. While image-level labels are fast to obtain, they suffer from the lack of pixel-level information, which renders them unsuitable for complex scenes. Bounding-boxes offer spatial supervision on individual objects but fail to deal with overlapping, non-box-aligned objects. In contrast to WASS labels, scribbles provide a better supervision signal and are cheaper to obtain than bounding boxes [45]. The latter suffer from added challenges such as the overlap of boxes.\\n\\nSparsely Annotated Semantic Segmentation (SASS)\\n\\nRelated to supervision with weak labels, SASS is concerned with using labeled pixel subsets, allowing direct supervision on sparse regions of the image. The two main label types for SASS are point labels [1] and scribbles [23], which led to several follow-up representations [11]. Depending on the requirements and domain, those other labelling strategies are also used, such as coarse annotation [11, 10]. The latter comes with the benefit of being more expressive but also requires more effort. Scribbles have been demonstrated to be a Pareto-optimal choice between labelling effort and segmentation quality. Unal et al. [36] introduce ScribbleKITTI for SemanticKITTI and demonstrate that scribbles can lead to approximately supervised performance in the 3D domain. Scribbles, traditionally, require a human annotator, which entails the need for further resources to provide the respective labels, hindering model research and development. In this work, we propose a method to automatically generate scribble labels from dense 2D annotations, providing excellent benefits for the development of future SASS methods.\\n\\nTraining SASS models.\\n\\nIn contrast to a dense semantic label, the labels used for SASS do not provide information on the object outline, leading to challenges in class boundary estimation [23]. Several methods utilise auxiliary tasks such as edge detection [40] or saliency [52] to improve performance. However, those methods tend to suffer from model errors in the auxiliary task, which limit their prediction capabilities [21]. Other approaches [34, 33, 37] use regularised losses that model interdependencies of the labeled and unlabeled pixels. Often, these are combined with CRFs [20], which are adapted for region growing on the pseudo labels generated by the model and for overall refinement of the predictions [49, 41, 44]. For example, URSS [28] addresses the inherent model uncertainty in semi-supervised training by applying random walks and consistency losses in a self-training framework. Similarly, Valvano et al. [38] uses self-training but with multi-scale consistency while TEL [21] achieve performance increases by introducing a similarity prior through a novel tree-based loss. Most recently, SASformer [31] utilises the attention mechanisms in transformer architectures, using global dependencies to achieve more accurate segmentation results, marking the trend away from auxiliary tasks and two-stage approaches towards end-to-end trainable frameworks.\\n\\nTo validate our automatic scribble labels, we train and evaluate a subset of these recent methods on our datasets and show performance comparative to manual labelling.\\n\\nScribble Annotation Datasets\\n\\nWe present the second scribble image dataset so far, only preceded by ScribbleSup [23]. ScribbleSup only contains labels for the older PascalVOC [14] dataset. In contrast, we provide labels for a larger set of currently relevant datasets and, additionally, a method for the automatic generation of scribbles for any fully-annotated dataset.\\n\\n3 Automated Scribble Generation\\n\\nThis section introduces our automatic scribble generation method, before the individual generated datasets are described in Sec. 4. We begin by shortly outlining design objectives in Sec. 3.1, before describing the detailed algorithm in Sec. 3.2.\"}"}
{"id": "USUkwg5pW6", "page_num": 4, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"3.1 Design Objectives\\n\\nThe presented scribble generation algorithm takes an image with corresponding dense segmentation labels as input and produces a single scribble, represented as a set of points, for each object in the image. We formulate the following design objectives:\\n\\n1. Mimic human annotations. The generated scribbles should approximately resemble scribbles that human annotators draw. Specifically, they are supposed to be more coarse for larger, simple geometries and more precise for detailed objects, as would be the case with hand-crafted labels. Also, the scribble is expected to go roughly through the centre part of an object and not to come too close to its margins for a large portion of its length.\\n\\n2. Probabilistic generation. The generation of labels should occur in a probabilistic fashion to prevent mean collapse when confronted with similar shapes, maintaining enough variance in the labelling process.\\n\\n3. No boundary violation. We also apply hard constraints that prevent scribbles from violating any class boundaries.\\n\\nWe design the algorithm described in Sec. 3.2 to reach these objectives.\\n\\n3.2 Scribble Generation Algorithm\\n\\nThis section describes the scribble generation algorithm, as detailed in Alg. 1 and visualized in Fig. 3.\\n\\nPreprocessing. The algorithm commences by separating the semantic mask $\\\\text{GT}$ of an image by class $C$. Then, we apply class-wise connected component analysis to obtain separate masks for each instance of the respective class. Each object mask $b \\\\in B$ of $J$ total objects masks is subsequently subjected to morphological erosion in an amount $\\\\epsilon_1$ depending on the object area to comply with design objective 1 as shown in Fig. 3a). If an object is separated into multiple masks at this stage, each mask will be considered an individual object for further processing. Through this, we ensure that objects with complex non-convex shapes are properly labeled as well by generating multiple scribbles. If two objects overlap in a single connected component, they are considered as a single instance. This splitting procedure is only applied in the first erosion step. After the following ones (see below), smaller separated objects are removed instead.\\n\\nPolynomial fitting. After the preprocessing procedure, the algorithm fits a curve through each obtained mask by iteratively repeating the following process until a valid scribble annotation is found or the blob is completely eroded: A fixed-rate $\\\\epsilon_2$ binary erosion is applied. After that, the edge image of the blob $e$ and its centre-of-mass (COM) $c$ is calculated. In the case of strongly non-convex shapes, it can occur that the COM is not part of the image. If that happens, the object is subjected to a skeletonisation operation in the style introduced by Zhang et al. and the closest point in terms of $L_2$-distance of the skeleton wrt. to the true COM is used as a COM substitute.\\n\\nHand-drawn scribbles usually follow the object's predominant direction up to some human noise factor. To imitate this behaviour, we randomly sample $Q$ points on the object edges and select a pair $(p_1, p_2)$ with the maximum distance $\\\\|p_1 - p_2\\\\|_2$ by farthest point sampling. The pair spans the furthest distance of the object most of the time while retaining a chance of suboptimal solutions.\"}"}
{"id": "USUkwg5pW6", "page_num": 5, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Algorithm 1 Scribble Generation\\n\\nInput:\\n$\\\\text{GT mask} \\\\in \\\\mathbb{N}^{m \\\\times n}_0$\\n\\n$C_{\\\\text{mask}} \\\\leftarrow \\\\text{separateClass}(\\\\text{GT mask})$\\n\\n$B \\\\leftarrow \\\\text{componentAnalysis}(C_{\\\\text{mask}})$\\n\\nfor $b \\\\in B$ do\\n\\n$\\\\hat{b} \\\\leftarrow \\\\text{binaryErosion}(b, \\\\epsilon_1(\\\\text{area}(b)))$\\n\\nwhile $\\\\hat{b} \\\\neq \\\\emptyset$ do\\n\\n$\\\\hat{b} \\\\leftarrow \\\\text{binaryErosion}(\\\\hat{b}, \\\\epsilon_2)$\\n\\n$e \\\\leftarrow q(Sx^* \\\\hat{b}, Sy^* \\\\hat{b})$\\n\\n$c_{\\\\text{M}} \\\\leftarrow \\\\text{centerOfMass}(\\\\hat{b})$\\n\\nif $c_{\\\\text{M}} \\\\notin \\\\hat{b}$ then\\n\\n$c_{\\\\text{M}} \\\\leftarrow \\\\text{skeletonCOM}(\\\\hat{b}, c_{\\\\text{M}})$\\n\\nend if\\n\\nfor $i \\\\in \\\\mathbb{N}$ do\\n\\n$P \\\\leftarrow \\\\text{sample}(e, Q)$\\n\\n$(p_1, p_2) \\\\leftarrow \\\\text{furthest-pair}(P, L_2)$\\n\\n$\\\\hat{c}_{\\\\text{M}} \\\\leftarrow c_{\\\\text{M}} + \\\\epsilon,\\n\\n\\\\epsilon \\\\sim \\\\mathcal{N}(0, \\\\sigma_{\\\\text{com}})$\\n\\n$\\\\hat{\\\\beta}_0, \\\\hat{\\\\beta}_1, \\\\hat{\\\\beta}_2 \\\\leftarrow \\\\text{arg min}_{\\\\beta_0, \\\\beta_1, \\\\beta_2} ||P_j \\\\in \\\\{p_1, p_2, \\\\hat{c}_\\\\text{M}\\\\}||_2^2$\\n\\n$F_2(x) = \\\\hat{\\\\beta}_0 + \\\\hat{\\\\beta}_1 x + \\\\hat{\\\\beta}_2 x^2$\\n\\n$\\\\sigma \\\\leftarrow \\\\text{area}(\\\\hat{b}) / \\\\alpha$\\n\\n$(p_3, p_4) \\\\leftarrow \\\\text{sample}(F_2(x), 2) + \\\\epsilon,\\n\\n\\\\epsilon \\\\sim \\\\mathcal{N}(0, \\\\sigma)$\\n\\n$\\\\hat{\\\\beta}_0, ... \\\\hat{\\\\beta}_4 \\\\leftarrow \\\\text{arg min}_{\\\\beta_0, ..., \\\\beta_4} ||P_j \\\\in \\\\{p_1, ..., p_4, \\\\hat{c}_\\\\text{M}\\\\}||_2^2$\\n\\n$F_4(x) = \\\\hat{\\\\beta}_0 + \\\\hat{\\\\beta}_1 x + ... + \\\\hat{\\\\beta}_4 x^4$\\n\\nif $F_4(x), x \\\\in [p_1, p_2] \\\\subset \\\\hat{b}$ then\\n\\nbreak\\n\\nend if\\n\\nend for\\n\\nend while\\n\\nend for\\n\\nreturn $F_4(x), x \\\\in [p_1, p_2]$\\n\\nvariance like in the case of a human annotator. Random sampling allows the algorithm to explore an extended solution space if the scribble generation takes multiple iterations for the object. The returned point pairs and the COM with added noise $\\\\hat{c}_\\\\text{M}$ are utilised to obtain a second-order polynomial $F_2$ as depicted in Fig. 3b), by solving the linear least-squares problem. We choose $x$ as the coordinate with the largest distance between $p_1$ and $p_2$.\\n\\nThe next step improves the label variance of the scribble shapes and satisfies design objective 2. For this, two points $p_3, p_4$ are sampled from $F_2$, adding area-dependent Gaussian noise. As the final step, $\\\\hat{c}_\\\\text{M}, p_1, ..., p_4$ are used to find a 4th-order polynomial $F_4$ as shown in Fig. 3d).\\n\\nIf the curve is entirely within the blob and does not violate any class boundaries (objective 3), the label is considered valid. Otherwise, the process of sampling from the edge and fitting curves is repeated up to $N$-times. If this does not yield a valid scribble, the algorithm is restarted.\\n\\n4 Automatic Scribble Datasets\\n\\nWe now describe the datasets we created with the algorithm presented in Sec. 3.2. All datasets are publicly available and can be used to advance research in the area of scribble-supervised models.\\n\\ns4Pascal Dataset\\n\\nThe Pascal VOC 2012 dataset [14] is a widely used benchmark dataset in the field of object detection, image classification and semantic segmentation. It consists of images collected from various sources and covers 20 object classes and the background class. In terms of size, the Pascal VOC 2012 dataset for semantic segmentation contains 10,582 training images and 1,449 validation images when using the augmented version introduced by Hariharan et al. [15]. The dataset's semantic mask includes a \u201cdo not care\u201d label that is applied between class boundaries and fine-grained structures of the same class.\"}"}
{"id": "USUkwg5pW6", "page_num": 6, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"Table 1: Quantitative Evaluation of the Scribbles for All (s4) datasets \u2013 When compared, ScribbleSup and s4Pascal show very similar characteristics with respect to the number of labeled pixels and the number of labeled pixels that are within a defined distance to the class boundary. The average number of scribbles per image differs, however.\\n\\n| Dataset          | Statistical Property | \u03b1 10 px | \u03b1 20 px | \u03b1 30 px | avg. scribbles |\\n|------------------|----------------------|---------|---------|---------|----------------|\\n| ours train/val   |                      |         |         |         |                |\\n| ScribbleSup      |                      | 21.25%  | 10.11%  | 30.08%  | 46.50%         |\\n| s4Pascal         | \u2713                    | 21.25%  | 10.11%  | 30.08%  | 46.50%         |\\n| s4Cityscapes     | \u2713                    | 13.8%   | 27.45%  | 35.24%  | 35.24%         |\\n| s4KITTI360       | \u2713                    | 5.09%   | 16.93%  | 29.80%  | 29.80%         |\\n| s4ADE20K         | \u2713                    | 4.35%   | 9.10%   | 12.03%  | 17.27%         |\\n\\nThe scribble labels for PascalVOC were introduced by Lin et al. [23] as the ScribbleSup dataset. Fig. 2 depicts a segmentation map and scribble labels from ScribbleSup on the right. Given that ScribbleSup is the only available dataset with hand-crafted scribble labels and provides dense semantic maps as well, it is the suitable reference to evaluate the synthetic scribble generation algorithm described in Sec. 3. Dense segmentation maps are required since those serve as the input for the synthetic scribble generation. The new synthetic scribble dataset is created using the dense labels of the Pascal VOC 21-class dataset. It is from now on referred to as s4Pascal. Label generation includes all object classes as well as the background class. The \u201cdo not care\u201d areas of the segmentation maps are omitted. Therefore, those are also not valid points for the scribble generation algorithms, while the hand-crafted labels appear to have no clear policy on whether scribbles are allowed to intersect \u201cdo not care\u201d regions. Overall, s4Pascal adds synthetic scribbles to the PascalVOC dataset, allowing for model training with three different types of segmentation labels.\\n\\nIn general, the scribble labels of ScribbleSup and s4Pascal are statistically very similar. As shown in Tab. 1 both contain approximately the same share of labeled pixels and exhibit similar closeness of scribbles very close to the class boundaries (\u03b1 10 px). The same is true for the overall spatial distribution of scribbles within the objects the label (\u03b1 20 px, \u03b1 30 px) corresponds to. Being this similar, their visual appearance is close as well, as depicted in Fig. 2. Likewise, the class-wise distribution of scribbles depicted in Fig. 4 shows no significant aberrations when comparing the two label sets. Consequently, the scribbles generated by our scribble algorithm mimic the human-annotated labels closely. The only significant difference lies in the average number of scribbles used to label each image as shown in Tab. 1. This behaviour is explained by the human scribbles partially drawing over the don't care areas of the dataset which is prohibited for the algorithm and for more complex objects, the automatically generated labels may be broken down into multiple scribbles while the human may draw a single more complex line.\\n\\nImportantly, as can be seen from Tab. 2 and as discussed in Sec. 5.2, the results obtained with ScribbleSup and s4Pascal are similar for various segmentation algorithms, further highlighting the similarity of our generated scribbles to human scribbles.\"}"}
{"id": "USUkwg5pW6", "page_num": 7, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table 2: Quantitative comparison of SOTA methods on s4-datasets\\n\\nAlongside the absolute performance expressed in mIoU, we also list the segmentation results with respect to the fully supervised model (Sup.). The methods are grouped by their respective encoder backbone. The * marks values taken from literature.\\n\\n| Dataset      | mIoU \u2191 | Sup. | EMA SASformer | Sup. | TEL AGMM | ScribbleSup |\\n|--------------|--------|------|---------------|------|----------|-------------|\\n| s4PASCAL     | 86.6   |\\n| s4Cityscapes | 83.8   | 67.7 |\\n| s4KITTI360   | 66.6   | 57.4 | 49.7 | 64.5 |\\n| s4ADE20K     | 51.1   | 37.7 |\\n\\nRel. Performance\\n\\n| Dataset      | Ours   | Sup.   | EMA SASformer | Sup. | TEL AGMM | ScribbleSup |\\n|--------------|--------|--------|---------------|------|----------|-------------|\\n| s4PASCAL     | 91.0%  | 91.2%  | 90.3%         | 87.2%|\\n| s4Cityscapes | 80.8%  | 78.5%  | 82.4%         | 72.2%|\\n| s4KITTI360   | 86.2%  | 74.6%  | 92.1%         | 83.1%|\\n| s4ADE20K     | 73.8%  | 80.4%  | 84.6%         | 69.3%|\\n\\nFurther Automatic Scribble Labeled Datasets\\n\\nThe lack of different scribble labeled datasets impedes thorough benchmarking of scribble-supervised methods under different domains. To alleviate this, we apply the scribble generation algorithm to a selection of popular segmentation datasets. Labeling these provides the foundation for benchmarking SOTA methods in the next step. We introduce s4Cityscapes which is a set of scribble labels for the Cityscapes dataset [9] that is known for the broad range of object scales and object sizes it requires the segmentation model to learn. Due to the high level of detail in the data, the scribble algorithm is parameterized such that also small objects are labeled. Furthermore, we provide s4KITTI360 which contains scribble labels for KITTI360 [22] which like Cityscapes is a self-driving domain dataset. In contrast to the latter, it contains a notably higher number of labeled images but a lower level of detail in its annotations. Like Pascal, those datasets only contain a small number of object classes. It is also important to assess how models can cope with fine-grained classes. Thus, we further provide scribble labels s4ADE20K for the ADE20K dataset [54], which consists of 150 classes.\\n\\nThe different properties of these datasets translate into different dataset statistics for the automated scribbles. While the number of scribbles per scene is similar for ADE20K and KITTI360, the share of labeled pixels is higher for ADE20K due to the lower image size as shown in Tab. 1. The dominance of furniture-related classes, doors, windows and other convex geometric objects further leads to s4ADE20K having scribbles with a relatively high distance to class boundaries. When looking at the two self-driving datasets, the higher level of detail and small objects in Cityscapes becomes apparent as the average number of scribbles per image is more than double that of KITTI360. The higher prevalence of slim objects such as poles and traffic-lights/signs moreover entails greater closeness to class boundaries. Further details on the class distribution are visualised in Fig. 5.\\n\\nThe datasets generated in this work are chosen to demonstrate the versatility and usefulness of the proposed scribble generator. The algorithm can be applied to all pre-existing datasets that contain dense segmentation maps, making it universally applicable. Further information on the algorithm runtime per dataset conversion is included in App. A.3.\\n\\n5 Experiments\\n\\nIn this section, we perform evaluations on the proposed datasets. The section begins with providing implementation details in Sec. 5.1, before presenting segmentation experiments in Sec. 5.2, a scribble length ablation in Sec. 5.3, and a discussion about limitations in Sec. 5.4.\"}"}
{"id": "USUkwg5pW6", "page_num": 8, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"5.1 Implementation Details\\n\\nWe evaluate the s4-scribble datasets using three current SOTA methods, namely Tree Energy Loss (TEL) [21], AGMM-SASS [45] and SASformer [31]. Both ScribbleSup and s4Pascal are trained according to the information provided by the authors and the published code. Hyperparameters for s4ADE20K and s4Cityscapes were also kept at the values described in TEL and AGMM-SASS. For training ADE20K and Cityscapes on SASformer, we used the same learning rates as in TEL. For KITTI360 we found the hyperparameters for Cityscapes to be permissive. All models were trained on four RTX 8000 GPUs. All models were trained in a single-stage process without postprocessing such as applying CRFs. More information is provided in App. A.5.\\n\\nAdditionally, we also train on a simple mean-teacher [51, 47, 35] setup with a Segformer-B4 [46] backbone to provide a naive WSSS baseline that does not make any specific prior assumptions like specialised losses, TEL, or architecture dependencies, SASformer. The training procedure was kept as published for SegFormer with additional augmentations for the student through CutOut [12] and AugMix [16]. The loss is composed of an equally weighted supervised loss from the scribbles and a KL-divergence loss informed by the teacher.\\n\\n5.2 Baseline Scribble Datasets\\n\\nAs revealed by Tab. 2, the majority of three of the four methods used for comparing the ScribbleSup and s4Pascal datasets leads to very similar segmentation results differing 0.5 % mIoU or less. While EMA, and SAS perform better on ScribbleSup, TEL performs better on s4Pascal. The only method where the two label sets lead to different results is AGMM-SASS which shows a decline of approx. 3 % when trained with s4Pascal showing that some SASS methods are more susceptible to changes in label distribution than others. In conclusion, these results validate our observation from Sec. 4 that our scribble generation algorithms produce labels that are almost equivalent to human-created scribble labels. For class-wise evaluation, refer to App. A.4. Comparing scribble-supervised with fully-supervised models, the two methods with a SegFormer-B4 backbone show about 92 % relative performance, while the methods with ResNet101/DeepLabv3+ architectures both reach about 90 % relative performance as listed in Tab. 2. There is no relevant performance difference on ScribbleSup between the different methods that share the same backbone architecture, giving further evidence that the current benchmark is saturated.\\n\\nThis insight is supported by the results obtained from experiments on the s4ADE20K, s4Cityscapes and s4KITTI360 datasets. The typical relative performance drops to approx. 80 % as shown in Tab. 2. The more challenging datasets also lead to reduced mIoU values in absolute terms which is perceivable.\"}"}
{"id": "USUkwg5pW6", "page_num": 9, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Figure 7: Effect of scribble length on prediction performance \u2013 The different methods exhibit varying robustness with respect to changes in the scribble length, evaluated here for the s4ADE20K dataset. The TEL method is less strongly affected than the naive EMA-model, while the effects on SASformer are the most severe. This highlights the importance of scribble length ablations for comprehensive method benchmarking.\\n\\n5.3 Scribble Length Ablations\\nShrinking the initial scribbles to different proportions leads to varying deterioration of prediction results depending on the applied methods. Fig. 7 illustrates that TEL is the most robust towards reductions in scribble length dropping by less than 2% mIoU as the scribble length is reduced to a tenth of the original size. More sensitive is SASformer with a decline of about 7% mIoU. While not being the best-performing SOTA method for full scribble lengths and small reductions, TEL leads to better results for stronger degradations. The naive mean teacher shows similar behaviour to SASformer though less pronounced. These results illustrate the importance of scribble length ablations when benchmarking methods to aid in obtaining a more thorough understanding of how the developed methods react to label variations.\\n\\n5.4 Limitations\\nThe proposed automatic scribble generation algorithm requires a dataset with existing semantic segmentation ground truth. As the purpose of this paper is a more broad evaluation of scribble-supervised methods on common segmentation scenarios, feasible basis datasets are available for many domains. However, for new or custom use cases, this assumption might not hold and manual scribble annotations can be necessary.\\n\\n6 Conclusion\\nWe presented new scribble annotations for four popular semantic segmentation datasets and a generally applicable method to generate those. Our work has shown that using more complex datasets reveals a widening gap between full supervision and scribble SOTA methods, compared to previous datasets. Furthermore, we demonstrated that different methods cope differently well with challenges such as shorter scribbles. Therefore, we suggest expanding the evaluation procedures for scribble-supervised segmentation to multiple datasets and also providing scribble-length ablations to show the robustness of the methods. We hope that our s4-datasets will drive a robust benchmarking of future scribble-supervised methods to close the gap to densely-supervised segmentation training. In particular, we see a strong potential in adapting vision foundation models with scribbles to custom applications.\"}"}
{"id": "USUkwg5pW6", "page_num": 10, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"[1] Amy Bearman, Olga Russakovsky, Vittorio Ferrari, and Li Fei-Fei. What's the point: Semantic segmentation with point supervision. In European conference on computer vision, pages 549\u2013565. Springer, 2016.\\n\\n[2] Holger Caesar, Varun Bankiti, Alex H Lang, Sourabh Vora, Venice Erin Liong, Qiang Xu, Anush Krishnan, Yu Pan, Giancarlo Baldan, and Oscar Beijbom. nuscenes: A multimodal dataset for autonomous driving. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 11621\u201311631, 2020.\\n\\n[3] Fabio Cermelli, Dario Fontanel, Antonio Tavera, Marco Ciccone, and Barbara Caputo. Incremental learning in semantic segmentation from image labels. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 4371\u20134381, 2022.\\n\\n[4] Feng Chen, Mario Valerio Giuffrida, and Sotirios A Tsaftaris. Adapting vision foundation models for plant phenotyping. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 604\u2013613, 2023.\\n\\n[5] Liang-Chieh Chen, Yukun Zhu, George Papandreou, Florian Schroff, and Hartwig Adam. Encoder-decoder with atrous separable convolution for semantic image segmentation. In Proceedings of the European conference on computer vision (ECCV), pages 801\u2013818, 2018.\\n\\n[6] Zhe Chen, Yuchen Duan, Wenhai Wang, Junjun He, Tong Lu, Jifeng Dai, and Yu Qiao. Vision transformer adapter for dense predictions. In International Conference on Learning Representations, 2023.\\n\\n[7] Bowen Cheng, Ishan Misra, Alexander G Schwing, Alexander Kirillov, and Rohit Girdhar. Masked-attention mask transformer for universal image segmentation. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 1290\u20131299, 2022.\\n\\n[8] Bowen Cheng, Alex Schwing, and Alexander Kirillov. Per-pixel classification is not all you need for semantic segmentation. Advances in neural information processing systems, 34:17864\u201317875, 2021.\\n\\n[9] Marius Cordts, Mohamed Omran, Sebastian Ramos, Timo Rehfeld, Markus Enzweiler, Rodrigo Benenson, Uwe Franke, Stefan Roth, and Bernt Schiele. The cityscapes dataset for semantic urban scene understanding. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 3213\u20133223, 2016. Dataset URL: https://www.cityscapes-dataset.com/, Dataset License: https://www.cityscapes-dataset.com/license/.\\n\\n[10] Anurag Das, Yongqin Xian, Dengxin Dai, and Bernt Schiele. Weakly-supervised domain adaptive semantic segmentation with prototypical contrastive learning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 15434\u201315443, 2023.\\n\\n[11] Anurag Das, Yongqin Xian, Yang He, Zeynep Akata, and Bernt Schiele. Urban scene semantic segmentation with low-cost coarse annotation. In Proceedings of the IEEE/CVF winter conference on applications of computer vision, pages 5978\u20135987, 2023.\\n\\n[12] Terrance DeVries and Graham W Taylor. Improved regularization of convolutional neural networks with cutout. arXiv preprint arXiv:1708.04552, 2017.\\n\\n[13] Hannah Dr\u00f6ge and Michael Moeller. Learning or modelling? an analysis of single image segmentation based on scribble information. In IEEE International Conference on Image Processing (ICIP), pages 2274\u20132278, 2021.\\n\\n[14] Mark Everingham, Luc Van Gool, Christopher KI Williams, John Winn, and Andrew Zisserman. The pascal visual object classes (voc) challenge. International journal of computer vision, 88:303\u2013338, 2010. Dataset URL: http://host.robots.ox.ac.uk/pascal/VOC/, Dataset License: http://www.flickr.com/terms.gne?legacy=1.\\n\\n[15] Bharath Hariharan, Pablo Arbel\u00e1ez, Lubomir Bourdev, Subhransu Maji, and Jitendra Malik. Semantic contours from inverse detectors. In International conference on computer vision, pages 991\u2013998, 2011.\"}"}
{"id": "USUkwg5pW6", "page_num": 11, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"[10] Dan Hendrycks*, Norman Mu*, Ekin Dogus Cubuk, Barret Zoph, Justin Gilmer, and Balaji Lakshminarayanan. Augmix: A simple method to improve robustness and uncertainty under data shift. In International Conference on Learning Representations, 2020.\\n\\n[11] Jitesh Jain, Jiachen Li, Mang Tik Chiu, Ali Hassani, Nikita Orlov, and Humphrey Shi. One-former: One transformer to rule universal image segmentation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 2989\u20132998, 2023.\\n\\n[12] Anna Khoreva, Rodrigo Benenson, Jan Hosang, Matthias Hein, and Bernt Schiele. Simple does it: Weakly supervised instance and semantic segmentation. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 876\u2013885, 2017.\\n\\n[13] Alexander Kirillov, Eric Mintun, Nikhila Ravi, Hanzi Mao, Chloe Rolland, Laura Gustafson, Tete Xiao, Spencer Whitehead, Alexander C Berg, Wan-Yen Lo, et al. Segment anything. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 4015\u20134026, 2023.\\n\\n[14] John Lafferty, Andrew McCallum, Fernando Pereira, et al. Conditional random fields: Probabilistic models for segmenting and labeling sequence data. In International Conference on Machine Learning, 2001.\\n\\n[15] Zhiyuan Liang, Tiancai Wang, Xiangyu Zhang, Jian Sun, and Jianbing Shen. Tree energy loss: Towards sparsely annotated semantic segmentation. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 16907\u201316916, 2022.\\n\\n[16] Yiyi Liao, Jun Xie, and Andreas Geiger. Kitti-360: A novel dataset and benchmarks for urban scene understanding in 2d and 3d. IEEE Transactions on Pattern Analysis and Machine Intelligence, 45(3):3292\u20133310, 2022. Dataset URL: https://www.cvlibs.net/datasets/kitti-360/, Dataset License: https://creativecommons.org/licenses/by-nc-sa/3.0/.\\n\\n[17] Di Lin, Jifeng Dai, Jiaya Jia, Kaiming He, and Jian Sun. Scribblesup: Scribble-supervised convolutional networks for semantic segmentation. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 3159\u20133167, 2016. Dataset URL: https://jifengdai.org/downloads/scribble_sup/, Dataset License: http://www.flickr.com/terms.gne?legacy=1.\\n\\n[18] Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll\u00e1r, and C Lawrence Zitnick. Microsoft coco: Common objects in context. In European Conference on Computer Vision, pages 740\u2013755, 2014. Dataset URL: https://cocodataset.org/, Dataset License: https://cocodataset.org/#termsofuse.\\n\\n[19] Ze Liu, Yutong Lin, Yue Cao, Han Hu, Yixuan Wei, Zheng Zhang, Stephen Lin, and Baining Guo. Swin transformer: Hierarchical vision transformer using shifted windows. In Proceedings of the IEEE/CVF international conference on computer vision, pages 10012\u201310022, 2021.\\n\\n[20] Youngmin Oh, Beomjun Kim, and Bumsub Ham. Background-aware pooling and noise-aware loss for weakly-supervised semantic segmentation. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 6913\u20136922, 2021.\\n\\n[21] Maxime Oquab, Timoth\u00e9e Darcet, Th\u00e9o Moutakanni, Huy V . V o, Marc Szafraniec, Vasil Khalidov, Pierre Fernandez, Daniel HAZIZA, Francisco Massa, Alaaeldin El-Nouby, Mido Assran, Nicolas Ballas, Wojciech Galuba, Russell Howes, Po-Yao Huang, Shang-Wen Li, Ishan Misra, Michael Rabbat, Vasu Sharma, Gabriel Synnaeve, Hu Xu, Herve Jegou, Julien Mairal, Patrick Labatut, Armand Joulin, and Piotr Bojanowski. DINOv2: Learning robust visual features without supervision. Transactions on Machine Learning Research, 2024.\\n\\n[22] Zhiyi Pan, Peng Jiang, Yunhai Wang, Changhe Tu, and Anthony G Cohn. Scribble-supervised semantic segmentation by uncertainty reduction on neural representation and self-supervision on neural eigenspace. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 7416\u20137425, 2021.\"}"}
{"id": "USUkwg5pW6", "page_num": 12, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Lixiang Ru, Yibing Zhan, Baosheng Yu, and Bo Du. Learning affinity from attention: End-to-end weakly-supervised semantic segmentation with transformers. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 16846\u201316855, 2022.\\n\\nChristos Sakaridis, Dengxin Dai, and Luc Van Gool. ACDC: The adverse conditions dataset with correspondences for semantic driving scene understanding. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 10765\u201310775, 2021. Dataset URL: https://acdc.vision.ee.ethz.ch/, Dataset License: https://acdc.vision.ee.ethz.ch/license.\\n\\nHui Su, Yue Ye, Wei Hua, Lechao Cheng, and Mingli Song. Sasformer: Transformers for sparsely annotated semantic segmentation. In IEEE International Conference on Multimedia and Expo (ICME), pages 390\u2013395, 2023.\\n\\nPei Sun, Henrik Kretzschmar, Xerxes Dotiwalla, Aurelien Chouard, Vijaysai Patnaik, Paul Tsui, James Guo, Yin Zhou, Yuning Chai, Benjamin Caine, et al. Scalability in perception for autonomous driving: Waymo open dataset. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 2446\u20132454, 2020.\\n\\nMeng Tang, Abdelaziz Djelouah, Federico Perazzi, Yuri Boykov, and Christopher Schroers. Normalized cut loss for weakly-supervised cnn segmentation. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 1818\u20131827, 2018.\\n\\nMeng Tang, Federico Perazzi, Abdelaziz Djelouah, Ismail Ben Ayed, Christopher Schroers, and Yuri Boykov. On regularized losses for weakly-supervised cnn segmentation. In Proceedings of the European conference on computer vision (ECCV), pages 507\u2013522, 2018.\\n\\nAntti Tarvainen and Harri Valpola. Mean teachers are better role models: Weight-averaged consistency targets improve semi-supervised deep learning results. In Advances in neural information processing systems, 2017.\\n\\nOzan Unal, Dengxin Dai, and Luc Van Gool. Scribble-supervised lidar semantic segmentation. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 2697\u20132707, 2022.\\n\\nGabriele Valvano, Andrea Leo, and Sotirios A Tsaftaris. Learning to segment from scribbles using multi-scale adversarial attention gates. IEEE Transactions on Medical Imaging, 40(8):1990\u20132001, 2021.\\n\\nGabriele Valvano, Andrea Leo, and Sotirios A Tsaftaris. Self-supervised multi-scale consistency for weakly supervised segmentation learning. In MICCAI Workshop on Domain Adaptation and Representation Transfer, pages 14\u201324, 2021.\\n\\nPaul Vernaza and Manmohan Chandraker. Learning random-walk label propagation for weakly-supervised semantic segmentation. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 7158\u20137166, 2017.\\n\\nBin Wang, Guojun Qi, Sheng Tang, Tianzhu Zhang, Yunchao Wei, Linghui Li, and Yongdong Zhang. Boundary perception guidance: a scribble-supervised semantic segmentation approach. In Proceedings of the International Joint Conference on Artificial Intelligence, pages 3663\u20133669, 2019.\\n\\nBin Wang, Yu Qiao, Dahua Lin, Stephen DH Yang, and Weijia Li. Cycle-consistent learning for weakly supervised semantic segmentation. In Proceedings of the International Workshop on Human-Centric Multimedia Analysis, pages 7\u201313, 2022.\\n\\nChengliang Wang, Xinrun Chen, Haojian Ning, and Shiying Li. Sam-octa: A fine-tuning strategy for applying foundation model octa image segmentation tasks. In IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 1771\u20131775, 2024.\\n\\nYude Wang, Jie Zhang, Meina Kan, Shiguang Shan, and Xilin Chen. Self-supervised equivariant attention mechanism for weakly supervised semantic segmentation. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 12275\u201312284, 2020.\"}"}
{"id": "USUkwg5pW6", "page_num": 13, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Yao Wei and Shunping Ji. Scribble-based weakly supervised deep learning for road surface extraction from remote sensing images. IEEE Transactions on Geoscience and Remote Sensing, 60, 2021.\\n\\nLinshan Wu, Zhun Zhong, Leyuan Fang, Xingxin He, Qiang Liu, Jiayi Ma, and Hao Chen. Sparsely annotated semantic segmentation with adaptive gaussian mixtures. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 15454\u201315464, 2023.\\n\\nEnze Xie, Wenhai Wang, Zhiding Yu, Anima Anandkumar, Jose M Alvarez, and Ping Luo. Segformer: Simple and efficient design for semantic segmentation with transformers. In Advances in neural information processing systems, pages 12077\u201312090, 2021.\\n\\nQizhe Xie, Minh-Thang Luong, Eduard Hovy, and Quoc V. Le. Self-training with noisy student improves ImageNet classification. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 10684\u201310695, 2020.\\n\\nWeiyi Xie, Nathalie Willems, Shubham Patil, Yang Li, and Mayank Kumar. Sam fewshot finetuning for anatomical segmentation in medical images. In Proceedings of the IEEE/CVF Winter Conference on Applications of Computer Vision, pages 3253\u20133261, 2024.\\n\\nLian Xu, Wanli Ouyang, Mohammed Bennamoun, Farid Boussaid, Ferdous Sohel, and Dan Xu. Leveraging auxiliary tasks with affinity learning for weakly supervised semantic segmentation. In Proceedings of the IEEE/CVF international conference on computer vision, pages 6984\u20136993, 2021.\\n\\nBingfeng Zhang, Jimin Xiao, Jianbo Jiao, Yunchao Wei, and Yao Zhao. Affinity attention graph neural network for weakly supervised semantic segmentation. IEEE Transactions on Pattern Analysis and Machine Intelligence, 44(11):8082\u20138096, 2021.\\n\\nDingwen Zhang, Hao Li, Wenyuan Zeng, Chaowei Fang, Lechao Cheng, Ming-Ming Cheng, and Junwei Han. Weakly supervised semantic segmentation via alternate self-dual teaching. IEEE Transactions on Image Processing, 2023.\\n\\nJing Zhang, Xin Yu, Aixuan Li, Peipei Song, Bowen Liu, and Yuchao Dai. Weakly-supervised salient object detection via scribble annotations. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 12546\u201312555, 2020.\\n\\nTongjie Zhang and Ching Y. Suen. A fast parallel algorithm for thinning digital patterns. Communications of the ACM, 27(3):236\u2013239, 1984.\\n\\nBolei Zhou, Hang Zhao, Xavier Puig, Sanja Fidler, Adela Barriuso, and Antonio Torralba. Scene parsing through ade20k dataset. In Proceedings of the IEEE conference on computer vision and pattern recognition, pages 633\u2013641, 2017. Dataset URL: https://groups.csail.mit.edu/vision/datasets/ADE20K/, Dataset License: https://groups.csail.mit.edu/vision/datasets/ADE20K/terms/.\"}"}
{"id": "USUkwg5pW6", "page_num": 14, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"A Supplementary Material\\n\\nA.1 Color Legends\\n\\nThis section provides the color legends for the segmentation maps and ground-truth images that are displayed in Fig. 6 of the main paper. Colormaps are provided for (s4)ADE20K, (s4)Cityscapes and (s4)KITTI360. As only two classes, background and areoplane, are present in the (as)PascalVOC example, no additional color legend is provided for this dataset.\\n\\nFigure 8: Color legend for (s4)Cityscapes and (s4)KITTI360 \u2013 The driving datasets are colored according to the same color-scheme in this paper to aid comprehension. Note that some classes of Cityscapes do not exist in KITTI360. Also not all classes may be present in the images shown in Fig. 6.\\n\\nFigure 9: Color legend for (s4)ADE20K \u2013 Only the classes that are actually present in the segmentation map and ground-truth displayed in Fig. 6 are shown here. Since ADE20K contains 150 classes, providing a full color legend would not be expedient.\\n\\nA.2 Parameterization of the Scribble Generation Algorithm\\n\\nThe parameters for the scribble generation algorithm were adjusted according to the resolution and image scales of the respective datasets. For instance, the higher resolution of Cityscapes requires different settings for the $\\\\epsilon$-variables of the algorithm. The exact values are listed in Tab. 3 respectively Tab. 4. The scribble generation code can be found under https://github.com/wbkit/Scribbles4All.\\n\\nTable 3: Scribble Generation Parameters for s4Pascal & s4KITTI360 \u2013 The parameters are explained in Sec. 3.2. Min. blob size refers to the minimum size of a dense label instance to be assigned a corresponding scribble. area refers to the area of the label instance occupied in pixels from which the scribble is created.\\n\\n| Parameter          | s4Pascal | s4KITTI360 |\\n|--------------------|----------|------------|\\n| $\\\\epsilon_1$      | $(x)$    | $(x)$      |\\n| $\\\\epsilon_2$      | $(x)$    | $(x)$      |\\n| $\\\\sigma_{\\\\text{com}}$ | $(x)$    | $(x)$      |\\n| $\\\\sigma_{\\\\text{area}}$ | $(x)$    | $(x)$      |\\n| $N_{\\\\text{min}}$  | 80 px    | 200 px     |\\n| $Q_{\\\\text{line thickness}}$ | 3        | 3          |\"}"}
{"id": "USUkwg5pW6", "page_num": 15, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table 4: Scribble Generation Parameters for s4Cityscapes & s4ADE20K\\n\u2013 The parameters are explained in Sec. 3.2. Min. blob size refers to the minimum size of a dense label instance to be assigned a corresponding scribble.\\n\\n| Parameter          | s4Cityscapes | s4ADE20K |\\n|--------------------|--------------|----------|\\n| $\\\\epsilon_1$ $(x)$ | 5            | 0.007    |\\n| $\\\\epsilon_2$      | 2            | 0.003    |\\n| $\\\\sigma_{com area}$ | $20^{px}$  | $20^{px}$ |\\n| $\\\\sigma_{area}$    | $20^{px}$   | $10^{px}$ |\\n| $N_{10}$           | 25           | 25       |\\n| $Q_{25}$           | 25           | 25       |\\n| Min. blob size     | 400 px       | 80 px    |\\n| Line thickness     | 5            | 3        |\\n\\nA.3 Runtime of the Scribble Generation Algorithm\\n\\nIn the following, we list the processing speed of the proposed scribble generation algorithm. The algorithm's image throughput is dependent on the complexity of the processed datasets and the chosen parameters. For the four datasets presented in our work, the processing speed is listed in Tab. 5. Evaluations were performed on a workstation with an Intel Xeon Gold 6144 processor (8 cores w. hyperthreading). The algorithm is parallelizable and performance scales linearly per core. On a single workstation, the conversion of Pascal and Cityscapes is taking less than an hour while the bigger datasets are in the range of a couple of hours. In practice, the algorithm's runtime is secondary as a dataset only needs to be converted once.\\n\\nTable 5: Processing speed for the presented datasets\\n\u2013 Average processing speed to process the listed datasets with the scribble generation algorithm to create the s4-Version of those datasets.\\n\\n| Dataset     | Processing Speed |\\n|-------------|------------------|\\n| PascalVOC   | 12.97 img/s      |\\n| ADE20K      | 7.43 img/s       |\\n| KITTI360    | 4.53 img/s       |\\n| Cityscapes  | 1.23 img/s       |\\n\\nA.4 Further Dataset Information\\n\\nThis section provides class-wise dataset statistics for the ScribbleSup and s4Pascal datasets for further statistical comparison as listed in Tab. 6. Furthermore, the class-wise label distributions of the s4KITTI360 and s4Cityscapes datasets as visualised in Fig. 4 and Fig. 5 are listed in Tab. 7 respectively Tab. 8.\"}"}
{"id": "USUkwg5pW6", "page_num": 16, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":true,\"is_diagram\":false,\"natural_text\":\"### Table 6: Class-wise dataset statistics of s4Pascal and ScribbleSup\\n\\n| Class       | Share labelled px. | 10 px boundary |\\n|-------------|--------------------|----------------|\\n| aeroplane   | 2.3 %              | 11.3 %         |\\n| bicycle     | 2.1 %              | 9.2 %          |\\n| bird        | 3.7 %              | 18.0 %         |\\n| boat        | 3.6 %              | 22.4 %         |\\n| bottle      | 3.5 %              | 18.3 %         |\\n| bus         | 3.4 %              | 22.4 %         |\\n| car         | 2.2 %              | 6.8 %          |\\n| cat         | 2.6 %              | 12.5 %         |\\n| chair       | 3.5 %              | 4.5 %          |\\n| cow         | 2.1 %              | 4.5 %          |\\n| diningtable | 4.2 %              | 28.0 %         |\\n| dog         | 2.9 %              | 16.8 %         |\\n| horse       | 2.7 %              | 15.8 %         |\\n| motorbike   | 2.3 %              | 7.6 %          |\\n| person      | 3.2 %              | 17.8 %         |\\n| pottedplant | 2.5 %              | 13.6 %         |\\n| sheep       | 3.0 %              | 16.1 %         |\\n| sofa        | 2.7 %              | 17.9 %         |\\n| train       | 2.3 %              | 10.9 %         |\\n| tvmonitor   | 2.5 %              | 7.3 %          |\\n| background  |                   | 10.8 %         |\\n\\n### Table 7: Class-wise dataset statistics of s4KITTI360\\n\\n| Class       | Share of Dense | 10px distance |\\n|-------------|----------------|---------------|\\n| road        | 3.1 %          | 13.81 %       |\\n| sidewalk    | 2.8 %          | 1.53 %        |\\n| building    | 5.7 %          | 15.00 %       |\\n| wall        | 2.5 %          | 10.43 %       |\\n| fence       | 4.3 %          | 9.15 %        |\\n| pole        | 3.9 %          | 10.70 %       |\\n| traffic-light| 8.6 %          | 49.96 %       |\\n| traffic-sign| 8.5 %          | 18.60 %       |\\n| vegetation  | 7.3 %          | 33.74 %       |\\n| terrain     | 2.1 %          | 8.55 %        |\\n| person      | 4.9 %          | 14.92 %       |\\n| car         | 6.5 %          | 6.67 %        |\\n| truck       | 3.3 %          | 25.83 %       |\\n| motorcycle  | 2.1 %          | 9.49 %        |\\n| bicycle     | 4.8 %          | 11.10 %       |\\n| sky         | 7.8 %          | 2.39 %        |\\n\\n### Table 8: Class-wise dataset statistics of s4Cityscapes\\n\\n| Class       | Share of Dense | 10px distance |\\n|-------------|----------------|---------------|\\n| road        | 2.26 %         | 13.81 %       |\\n| sidewalk    | 1.50 %         | 1.53 %        |\\n| building    | 5.47 %         | 15.00 %       |\\n| wall        | 3.30 %         | 10.43 %       |\\n| fence       | 3.11 %         | 9.15 %        |\\n| pole        | 4.02 %         | 10.70 %       |\\n| traffic-light| 10.81 %        | 49.96 %       |\\n| traffic-sign| 4.42 %         | 18.60 %       |\\n| vegetation  | 9.93 %         | 33.74 %       |\\n| terrain     | 3.47 %         | 8.55 %        |\\n| sky         | 4.76 %         | 14.92 %       |\\n| person      | 6.12 %         | 6.67 %        |\\n| rider       | 8.0 %          | 25.83 %       |\\n| car         | 3.0 %          | 9.49 %        |\\n| truck       | 5.23 %         | 11.10 %       |\\n| bus         | 1.01 %         | 2.39 %        |\\n| train       | 0.71 %         | 1.61 %        |\\n| motorcycle  | 1.59 %         | 0.89 %        |\\n| bicycle     | 5.10 %         | 4.15 %        |\\n| sky         |                   | 15.55 %       |\"}"}
{"id": "USUkwg5pW6", "page_num": 17, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Table 9: Hyperparameters used for Benchmarking\\n\\n- The hyperparameters for Pascal were kept as documented by the authors of the reference methods and are therefore not listed below. The optimiser for all methods except the EMA was SGD with momentum. The former was trained with AdamW.\\n\\n| Dataset       | Method | lr    | BS | train_crop | inference |\\n|---------------|--------|-------|----|------------|-----------|\\n| s4KITTI360    | EMA    | 6e-5  | 8  | (376,512)  | SW        |\\n|               | SASformer | 1e-4  | 8  | (512,512)  | SW        |\\n|               | TEL    | 0.005 | 8  | (376,512)  | SW        |\\n|               | AGMM-SASS | 0.003 | 8  | (512,512)  | FI        |\\n| s4Cityscapes  | EMA    | 4e-5  | 2  | (512,1024) | SW        |\\n|               | SASformer | 0.001 | 4  | (512,512)  | SW        |\\n|               | TEL    | 0.006 | 4  | (512,1024) | SW        |\\n|               | AGMM-SASS | 0.002 | 4  | (721,721)  | FI        |\\n| s4ADE20K      | EMA    | 6e-5  | 8  | (512,512)  | FI        |\\n|               | SASformer | 5e-4  | 8  | (512,512)  | FI        |\\n|               | TEL    | 0.001 | 8  | (512,512)  | FI        |\\n|               | AGMM-SASS | 0.001 | 8  | (512,512)  | FI        |\\n\\nA.5 Further Benchmarking Information\\n\\nThis section documents the hyperparameters used to train the models using the codebases provided by the authors of the reference methods [21, 45, 31]. The main parameters are already provided in Sec. 5.1. This section provides a detailed listing. Further details are to be found in Tab. 9.\\n\\nA.6 Further Evaluation of EMA method on s4Pascal and ScribbleSup\\n\\nAdditionally, the training of the EMA methods allows for insights into the training process for s4Pascal. As illustrated in Fig. 10, the model's teacher maintains a relative constant certainty with respect to object classes and iteratively refines its prediction certainty on the background class. As the background is present in each image, the model can learn to identify this class and since most Pascal images are one object and the background therefore refines the overall segmentation map. Hence, we conclude that the overall setup of this dataset does not facilitate learning to apprehend inter-object class boundaries as necessary for more complex scenes but rather focuses on the background class. This observation is not exhaustive but provides a possible explanation for the reduced performance gap of scribble-supervised segmentation methods on ScribbleSup and s4Pascal.\\n\\nFigure 10: EMA boundary learning\\n\\n- The EMA for s4Pascal mainly refines its class boundaries by becoming more confident on the background class. Solid colors are areas where the model is more than 99% certain. Light areas cover the actual prediction where certainty is below that threshold.\"}"}
{"id": "USUkwg5pW6", "page_num": 18, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"B Dataset Datasheet\\n\\nB.1 Motivation\\n\\n\u2022 For what purpose was the dataset created? Was there a specific task in mind? Was there a specific gap that needed to be filled? Please provide a description.\\n\\nThe datasets were created to provide datasets beyond ScribbleSup for the task of scribble-supervised semantic segmentation which is a weakly-supervised segmentation task. It aims to provide more diverse and challenging datasets to researchers in this field adding s4KITTI360 and s4Cityscapes for segmentation in the autonomous driving domain, as ADE20K for many-class segmentation and s4Pascal as another scribble set for PascalVOC to verify and validate our scribble generation algorithm. The datasets facilitate future research into scribble-supervised methods.\\n\\n\u2022 Who created the dataset (e.g., which team, research group) and on behalf of which entity (e.g., company, institution, organization)?\\n\\nThe datasets were created by Wolfgang Boettcher as part of his Master's thesis at ETH Zurich, Switzerland and his PhD research for the Max-Plack Institute for Informatics, Germany.\\n\\n\u2022 Who funded the creation of the dataset? If there is an associated grant, please provide the name of the grantor and the grant name and number.\\n\\nN/A\\n\\n\u2022 Any other comments?\\n\\nNone.\\n\\nB.2 Composition\\n\\n\u2022 What do the instances that comprise the dataset represent (e.g., documents, photos, people, countries)? Are there multiple types of instances (e.g., movies, users, and ratings; people and interactions between them; nodes and edges)? Please provide a description.\\n\\nThe datasets created contain class-wise semantic labels for the aforementioned segmentation datasets. The labels are available as semantic images and coordinate sequences. For the instances covered by the datasets our labels are designed for, refer to the respective documentation of the base datasets.\\n\\n\u2022 How many instances are there in total (of each type, if appropriate)?\\n\\nThe only instances provided are the scribble labels. The statistics of those are documented in the main paper and the first part of the supplementary material.\\n\\n\u2022 Does the dataset contain all possible instances or is it a sample (not necessarily random) of instances from a larger set? If the dataset is a sample, then what is the larger set? Is the sample representative of the larger set (e.g., geographic coverage)? If so, please describe how this representativeness was validated/verified. If it is not representative of the larger set, please describe why not (e.g., to cover a more diverse range of instances, because instances were withheld or unavailable).\\n\\nThe instance coverage is defined by the underlying base datasets. For more details, refer to the respective documentation of the base datasets.\\n\\n\u2022 What data does each instance consist of? \u201cRaw\u201d data (e.g., unprocessed text or images) or features? In either case, please provide a description.\\n\\nThe datasets provided by us exclusively contain labels as semantic images and coordinate sets. For more details, refer to the respective documentation of the base datasets.\\n\\n\u2022 Is there a label or target associated with each instance? If so, please provide a description.\\n\\nAll instances labelled in the underlying base datasets are also labelled in the datasets we created as we derive the scribble labels from the full semantic labels of the base dataset.\\n\\n\u2022 Is any information missing from individual instances? If so, please provide a description, explaining why this information is missing (e.g., because it was unavailable). This does not include intentionally removed information but might include, e.g., redacted text.\\n\\nThe datasets provided by us only contain the labels. For more details, refer to the respective documentation of the base dataset.\"}"}
{"id": "USUkwg5pW6", "page_num": 19, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Are relationships between individual instances made explicit (e.g., users\u2019 movie ratings, social network links)? If so, please describe how these relationships are made explicit.\\n\\nThe datasets provided by us only contain the labels. For more details, refer to the respective documentation of the base datasets.\\n\\nAre there recommended data splits (e.g., training, development/validation, testing)? If so, please provide a description of these splits, explaining the rationale behind them.\\n\\nWe strongly recommend using the same data splits as the base datasets we created the scribble datasets for. For more details, refer to the respective documentation of the base datasets.\\n\\nAre there any errors, sources of noise, or redundancies in the dataset? If so, please provide a description.\\n\\nThe scribble labels are created from the semantic masks of the base datasets. Therefore, noise or labelling errors of the datasets may have propagated to our scribble labels. Since most label noise occurs at class edges and our scribble generation algorithm erodes the edges before creating scribbles, it stands to assume that the label noise in our datasets is smaller or equal to the base dataset. We have sanity checked the created scribble labels such that we can conclude that our algorithm does not introduce additional labelling errors and is consistent with the original semantic labels.\\n\\nIs the dataset self-contained, or does it link to or otherwise rely on external resources (e.g., websites, tweets, other datasets)? If it links to or relies on external resources, a) are there guarantees that they will exist, and remain constant, over time; b) are there official archival versions of the complete dataset (i.e., including the external resources as they existed at the time the dataset was created); c) are there any restrictions (e.g., licenses, fees) associated with any of the external resources that might apply to a dataset consumer? Please provide descriptions of all external resources and any restrictions associated with them, as well as links or other access points, as appropriate.\\n\\nThe datasets we provide only contain the scribble-labels for already existing segmentation datasets. Therefore, the dataset is not self-contained and relies on external sources for the input data and fully annotated validation/test data. The external datasets our scribble datasets rely on are all popular and established datasets in the semantic segmentation community that have been actively maintained in the past (Cityscapes, KITTI360, ADE20K). Therefore, the persistence of these datasets is safe to assume although there are no formal guarantees. Due to the varying licenses associated with the different base datasets, we do not provide a \u201ccomplete\u201d dataset with our labels and the external content. Users will have to download the base dataset first and then integrate the scribble datasets into the respective dataset structures. Documentation on how to do this will be provided on the project GitHub page. All external base datasets are subject to the respective license they have been published under. Users will have to check their eligibility with respect to the base datasets on their own and adhere to their terms. The links to the license terms of the four base datasets are listed below. ADE20K was published under the CC-BSD3 license. KITTI360 was published under CC BY-NC-SA 3.0. Cityscapes was published under a proprietary license which limits use to academia and requires citation of the Cityscapes paper. Therefore, we recommend checking that license manually if in doubt.\\n\\nDoes the dataset contain data that might be considered confidential (e.g., data that is protected by legal privilege or by doctor-patient confidentiality, data that includes the content of individuals\u2019 non-public communications)? If so, please provide a description.\\n\\nThe scribble labels provided by us contain none of the aforementioned types of restricted data.\\n\\nDoes the dataset contain data that, if viewed directly, might be offensive, insulting, threatening, or might otherwise cause anxiety? If so, please describe why. The scribble labels provided by us contain no offensive, insulting, threatening content or data that could cause anxiety.\"}"}
{"id": "USUkwg5pW6", "page_num": 20, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"B.3 Collection Process\\n\\n\u2022 How was the data associated with each instance acquired? Was the data directly observable (e.g., raw text, movie ratings), reported by subjects (e.g., survey responses), or indirectly inferred/derived from other data (e.g., part-of-speech tags, model-based guesses for age or language)? If the data was reported by subjects or indirectly inferred/derived from other data, was the data validated/verified? If so, please describe how.\\n\\nThe datasets provided by us only contain the labels, which are created using the procedure described in the paper. For more details on the input data, refer to the respective documentation of the base datasets.\\n\\n\u2022 What mechanisms or procedures were used to collect the data (e.g., hardware apparatus or sensors, manual human curation, software programs, software APIs)? How were these mechanisms or procedures validated?\\n\\nThe scribble labels in our datasets were created from the dense segmentation labels of the underlying base datasets by the algorithm presented in the main paper. The main paper also thoroughly validates this generation algorithm by the statistical and functional properties of the created datasets.\\n\\n\u2022 If the dataset is a sample from a larger set, what was the sampling strategy (e.g., deterministic, probabilistic with specific sampling probabilities)?\\n\\nOur dataset contains scribble labels for the entirety of the labelled set of the underlying base datasets.\\n\\n\u2022 Who was involved in the data collection process (e.g., students, crowdworkers, contractors) and how were they compensated (e.g., how much were crowdworkers paid)?\\n\\nThe datasets were created by the main author himself as part of his master's thesis and regular PhD work in accordance with the compensation standards of ETH Zurich respectively Max-Planck Institute for Informatics.\\n\\n\u2022 Over what timeframe was the data collected? Does this timeframe match the creation timeframe of the data associated with the instances (e.g., recent crawl of old news articles)? If not, please describe the timeframe in which the data associated with the instances was created.\\n\\nThe datasets provided by us only contain the labels. For more details on the timeframe of input data capture, refer to the respective documentation of the base datasets.\\n\\n\u2022 Were any ethical review processes conducted (e.g., by an institutional review board)? If so, please provide a description of these review processes, including the outcomes, as well as a link or other access point to any supporting documentation.\\n\\nOur research was not subjected to an ethical review process due to the nature of our work and the respective guidelines at ETH Zurich and MPI for Informatics.\\n\\nB.4 Preprocessing/cleaning/labeling\\n\\n\u2022 Was any preprocessing/cleaning/labeling of the data done (e.g., discretization or bucketing, tokenization, part-of-speech tagging, SIFT feature extraction, removal of instances, processing of missing values)? If so, please provide a description. If not, you may skip the remaining questions in this section.\\n\\nThe datasets provided by us only contain the labels. For more details on the processing of input data capture, refer to the respective documentation of the base datasets.\\n\\n\u2022 Was the \u201craw\u201d data saved in addition to the preprocessed/cleaned/labeled data (e.g., to support unanticipated future uses)? If so, please provide a link or other access point to the \u201craw\u201d data.\\n\\nN/A\\n\\n\u2022 Is the software that was used to preprocess/clean/label the data available? If so, please provide a link or other access point.\\n\\nYes, the algorithm to create our labels is publicly available on Github.\\n\\n\u2022 Any other comments?\\n\\nNone\"}"}
{"id": "USUkwg5pW6", "page_num": 21, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"B.5 Uses\\n\\n\u2022 Has the dataset been used for any tasks already? If so, please provide a description.\\nThe datasets have been used to benchmark existing state-of-the-art scribble-supervised semantic segmentation methods.\\n\\n\u2022 Is there a repository that links to any or all papers or systems that use the dataset? If so, please provide a link or other access point.\\nAll data and code that relate to the dataset are available from https://github.com/wbkit/Scribbles4All.\\n\\n\u2022 What (other) tasks could the dataset be used for? The dataset is usable for all training methods for sparsely supervised semantic segmentation. For instance, point label methods can be tested on the dataset as well. Furthermore, the dataset can be used for finetuning vision foundation models to a specific domain.\\n\\n\u2022 Is there anything about the composition of the dataset or the way it was collected and preprocessed/cleaned/labeled that might impact future uses? For example, is there anything that a dataset consumer might need to know to avoid uses that could result in unfair treatment of individuals or groups (e.g., stereotyping, quality of service issues) or other risks or harms (e.g., legal risks, financial harms)? If so, please provide a description. Is there anything a dataset consumer could do to mitigate these risks or harms?\\nTo our knowledge, no aspect of our work has exposure to the aforementioned risk or limitations.\\n\\n\u2022 Are there tasks for which the dataset should not be used? If so, please provide a description.\\nTo our knowledge, there are no specific tasks the dataset should specifically not be used. If in doubt, refer to the documentation of the underlying base datasets.\\n\\n\u2022 Any other comments? None.\\n\\nB.6 Distribution\\n\\n\u2022 Will the dataset be distributed to third parties outside of the entity (e.g., company, institution, organization) on behalf of which the dataset was created? If so, please provide a description.\\nThe dataset is made available to the general public under the stated license to use via GitHub under the CC BY 4.0 license. The links for access can be found here: https://github.com/wbkit/Scribbles4All.\\n\\n\u2022 How will the dataset be distributed (e.g., tarball on website, API, GitHub)? Does the dataset have a digital object identifier (DOI)?\\nThe central access point for all items related to the datasets is the project's GitHub repository (https://github.com/wbkit/Scribbles4All). The datasets are currently stored as tarballs on the public GitHub repository and can be downloaded from there.\\n\\n\u2022 When will the dataset be distributed?\\nThe dataset has been made available with the submission to NeurIPS 2024 Datasets and Benchmarks.\\n\\n\u2022 Will the dataset be distributed under a copyright or other intellectual property (IP) license, and/or under applicable terms of use (ToU)? If so, please describe this license and/or ToU, and provide a link or other access point to, or otherwise reproduce, any relevant licensing terms or ToU, as well as any fees associated with these restrictions.\\nThe datasets are distributed under the CC BY 4.0 license. As mentioned above, necessary base datasets may have different license terms. It is up to the user to evaluate if their use case is permissive.\\n\\n\u2022 Have any third parties imposed IP-based or other restrictions on the data associated with the instances? If so, please describe these restrictions, and provide a link or other access point to, or otherwise reproduce, any relevant licensing terms, as well as any fees associated with these restrictions. Our dataset provides scribble labels for underlying base datasets. The dataset of the base datasets may be subject to restrictions listed in the respective dataset licenses. Those can be found under the following links:\"}"}
{"id": "USUkwg5pW6", "page_num": 22, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Do any export controls or other regulatory restrictions apply to the dataset or to individual instances? If so, please describe these restrictions, and provide a link or other access point to, or otherwise reproduce, any supporting documentation.\\n\\nN/A\\n\\nAny other comments?\\n\\nNone.\\n\\nB.7 Maintenance\\n\\nWho will be supporting/hosting/maintaining the dataset?\\nThe dataset and repository will be maintained by the main author of the paper.\\n\\nHow can the owner/curator/manager of the dataset be contacted (e.g., email address)?\\nAs the owner/maintainer is the main author of the paper, he can be contacted via the e-mail address provided in the main paper (wolfgang.boettcher@mpi-inf.mpg.de). Additionally, the project team can be reached through the issue tracker of the provided GitHub repository.\\n\\nIs there an erratum? If so, please provide a link or other access point.\\nCurrently, there is no erratum.\\n\\nWill the dataset be updated (e.g., to correct labeling errors, add new instances, delete instances)? If so, please describe how often, by whom, and how updates will be communicated to dataset consumers (e.g., mailing list, GitHub)?\\nThe dataset may be updated by the maintainer in case of labelling errors or changes in the base datasets our datasets are based on. There will be no regular update interval but updates on request in case of errors. Changes will be announced on the GitHub repository of the datasets as this repository serves as the central access point to all aspects of the project.\\n\\nIf the dataset relates to people, are there applicable limits on the retention of the data associated with the instances (e.g., were the individuals in question told that their data would be retained for a fixed period of time and then deleted)? If so, please describe these limits and explain how they will be enforced.\\n\\nN/A\\n\\nWill older versions of the dataset continue to be supported/hosted/maintained? If so, please describe how. If not, please describe how its obsolescence will be communicated to dataset consumers.\\nThe datasets will be incorporated into the GitHub repository of the project alongside the scribble generation algorithms. All changes are transparent through git commits. Changes in the dataset will be announced in the README as well. As dataset changes are primarily planned to remedy labelling errors or similar issues, older versions will not be actively maintained.\\n\\nIf others want to extend/augment/build on/contribute to the dataset, is there a mechanism for them to do so? If so, please provide a description. Will these contributions be validated/verified? If so, please describe how. If not, why not? Is there a process for communicating/distributing these contributions to dataset consumers? If so, please provide a description.\\nIf others want to contribute and modify the dataset, there are no formalised procedures in place since it is not expected to have bigger changes in the lifecycle of the dataset. Contributions are nevertheless welcome and can be requested and coordinated by contacting the main author via e-mail or preferably by using the issue tracking tool of the provided GitHub repository.\\n\\nAny other comments?\\n\\nNone.\"}"}
{"id": "USUkwg5pW6", "page_num": 23, "content": "{\"primary_language\":\"en\",\"is_rotation_valid\":true,\"rotation_correction\":0,\"is_table\":false,\"is_diagram\":false,\"natural_text\":\"Checklist\\n\\n1. For all authors...\\n(a) Do the main claims made in the abstract and introduction accurately reflect the paper's contributions and scope? [Yes]\\n(b) Did you describe the limitations of your work? [Yes]\\n(c) Did you discuss any potential negative societal impacts of your work? [N/A] This paper provides scribble annotations for existing datasets for more robust benchmarking of scribble supervised segmentation. There is no negative societal impact.\\n(d) Have you read the ethics review guidelines and ensured that your paper conforms to them? [Yes]\\n\\n2. If you are including theoretical results...\\n(a) Did you state the full set of assumptions of all theoretical results? [N/A] This is a dataset paper without theoretical results.\\n(b) Did you include complete proofs of all theoretical results? [N/A] This is a dataset paper without theoretical results.\\n\\n3. If you ran experiments (e.g. for benchmarks)...\\n(a) Did you include the code, data, and instructions needed to reproduce the main experimental results (either in the supplemental material or as a URL)? [Yes] See https://github.com/wbkit/Scribbles4All and further details in the supplementary materials.\\n(b) Did you specify all the training details (e.g., data splits, hyperparameters, how they were chosen)? [Yes] The essential details are provided in Sec. 5.1. Further details are provided in the supplementary material.\\n(c) Did you report error bars (e.g., with respect to the random seed after running experiments multiple times)? [No] We did not have sufficient resources to run all training multiple times.\\n(d) Did you include the total amount of compute and the type of resources used (e.g., type of GPUs, internal cluster, or cloud provider)? [Yes] The used resources (type/number of GPUs) for a training are provided in Sec. 5.1. However, we did not keep track of the overall compute used during the entire project.\\n\\n4. If you are using existing assets (e.g., code, data, models) or curating/releasing new assets...\\n(a) If your work uses existing assets, did you cite the creators? [Yes]\\n(b) Did you mention the license of the assets? [Yes] The licenses are linked in the references.\\n(c) Did you include any new assets either in the supplemental material or as a URL? [Yes] We provide the automatically generated scribbles at https://github.com/wbkit/Scribbles4All\\n(d) Did you discuss whether and how consent was obtained from people whose data you're using/curating? [N/A] We did not collect new data.\\n(e) Did you discuss whether the data you are using/curating contains personally identifiable information or offensive content? [N/A] We did not collect new data.\\n\\n5. If you used crowdsourcing or conducted research with human subjects...\\n(a) Did you include the full text of instructions given to participants and screenshots, if applicable? [N/A] We did not use crowdsourcing or conduct research with human subjects.\\n(b) Did you describe any potential participant risks, with links to Institutional Review Board (IRB) approvals, if applicable? [N/A]\\n(c) Did you include the estimated hourly wage paid to participants and the total amount spent on participant compensation? [N/A]\"}"}
